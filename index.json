{
  "faq/revenue-model.html": {
    "href": "faq/revenue-model.html",
    "title": "FAQ",
    "keywords": "Whats my revenue model? As our Enterprise level sales are completed off-line, we currently recommend selecting 'Free' for this section."
  },
  "faq/sandbox-access.html": {
    "href": "faq/sandbox-access.html",
    "title": "FAQ",
    "keywords": "How do I access my Sandbox? We are currently building a shortcut to the sandbox on the MarketPlace, so in the next few weeks, you will be able to login to the \"MyApps\" page of MarketPlace and click the 'MarketPlace Provider Sandbox' icon. From here you will see your users, any default passwords, login URLs and other useful information. While we build this product, please continue to use the instructions found in your MarketPlace Welcome email to log in (if you no longer have this, please contact marketplace@temenos.com)."
  },
  "faq/sandbox-diagnostics.html": {
    "href": "faq/sandbox-diagnostics.html",
    "title": "FAQ",
    "keywords": "Can I perform Sandbox TAFJ Diagnostics? If you need to analyse the TAFJ, please contact marketplace@temenos.com"
  },
  "faq/sandbox-use.html": {
    "href": "faq/sandbox-use.html",
    "title": "FAQ",
    "keywords": "Can I use the Sandbox for commercial/demonstration/production use? Any production or commercial use (including any use for marketing or demonstration purposes) of the MarketPlace Provider Sandbox is explicitly prohibited unless you have obtained the express written consent of Temenos."
  },
  "faq/security-vulnerability.html": {
    "href": "faq/security-vulnerability.html",
    "title": "FAQ",
    "keywords": "I have noticed a security vulnerability with the Sandbox, what should I do? Notify us immediately via marketplace@temenos.com"
  },
  "faq/start-stop-sandbox-jboss.html": {
    "href": "faq/start-stop-sandbox-jboss.html",
    "title": "FAQ",
    "keywords": "Can I stop/start the Sandbox Jboss? If you need to prevent/start the Jboss running, please contact marketplace@temenos.com"
  },
  "faq/stop-start-delete-restore.html": {
    "href": "faq/stop-start-delete-restore.html",
    "title": "FAQ",
    "keywords": "Can I stop/restart/delete or restore the Sandbox? If your product/solution requires regular reboots, rebuilds, deletes or restarts, please contact marketplace@temenos.com"
  },
  "faq/suggest-feature.html": {
    "href": "faq/suggest-feature.html",
    "title": "FAQ",
    "keywords": "How do I suggest a feature for the Sandbox? Please contact us via marketplace@temenos.com"
  },
  "faq/t24-account-list.html": {
    "href": "faq/t24-account-list.html",
    "title": "FAQ",
    "keywords": "How do I get the T24 account list? Login to T24 BrowserWeb Go to USER menu > Account > Open Current Account In this screen, go up to More Actions button and select \"List Live File\" from drop down button Press Go button > entire account list with live records is displayed"
  },
  "faq/t24-copy.html": {
    "href": "faq/t24-copy.html",
    "title": "FAQ",
    "keywords": "Can I get a local copy of T24 to download? No, but you do have unlimited access to the MarketPlace Provider Sandbox for development purposes."
  },
  "faq/usage-model.html": {
    "href": "faq/usage-model.html",
    "title": "FAQ",
    "keywords": "Whats my usage model? We recommend selecting Multiple Users to ensure your product can have multiple consumers from the same prospect organisation."
  },
  "faq/what-is-marketplace-product.html": {
    "href": "faq/what-is-marketplace-product.html",
    "title": "FAQ",
    "keywords": "What is a MarketPlace Product? MarketPlace Product is a page describing your application. All MarketPlace Providers have the ability to create a page on the MarketPlace to advertise their product to Temenos customers. See below answers about content and product pages types."
  },
  "integration/30-minutes.html": {
    "href": "integration/30-minutes.html",
    "title": "Temenos Integration Framework - 30 Minutes",
    "keywords": "Integration Events Integration Framework Service is used by to perform event delivery to a middleware and to perform transformations. Integration Framework Service handles the following the high-level operations: Transformations Event Delivery through middleware Introduction This guide will help you to deep down into T24 Integration Events. In 3 Minutes Guide we accessed events in POSTMAN using Data Service and in this guide we’ll: Create T24 Integration Project Create Events Create Flow Create Events & Flow Design Studio Package Install the events View event flow in T24 Generate the events Event data in REST Client Prerequisites To complete this guide you need: Temenos Sandbox Temenos Design Studio Google Chrome browser – Download from here: Chrome POSTMAN chrome extension Either look for POSTMAN ReST client on any search engine OR Click this link Completed following guides: What is Temenos Sandbox Data Service 3 Minutes Guide Integration Events 3 Minutes Guide Create T24 Integration Project Launch Design Studio Make sure to select Integration Studio perspective: On top menu bar, go to Window > Perspective > Open Perspective > Other From the list, click on Integration Studio > OK In order to create a new T24 Integration Project go to File > New > T24 Integration Project: Choose a name for your project Check 'Enable project specific settings' Choose Connection Method as Web Service Insert IF Service URL: http:// localhost:9089 /axis2/ (replace 'localhost:9089' with your sandbox address or use your localhost, then '/axis2/') Insert your T24 User Name and Password After finishing above steps, you’ll get an empty project in your workspace: Create Events In created project, go to Events folder > click right > New > T24 Event Wizard Enter the Event name (File name) e.g. FT.event Click on Finish button. Exit Point Select the Exit Point Type and T24 Version details. In this example we have selected comma version of FUNDS.TRANSFER application and exit point INPUT.ROUTINE because we want the event data when user inputs something. Create Flow Now create the Flow for this Event. Click on the Flow tab and enter the Flow name There are two options: If you want to use any existing Flow, then click on Browse button and Select from existing ones: otherwise click on Edit: Select fields of interest: Save the changes: CTRL + S Publish Event Flow in T24 Right click on the project name, go to Integration Studio and click on Publish You should get a success message if no problem occurs during publishing the events. Check availability of the Flow in T24 Login to T24. Once you login, type IF.INTEGRATION.FLOW.CATALOG L L in command windows and press enter key. A new window will popup > select List Live File and there > search your Flow as per below example: You can see that the flow created in above steps is available in T24: When clicking on it, it will bring up the details of the Flow designed before: Alternatively you can directly type the name of the flow get it directly from T24 command windows: e.g. IF.INTEGRATION.FLOW.CATALOG S IntegrationDemo-FTFlow Initiate Transaction and See the Event Data in POSTMAN Follow this 3 Minutes guide to see events data in POSTMAN"
  },
  "integration/architecture.html": {
    "href": "integration/architecture.html",
    "title": "Architecture",
    "keywords": "Architecture The Integration Framework architecture allows an event to be emitted from any T24 transaction. Event Designer (EE) is the IDE (integrated development environment) used to define the event and the flow (that is message schema) which is emitted from T24. By using the Integration Framework, Customer can configure any transaction in T24 to create an event record in the database. Concepts: INTEGRATION FLOW Defines the layout of an XML message, which will leave T24 when a business event occurs. Created in SOA Event Designer (service-oriented architecture) at design-time, and referenced at run-time in order that an enriched message can be constructed and dispatched. FLOW CATALOG Is a T24 table, which contains details of all the Integration Flows, which have been created by the system integrators. Accessed both at design-time and at run-time. The Flow Catalog provides a component-based interface to Eclipse, Visual Studio and T24 itself. EVENT Is a generic term for the notification, which T24 emits when a business event occurs. EXIT POINT Defines the hook, or API, in T24 to which an Event can be linked. The Exit Point therefore defines when a notification message leaves T24. Exit Points can be linked to T24 VERSIONs, T24 Applications, or to component service operations. Exit point is to inform at which stage the event will be triggered."
  },
  "integration/create-package.html": {
    "href": "integration/create-package.html",
    "title": "Integration Framework Package",
    "keywords": "Create Package Learn how to create a package with Design Studio by following below steps. Before generating the package, first you need to verify that the created events and flows are successfully installed in T24 area by publishing the events and flows. Publish Project Right click on the name of the project, then select Integration Studio > Publish In the Console screen, status appears as 'Successfully Published': You have now successfully generated events and flows in Design Studio. Verify publication to T24 When the Event Designer project is published successfully to T24, the following applications are updated: IF.EXIT.POINTS: which holds records that binds the notification exit points with their integration flows. IF.INTEGRATION.FLOW.CATALOG : This is a catalog for the Integration Flow records. Integration Flows are created from SOA Studio to be stored in this table at design time. These flows are attached to Exit Points where the notifications are sent out from T24. The flow schema thus created will be stored in the FLOW.SCHEMA field of IF.INTEGRATION.FLOW.CATALOG table. Example: To see how to create or modify a customer record, please see Generate Events section. Packaging the IF Events and Flows If the above publication was successful, please follow next steps in order to generate the package: Right click on the project > Run As > Run Configurations Make sure you have following configurations: Double click on Maven Build ; Click on Browse File System button and select the project created in your workspace for which you want to generate a package; Type 'clean package' in Goals area; Click Run. You should receive a Build success message in the console And you should obtain the jar to be installed in the new environment: If the maven build is successful, the artefacts (jar) are stored under the target folder (see above). The .jar file is for TAFJ implementations."
  },
  "integration/events.html": {
    "href": "integration/events.html",
    "title": "Integration Framework Events",
    "keywords": "Events What is an Event A generic term for the notification which T24 emits when a business event occurs. Example: The Events are generated when a transaction happens and for that transaction an Integration Flow is attached. From the transaction and associated applications, the data enrichments are built as defined in the Flow and an XML representation of the Event is generated. This XML is confirmed to the schema representation (XSD) of the Flow and stored in a T24 events table called IF.EVENTS.INTERFACE.TABLE. Bellow steps will show how to create Integration Framework (IF) events in order to package them in a T24 development environment. What are the Benefits of Events Events enable messages generated by an application to be managed following a publish model. When events are generated, they are passed through system as XML files and registered event listeners receive the event information as XML. Each application view uses an XML schema as metadata to describe the XML data for events. This metadata enables the users to understand the data requirements of any application view event or service. Preparing Integration Project In a workspace created in your Design Studio, set-up Integration Studio Perspective: On top menu bar, go to Window > Perspective > Open Perspective > Other From the list, click on Integration Studio > OK In order to create a new T24 Integration Project go to File > New > T24 Integration Project: Choose a name for your project Check 'Enable project specific settings' Choose Connection Method as Web Service Insert IF Service URL : http:// localhost:9089 /axis2/ (replace 'localhost:9089' with your sandbox address or use your localhost, then '/axis2/') Insert valid T24 User Name Insert valid Password for the above T24 user The connection with T24 server is validated. Result: You are now connected to T24 and will be able to create events and flows. How to Create Events To create a new event, right click the events folder under the Integration Studio project. Specify the name of the event. Ensure that the event name has .event extension. Select 'Events' folder under Integration Studio project (called Sample) created before. Then choose New > T24 Event Wizard And set a file name When setting the file name, do not change the extension ‘.event’ With a T24 Connection available, Integration Designer retrieves the T24 data like: Version, Application, Exit Points, Application Fields etc, and populates the relevant drop down boxes. RESULT: New event created and exit point updated. Exit point is when an T24 event is emitted and triggered. Define the exit point in the new event. Exit point can be an input or authorization routine of a Version, an Application, or Component Service operation. A new option TSA.SERVICE is also added to define events for CoB or Service. Currently, the exit point is to inform at which stage the event will be triggered. On selecting the exit point type, the respective section is enabled, such that the exit point and the application/version name can be specified. (INPUT.ROUTINE is selected because we want to see the event data when user inputs something). Save the exit point: CTRL + S Create Overrides Overrides can be specified using the Overrides tab. This helps in implementing DISPO.PROCESSING, such that a particular user can authorize the record. Only Overrides with DISPO.PROCESSING set to FORCE are available. Overrides tab is enabled only for INPUT.ROUTINE exit point, as override is inappropriate during Authorized stage. Note Override option is supported only for INPUT.ROUTINE type of exit point for Version and Application. Example: Go to Customer.event tab screen Select Overrides Add overrides: To save the event changes press CTRL + S."
  },
  "interaction/episode4.html": {
    "href": "interaction/episode4.html",
    "title": "API Errors, Tests and Orchestration",
    "keywords": "API Errors, Tests and Orchestration"
  },
  "interaction/episode5.html": {
    "href": "interaction/episode5.html",
    "title": "API flow control and screen control",
    "keywords": "API flow control and screen control"
  },
  "interaction/faq.html": {
    "href": "interaction/faq.html",
    "title": "My Question",
    "keywords": "My Question"
  },
  "interaction/glossary.html": {
    "href": "interaction/glossary.html",
    "title": "Glossary",
    "keywords": "Glossary KeyWord Description API A pplication P rogramming I nterface – at its most basic level, allows your product or service to talk to other products or services. In this way, an API allows you to open up data and functionality to other developers and to other businesses. Design Studio Design Studio (DS) is an Integrated Development Environment that enables business and IT professionals to design elements for T24 Model Bank. The application provides its own “designers” using editors and text-based tools for developing elements called models. Enquiry An enquiry is used to fetch data from T24 in read-only mode. IRIS A runtime framework for Interaction, Reporting & Information Services. Member SDKs and design tools These are the tools provided to the fintechs in order to manage and extend the entire Temenos platform. A MarketPlace Provider can build Widgets and App within Edge Connect, APIs and Integration events, and manage T24 configuration within Design Studio. Model A model is a physical representation of a T24 resource, for example an enquiry, version or application. OData Open Data Protocol defines a set of best practices for building and consuming RESTful APIs and is based on widely-used technologies like HTTP, Atom publishing protocol, and JSON. There is an ever growing set of libraries available to interface the OData protocol with your preferred programming language or environment (e.g., Java, Javascript, .NET, PHP, Android, iOS, etc.). Resource In REST, everything is a resource and is identified by a unique identifier. REST REST (Representational State Transfer) is an architectural style, and an approach to communications that is often used expose your system in systematic way. Re presentational S tate T ransfer (REST) is an architectural style that specifies constraints, such as the uniform interface, that if applied to a web service induce desirable properties, such as performance, scalability, and modifiability, that enable services to work best on the Web. In the REST architectural style, data and functionality are considered resources and are accessed using Uniform Resource Identifiers (URIs), typically links on the Web. RIM RIM stands for Resource Interaction Model. A RIM file declares a set of resources that are made available as part of an interaction data service. Service Document Main entry point of IRIS data service. Version or Screen Version and Screen are the same thing in IRIS data services."
  },
  "interaction/index.html": {
    "href": "interaction/index.html",
    "title": "Interaction Framework",
    "keywords": "Interaction <!--- re-commited for modified images ---> Open up your banking platform to accelerate the pace of innovation around your services. Temenos' Interaction offering accelerates the pace of innovation around banks' services, by enabling them to easily expose their services to innovation partners and to any user-interface (UI). It also lets the bank create innovative combined services and efficiently manage UIs across multiple channels/devices/roles/languages. RESTful Architecture The Interaction Framework helps bring users and financial resources together through a flexible - and RESTful - architecture. Putting an interaction layer between the user agents and the resources they want to use removes the need for tight coupling. That makes it easier for financial institutions to manage the relationships between agents and resources, and allows user agents and resources to specialize at what they do best. Note A framework that is as open to change as you are. Benefits The Interaction Framework brings you the following benefits: Single pane of glass It enables user agents to be written for specific banking roles across multiple installed products. Consistent user experience It enables the user experience to be independent of the way the bank has chosen to implement its business systems. Configurable APIs It enables the bank to configure the APIs it provides and the interaction models they support. Support for standard clients It enables the bank to provide multiple models of banking for interaction and so support standard user agents. Helps you compete on mobile platforms It enables your financial organisation to configure support for specific mobile platforms, such as ApplePay. How it works Design-time Run-time: an open banking platform"
  },
  "interaction/interaction.html": {
    "href": "interaction/interaction.html",
    "title": "",
    "keywords": "Note Open up your banking platform to accelerate the pace of innovation around your services. Temenos' Interaction offering accelerates the pace of innovation around banks' services, by enabling them to easily expose their services to innovation partners and to any user-interface (UI). It also lets the bank create innovative combined services and efficiently manage UIs across multiple channels/devices/roles/languages."
  },
  "interaction/iris-data-service-and-odata-filters.html": {
    "href": "interaction/iris-data-service-and-odata-filters.html",
    "title": "IRIS Data Service and OData Filters",
    "keywords": "This user guide is the basic introduction of OData filters supported by IRIS. IRIS Data Service and OData Filters What is OData? OData is a data access protocol that defines the best practice for building and consuming RESTful APIs. For detailed information please visit http://www.odata.org/ What are the OData Filters? IRIS Data service supports OData. To query data from IRIS data service you need query options. These query options are called filters. We are going to discuss all available query options in IRIS Data Service and other options for data access. Assuming you are running your data service on localhost or if you are Temenos MarketPlace member you can get this information from Temenos Sandbox product. IRIS Data Service URL The default URL of IRIS Data service is: http:// your url address /DataServiceName-iris/DataServiceName.svc/GB0010001/enqCustomerInfos()?$filter=CusNo eq ‘66052’ |——————————–Service Root——————————–|–Service Document–|–Resource Name–|–Filter–| Note GB0010001 is company name and T24 specific Requesting Data • Request $metadata $metadata documents describe the Entity Data Model (EDM) for a given service, which is the underlying abstract data model used by OData services to formalize the description of the resources it exposes. URI for $metadata: http://127.0.0.1:8080/MarketPlaceDemo-iris/MarketPlaceDemo.svc/GB0010001/$metadata • Request Service Document Service document is the main entry point of IRIS Data Service and list all available resources in the data service. A user agent can find all resources from the Service Document URI for Service document: http://127.0.0.1:8080/MarketPlaceDemo-iris/MarketPlaceDemo.svc/GB0010001 • Request collection URI for collection in enqCustomerInfo resource http://127.0.0.1:8080/MarketPlaceDemo-iris/MarketPlaceDemo.svc/GB0010001/enqCustomerInfos( ) • Request individual item URI for an individual item in enqCustomerInfos resource http://127.0.0.1:8080/MarketPlaceDemo-iris/MarketPlaceDemo.svc/GB0010001/enqCustomerInfos(‘100285’ ) Querying Data Using System Query Options System query options are prefixed with $ character, these filter options are used to control the amount and order of the data. IRIS Data Service supports following System query options – all the filters self-explanatory according to name. $filter system query option Filter Name Example eq Equal /GB0010001/enqCustomerInfos()?$filter=CusNo eq ‘66052’ ne Not Equa /GB0010001/enqCustomerInfos()?$filter=CusNo ne ‘66052’ le Less Then /GB0010001/enqCustomerInfos()?$filter=Sector le ‘1000’ gt Greater Then /GB0010001/enqCustomerInfos()?$filter=Sector gt ‘2000’ ge Greater then and Equal /GB0010001/enqCustomerInfos()?$filter=Sector ge ‘2000’ le Less then and Equal /GB0010001/enqCustomerInfos()?$filter=Sector le ‘1000’ or Logical or /GB0010001/enqCustomerInfos()?$filter=Sector eq ‘1000’ or Sector eq ‘1000’ and and /GB0010001/enqCustomerInfos()?$filter=Sector eq ‘1000’ and AccountOfficer eq ‘1’ $orderby system query option This filter works only on collection and return the data either ascending or descending on the field you are querying Examples: • /GB0010001/enqCustomerInfos()?$orderby=Sector • /GB0010001/enqCustomerInfos()?$orderby=Sector asc • /GB0010001/enqCustomerInfos()?$orderby=Sector desc $select system query option This filter option will bring up only selected field and will work on Item and Collections Example: • /GB0010001/enqCustomerInfos()?$select=CusNo • /GB0010001/enqCustomerInfos()?$select=CusNo,Mnem • /GB0010001/enqCustomerInfos(‘66052’)?$select=CusNo,Mnem $top system query option This option will show top n items and works only on Collections Example: • /GB0010001/enqCustomerInfos()?$top=5 • /GB0010001/enqCustomerInfos()?$top=5&$select=CusNo,Mnem • /GB0010001/enqCustomerInfos()?$top=5&$select=CusNo,Mnem&$orderby=CusNo desc $skip system query option This option will skip the n number of items and works only on Collections Example: • /GB0010001/enqCustomerInfos()?$skip=1 • /GB0010001/enqCustomerInfos()?$skip=5&$select=CusNo,Mnem • /GB0010001/enqCustomerInfos()?$skip=5&$select=CusNo,Mnem&$orderby=CusNo desc $skip & $top together $skip & $top filters are very useful together when you want to pagination. Example: Suppose you want to display only 10 items in a page: Page-1 /GB0010001/enqCustomerInfos()?$top=10 OR /GB0010001/enqCustomerInfos()?$skip=0&$top=10 Page-2 /GB0010001/enqCustomerInfos()?$skip=10&$top=10 Page-3 /GB0010001/enqCustomerInfos()?$skip=20&$top=10"
  },
  "interaction/iris.html": {
    "href": "interaction/iris.html",
    "title": "Hypermedia API",
    "keywords": "The Interaction Framework makes it possible to build web services using Interaction, Reporting and Information Services (IRIS). IRIS is a collection of libraries that allows user agents to interact with the HATEOAS-based The RESTful architecture of the framework uses its own Domain Specific Language (DSL), known as RIM , to define what resources are available to user agents and how they can interact with them. In large part, IRIS is the Interaction Framework - it forms the hypermedia API that allows user agents to access resources from multiple resource providers. Hypermedia API The IRIS hypermedia API includes the following features. ETags The API uses ETags or Entity Tags with resources. An ETag is an identifier assigned by a web server to a specific version of a resource found at a URL. If the resource content at that URL ever changes, a new ETag is assigned. That makes it easier to check if two copies of a resource are the same or different. Server-side paging Paging refers to the pages of resource retrieval data that the framework keeps in its main memory. The API uses server-side paging, where the user agent makes the paging request and the Interaction framework controls the paging process. When a user agent asks for a specific page, the Interaction Framework returns only that page - the user agent can go to the tenth page of resource data with no cost to pay for skipping nine pages. The user agent may use query options, such as $top, $skip and $count to get the page they want. Caching The API uses caching to reuse previous responses for resource requests. Caching is one of the REST constraints of the Interaction Framework (see REST). Industry standards The API uses industry standards to make it easier to develop and use web services with the framework. These standards include: HTTP methods (GET, POST, PUT and DELETE). HTTP error codes, such as 400 Bad Request or 404 Not Found. Media types, such as application/atom+xml. URI syntax. The use of service documents and metadata to help organise resource data. Note: For more information about the standards the Interaction Framework supports, see Architecture . RIM The Resource Interaction Model (RIM) language ensures that the Interaction Framework meets its RESTful constraints by enforcing the resource naming, transition (linking), metadata and action semantics at runtime. When a user agent sends a request to the framework, specific RIM files are called that describe how the request is dealt with - what commands are sent to the resource provider and what form the response should take for the user agent."
  },
  "interaction/prospect.html": {
    "href": "interaction/prospect.html",
    "title": "Prospect API Listing",
    "keywords": "List of Prospect APIs Category API Name Description Customers verCustomer_Inputs Create, update an individual customer with authorization and retrieve all details about it verCustomer_Corps Create, update a corporate customer with authorization and retrieve all details about it verCustomers Create, update a customer without authorization and retrieve all details about the customer enqCustomerLists Return some details about customers: CusNo, CusMne, ShortName, AccountOfficer, Nat, Res, TargetName, SectorName, CusType and CusBranchName enqCustomerDetailss Return some details about customers: CusNo, CusMne, Name, Officer, Nat and Res Accounts verAccount_CaOpens Create current account with authorization and retrieve all details about it verAccount_SbOpens Create saving account with authorization and retrieve all details about it verAccounts Create account without authorization and retrieve all details about it enqPctAccounts Default list of accounts, return some details: AccId, AccMne, AccountOfficer, Product, Ccy, OnlineActualBal, LimitRef, PostingRestrict, IntBooking, ConditionGroup, Product enqAccountDetailss Return some details about account: AccNo, Customer, Name, Product, Ccy and AccountOfficer enqAcctBals Return balance details of account: AccNo, Name, LimitRef, Product, Ccy, WorkingBal, LedgerBal, ClearedBal, DateFrom, LockedAmt and UseableBal enqCustAccts Return the list of all accounts of a specific customer and the fields displayed are AccNo, Mne, Limit, AcctType, Ccy, WorkingBal, LedgerBal, ClearedBal, DateFrom, LockedAmt enqAccountStatements Return the statements of a specific account, like: AccNo, AccType, StatementDate, BookingDate, Reference, Description, ValueDate, Debit, Credit, ClosingBalance, TotalDebits, TotalCredits, ClosingBalance enqAcctStmtHists Return the account balance in statement date, fields returned: AccNo, Ccy, StatementDate, CurrPeriodInd, OpeningBalance, ClosingBalance, NextDueDate Statement Entries enqStmtLastNTxnss Entries from last N transactions of a specific account: AccNo, ClosingBalance, BookingDate, Reference, Description, ValueDate, Debit, Credit, ClosingBalance enqStmtEntTodays Entries from today business date for a specific account: BookingDate, Reference, Description, ValueDate, Amount enqStmtEntLasts Entries since last statement date for a specific account: AccNo, Customer, Ccy, BookingDate, Reference, Description, ValueDate, Amount enqStmtEntBooks Entries from booking date for a specific account: AccNo, Customer, Ccy, BookingDate, Reference, Description, ValueDate, Debit, Credit, ClosingBalance enqAdminFtTxnTypeConditions List of transaction types: TxnTypeId, Description, CommTypes, ForwValueMax, BackValueMax, DrAdviceReqdYN, CrAdviceReqdYN, MsgCondId, NostroXferType, MsgType, HisReversal enqPctStmtEntrys Default list of stmt entries, return some details: ID, Account, AmountLccy, Rate, AmountFccy, ValueDate, Reference Users verUsers Create Internal User without authorization and retrieve all details about it verEbExternalUsers Create External User without authorization and retrieve all details about it verEbExternalUser_TcibNews Create External User with authorization and retrieve all details about it Cards verCardIssue_Inputs Create Card Issue with authorization and retrieve all details about it verCardIssues Create Card Issue without authorization and retrieve all details about it Funds Transfer verFundsTransfers Create transaction without authorization and retrieve all details about it Teller verTeller_LcyCashins Cash deposit local - create transaction with authorization and retrieve details about it verTeller_FcyCashins Cash deposit foreign - create transaction with authorization and retrieve details about it verTeller_LcyCashwdls Cash withdrawal local (without Cheque) - create transaction with authorization and retrieve details about it verTeller_LcyCashchqs Cash withdrawal local - create transaction with authorization and retrieve details about it verTeller_FcyCashchqs Cash withdrawal foreign - create transaction with authorization and retrieve details about it Currency enqCurrencyLists List of all currencies and their description"
  },
  "interaction/reference.html": {
    "href": "interaction/reference.html",
    "title": "Interaction Reference",
    "keywords": "THIS PAGE IS COMING SOON!"
  },
  "interaction/rim.html": {
    "href": "interaction/rim.html",
    "title": "Interaction RIM",
    "keywords": "THIS PAGE IS COMING SOON!"
  },
  "interaction/service_document.html": {
    "href": "interaction/service_document.html",
    "title": "",
    "keywords": ""
  },
  "main/accounts.html": {
    "href": "main/accounts.html",
    "title": "Account Retail Banking",
    "keywords": "Accounts You can create different type of accounts in T24 like current accounts, saving accounts. Current Account To create a Current Account for your new customer: Login to T24 BrowserWeb Go to User Menu > Product Catalog Under Product Groups select Accounts > Current Accounts and then select the account type required: In the new window, insert the Customer Id , the currency of the new account and backward the effective date with one business day by clicking the calendar button. ( Note : this change of date is required if you want the customer's account to be available in the same day into the internet banking application. If left as default, the account will be visible only next day ). Press Validate button The screen will extend (a newly created arrangement is displayed) and you can see several default attributions. You can add more or change these configurations based on your requirements The new Account Number appears under 'Account' section User is advised to take note of the Customer ID and Arrangement ID to use them during the upcoming configuration Commit the deal A warning message is displayed regarding the Account Opening Agreement > Choose ' RECEIVED ' and press again the Commit button In case the arrangement currency is different from charge currency, an override message will pop-up > Click Accept Overrides > Transaction is complete. To authorise the record (you must authorise the record before it can be live into the database): Log out and log in again with a different user (the second user id you have received in your Welcome email) In the command line type AA.ARRANGEMENT.ACTIVITY A AAACT171074H9N7MSQ ( AA.ARRANGEMENT.ACTIVITY A + the arrangement id ) Press enter and then authorize the transaction (double tick button) Transaction is complete. Note You can create different account types with different currencies by using the same steps as above. Savings Account The steps to create a savings account are similar to the ones for a current account creation, the main difference is that you choose Savings Accounts instead of Current Account . Note Please follow this user guide to see how you can do a cash deposit to a newly created account."
  },
  "main/connect-app.html": {
    "href": "main/connect-app.html",
    "title": "Connect Your App with Temenos",
    "keywords": "Your integration project starts here As a MarketPlace Member, you have access to the MarketPlace Provider Sandbox, to help build, test and demonstrate your product's integration to the Temenos T24 backend (our Customers). The MarketPlace Provider Sandbox offers a live instance of T24, complete with model bank data, running on a secure virtual machine. Connect your product to show off its unique features and benefits in a live demonstration, right from your Product Page on the Temenos MarketPlace. Welcome email New MarketPlace Providers are sent a welcome email, containing links to the following MarketPlace Provider Support tools/services: Provider Tools available via MarketPlace The MarketPlace Provider Sandbox (with Sign-in details) Retail Internet Banking Application installation guide The API Portal to call and test the current public Temenos APIs The Support Forum, where you can read and post technical questions Note If you have not yet received your welcome email or need it to be re-sent, please let us know . How can I interact with the Sandbox? Invoke APIs The sandbox exposes a series of REST APIs that can be invoked in order to create, read and/or update records in it. Some of the available functionalities of these APIs are: retrieving account details like available balance, transaction history, etc. creating Payments and retrieving list of payments creating fund transfer payments and SEPA payments, retrieving details of a fund transfer, etc. Please check the API documentation section for more details. Configure T24 The sandbox is also exposing an user interface, a BrowserWeb URL, that is allowing you to directly access the T24 area and to create , read and update the records you desire in the MarketPlace Provider Sandbox. The exposed APIs and the BrowserWeb should help you to fulfil most end-user demo requirements. Warning The MarketPlace Provider Sandbox is a shared resource, so we are unable to guarantee that your data will be retained in the state you left it in. We also recommend avoiding the use of confidential or personal data when Creating/Updating records. Note Please find below a list of actions that are possible to be done into the T24 BrowserWeb interface: Login to BrowserWeb Create Customer Create Accounts Cash Deposits Create external user that will allow you to connect to the Internet Banking application. Login to Internet Banking application"
  },
  "main/customer.html": {
    "href": "main/customer.html",
    "title": "Create Customer",
    "keywords": "Customer A Customer record holds all the basic information about a customer. Ideally only one Customer record should exist for each bank customer. To create a customer record: Login to T24 BrowserWeb Under User Menu go to Customer > Individual Customer Once open, the new screen will automatically generate a Customer Id To see which are the minimum fields required, click Validate button > You will get an 'Input missing' warning with following fields shown: Mnemonic Short Name.1 Full Name.1 Sector Gender Warning 'Date of Birth' field is not mandatory, but if you wish to assign later, for example, a current account, as long as the age is not defined, the system will consider that the customer is not eligible ( minor age ) and will not allow the account creation. Fill all mandatory fields and press Commit button To authorise the record (you must authorise the record before it can be live into the database): Log out and log in with a different user (the second user id you have received in your Welcome email) Go to User menu > Customer > Authorise/ Delete Customer > Find the customer created > then Click the Authorise button The Customer is now registered and appears in Live Files records."
  },
  "main/dedicated_old.html": {
    "href": "main/dedicated_old.html",
    "title": "Dedicated Sandbox",
    "keywords": "MarketPlace Dedicated Sandbox As a MarketPlace Premium Member, you have access to a MarketPlace Dedicated Sandbox, to help build, test and demonstrate your product's T24-integration via the Temenos MarketPlace. The Dedicated Sandbox is a live instance of T24, containing model bank data running on a secure virtual machine that will be available only for you and where you can complete following operations: Create design studio package and upload to T24 using GitLab Create new API package and upload to T24 using GitLab Deploying other localjars using Gitlab Accessing the Dedicated Sandbox You can access the MarketPlace Dedicated Sandbox by going to your MyApps page in MarketPlace. Clicking on the sandbox product in MarketPlace will redirect you to your organization link address. You will be sent an email with the user and password required to connect. Here you will have access to one T24 dedicated sandbox running the Retail Suite Application. Note The sandbox is not currently available via MarketPlace, so you will receive all the details you need to access it via your Temenos MarketPlace Welcome email. The Environment Information page contains 3 important sections: T24 Release section that gives access to the T24 area through browser. Database section that indicates the status of the database and gives access to a copy of the database of the T24 area. Repository section that gives access to the gitlab repository that allows users to deploy their packages, plugins, localjar files, etc. T24 Release section - available actions By selecting “ GO TO APPLICATION ”, a new tab containing the T24 BrowserWeb URL will open in a new browser window. The username and password to be used here, will have been sent via email. By selecting “ MONITOR APPLICATION ” the TAFJEE Servlets page will open in a new browser tab and from here you can check the following sections: Diagnostic section: provides details about your TAFJ environment, get routine compilation details, etc. Execution section: run services, etc. Troubleshooting section: access log files, commo files, etc. Clicking the \" Export Environment \" button will generate a zip file on the sftp.temenos.cloud portal containing: all jar files deployed in T24 sandbox and the correspondent module.xml file; the content of the default folder of T24; all war files deployed in the T24 sandbox and the jboss server log. The Increase instances button allows a user to increase the number of T24 VMs in cloud in order to improve performance. The Decrease instances button allows a user to decrease the number of T24 VMs in cloud. The Rebuild application button allows a user to recreate their environment. This action will re-build the environment based on packages deployed in the gitlab repository. If the repository is empty the environment will be as new. If the repository contains a package, the environment will be re-built with that package included in the build. The Start application button allows a user to start the jboss. The Stop application button allows a user to stop the jboss. Database section - available actions By clicking the \" Export database \" button a zip file will be generated in the sftp.cloud.temenos portal which will contain the current database of the sandbox. Note: This database can be used as a backup that can be deployed later on into the sandbox as a duplicate for testing/development or for local development before deploying to the cloud. Repository section This section displays the gitlab repository correspondent to your T24 sandbox. In order to be able to deploy changes into the sandbox please: Generate a SSH key and save it. Clone the gitlab repository. Useful information PSD2 APIs can be easily accessed by using the following address https://[your sandbox address]/irf-psd2/api/v1.0.0/ concatenated with the Request URL mentioned into each API section. Also, a general overview about the APIs can be checked here . For guidance on how to create users to access the organization link please check here . For guidance on how to export environment details please check these steps . For guidance in how to investigate if whatever was committed in gitlab was done correctly please check instructions mentioned here ."
  },
  "marketplace/sandbox-comparison.html": {
    "href": "marketplace/sandbox-comparison.html",
    "title": "Temenos Sandbox Comparison",
    "keywords": "Temenos Sandbox is a cloud-base service which helps you test, develop and integrate your innovative solutions with Temenos Core Banking software. Our shared sandbox gives access to T24 BrowserWeb with credentials provided by our team and offers also the possibility to create an external user to connect to Internet & Mobile Banking applications. Our dedicated sandbox is a self-service environment management which gives the opportunity to accelerate the integration process and allows our top customers to deploy your applications. Temenos Dedicated Sandbox Scale up/down, start, stop, delete and export data from your environment(s). Export the application (T24) log data, monitor the status of the environments (started, starting, stopped, stopping, rebuilding), and see the results of any application deployments. Restore your database via environmental rebuild to reset the environment and try a different product. Temenos Sandbox Data Sheet SHARED/SELF-SERVICE DEDICATED Accessible via standard $4,000 MarketPlace Provider Membership RetailSuite Template 201711 VARIOUS FrontOffice / Channels / Analytics / Payments & Core Templates COMING SOON Create Read Update Delete data via API Self-service User Management Create Read Update Delete data via BrowserWeb Multiple Environments Data Retention Database Management (Import/Export) Environment Management (Create/Rebuild/Export/Delete) Environment Configuration Export Environment .jar File + exportmodule.xml Export Stop/Start Environment Jboss Environment Jboss Server Log Export Perform Environment TAFJ Diagnostics Access Environment Log Files Access Environment commo Files Localhost Environment Version Create & Upload Design Studio Packages* Create & Upload New API Package* Deploying misc. localjars* Using Git* - For more information about MarketPlace membership or the shared, self-service Sandbox contact – MarketPlace@temenos.com . - For more information about the Temenos Cloud Innovation Platform contact – TemenosCloud@temenos.com Data and Security Considerations The Temenos Development Platform is for non-production use only, unless otherwise stated. No 'personal data', 'confidential' or 'sensitive' data should be stored in any Environment. - Data is stored in UK datacentres - Data is encrypted in transit - Access to management facilities requires username/password and/or SSH certificates - Environments can be deleted immediately by the user - All client-related data will be deleted by Temenos 60 days after the termination of the agreement Control the application The Temenos core banking template exposes endpoints for the user interface and TAFJEE management screens that allows you to control COB job services."
  },
  "marketplace/sandbox.html": {
    "href": "marketplace/sandbox.html",
    "title": "Temenos Sandbox",
    "keywords": "Temenos Sandbox Temenos Sandbox is designed to help you develop solutions for T24, Temenos’ core banking software. Temenos Sandbox is a web-based service that gives you access to: Resources Description Core Banking Suite A recent release of our fully functional model bank. Internet Banking API Temenos Connect Internet Banking developer package. Mobile Banking API Temenos Connect Mobile Banking developer package. Core Banking API Most commonly used banking API in ReST format Design Studio Create integration event, T24 interface and banking API Temenos UXP Build business application and integrate with T24 Developer Tools Member SDKS and Design Tools Use these resources to design your widgets, events packages & Data Service APIs Design Studio The Design Studio ( DS ) Workbench application is an integrated graphical environment that enables business and IT professionals to design elements for T24 Model Bank. The application provides his own \"designers\" using editors and text-based tools for developing elements called: models. Design Studio is the Integrated Development Environment (IDE) for realizing T24 design time tasks. It provides import and edition of resources (local ref, versions, enquiries...). All items edited in DS intend to be packaged and deployed on T24 runtime environment. The T24 data these resources return can interface with other systems or be exposed in a browser. Temenos UXP Temenos UXP formerly edgeConnect is a graphical development tool which enables you to build browser based business solutions. It allows you to develop solutions without any knowledge of the technology used to deliver them. Once built, complete solutions or parts of solutions can be easily reused and re-branded, allowing rapid development of new solutions. Accessing Temenos Sandbox To access Temenos Sandbox Go to Temenos MarketPlace Click Log In Enter your username and password. From the menu bar, select MyApps. In Applications, when you click Temenos Sandbox Temenos sandbox icon. Temenos Sandbox page will open where you can find the all informations. Sandbox access to other users Multiple user can also work on the Temenos Marketplace Membership products, here is the procedure to invite other user into your company and grant the access of the Membership products. Invite user(s) Invite users to give access to Temenos Sandbox Login to Temenos MarketPlace with your credentials Click on Manage → Account . Click on Dashboard according to below screen shot and type the user’s email address and click on invite. Invitation will sent to the user on the behalf of you. Assign Products Assigning Membership products to other user will give full access on the Temenos Sandbox and this will be Shared Sandbox to all users you assigned. Login to Temenos MarketPlace with your credentials Click on Manage → Account . Click on Assign Apps according to below screen shot and select the product you want to assign. After selecting the product you will see list of the users, select the user you want to assign the product and click on Save Changes button. After click on the Save Changes user will able to see the product(s) in his My Apps section"
  },
  "marketplace/sandbox_assign.html": {
    "href": "marketplace/sandbox_assign.html",
    "title": "Temenos Sandbox",
    "keywords": "Sandbox access to other users Multiple user can also work on the Temenos Marketplace Membership products, here is the procedure to invite other user into your company and grant the access of the Membership products. Invite user(s) Invite users to give access to Temenos Sandbox Login to Temenos MarketPlace with your credentials Click on Manage → Account . Click on Dashboard according to below screen shot and type the user’s email address and click on invite. Invitation will sent to the user on the behalf of you. Assign Products Assigning Membership products to other user will give full access on the Temenos Sandbox and this will be Shared Sandbox to all users you assigned. Login to Temenos MarketPlace with your credentials Click on Manage → Account . Click on Assign Apps according to below screen shot and select the product you want to assign. After selecting the product you will see list of the users, select the user you want to assign the product and click on Save Changes button. After click on the Save Changes user will able to see the product(s) in his My Apps section"
  },
  "marketplace/who-can-join.html": {
    "href": "marketplace/who-can-join.html",
    "title": "Who can Join?",
    "keywords": "Anyone can join as a MarketPlace user , which allows consumption of all available content on the platform. To join MarketPlace as a provider , either as an individual, a company or an existing Temenos partner, you need to: Register as a Provider Prepare your MarketPlace product page Prepare your organisation for online sales Help us promote your product at launch Membership costs $4,000 per annum and provides a cloud sandbox, documentation, promotional activities and much more . The solutions available include UI widgets and components, API bundles, integration packages and packaged apps, all of which can add increased functionality and significant business value to existing solutions based on Temenos products. All products published are thoroughly checked by Temenos and once approved, they are accessible via MarketPlace ."
  },
  "quickstart/architecture.html": {
    "href": "quickstart/architecture.html",
    "title": "Products, Frameworks and Architecture",
    "keywords": "Platform product company Temenos products are designed to run on a single platform, either together or in multiple instances. The platform supports multiple entities in a single instance, multiple tenancy, and multiple instances. As we acquire or develop new products, they are integrated onto the platform using a four stage approach: integration; interaction; platform; and component. Temenos is committed to model driven design and development for all its products. We have design studios for Temenos Connect, Temenos T24 and Triple’A Plus. Architecture Banking software is vital for a bank to perform its functions, remain competitive and to deliver products and services to its customers. Financial institutions rely on software not only to manufacture and service but also distribute the products and services they themselves sell to their customers. Therefore their software must be extensible, upgradeable and of high performance. This can only be achieved if the banking software has a strong architecture that can evolve as the banks, the technology and the marketplace evolves. The Temenos architecture is built for extensibility, upgradeability and performance. It is founded on six enterprise frameworks: Integration – Agility enables a real time enterprise and enables the information system to change seamlessly with the bank’s organisation. Interaction – Usability enables Temenos and others to write user applications that go across Temenos products and others to meet the needs of different users. Platform – Flexibility enables Temenos products to run on IBM, Oracle, Microsoft and Open platforms as well as the cloud, allowing banks to choose how to run our banking software. Component – Maintainability enables online update and incremental upgrade. It also supports the full software development lifecycle. Data – Performance enables Temenos to have extensible schemas while scaling to tens of thousands of transactions a second in online and bulk processing. Design – Productivity enables model driven development for channels, front office and middle/back office processing. For further information, check out this short introduction to our sandbox. Alternatively, watch this video from John Schlesinger, Temenos Chief Enterprise Architect."
  },
  "quickstart/faqs.html": {
    "href": "quickstart/faqs.html",
    "title": "Quickstart FAQ",
    "keywords": ""
  },
  "quickstart/index.html": {
    "href": "quickstart/index.html",
    "title": "Quickstart page",
    "keywords": "Start with Core Banking Everything starts with core. The Temenos Core Banking solution is an open, integrated and real-time platform. Start with Channels Extend your customers reachability by delivering products and services for any business line. Start with Interaction Bringing users and financial resources together through a flexible and RESTful architecture. Start with Integration Be more agile, competitive, profitable, scalable and reliable with near-real-time event-based integration. Start with UX Platform Temenos UXP is a graphical development tool which enables you to build browser based business solutions. Start with Design Studio Integrated graphical environment that enables business and IT professionals to design elements for T24."
  },
  "template/wide/LICENSE.html": {
    "href": "template/wide/LICENSE.html",
    "title": "",
    "keywords": "MIT License Copyright (c) 2017 Mathew Sachin Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "apis/provider-apis/overview.html": {
    "href": "apis/provider-apis/overview.html",
    "title": "",
    "keywords": "h1, h2, h3, h4 { color:#005294; border-bottom: 1px solid #eee } a { color: #005294;} nav a { color: #fff;} td { width: 50%; vertical-align: top; } table { border: 0; } The Temenos Provider APIs expose Temenos product business capabilities as RESTful (Representational state transfer) APIs defined in the OpenAPI Specification (OAS). The provider APIs are semantically versioned and the Temenos Interaction Framework (IRIS) product allows a single provider API to be mapped to pre-defined, publicly exposed APIs that implement standard API definitions e.g. Open Banking API, Berlin group, STET etc. The Temenos Provider APIs are grouped into the top-level business domains as below Party customers Allows the creation, viewing and management of customers. This includes associated information such as their address, custom fields and identification documents. It is also possible to search for customers by various criteria. customers-documents Allows the creation, viewing and management of customer documents and images. customers-messages Allows the creation, viewing and management of messages to and from customers. Product productConditions Retrieves product condition information productGroups Retrieves product group information that is used by the legal entity products Retrieves product information, either as a full catalog or by product line and / or product group projects Allows the creation, viewing and management of product builder projects to create and publish products properties Retrieves product property information, used in building products productLines Retrieves product line information that is used by the legal entity interestConditions Retrieves interest condition information for products, groups and lines Holdings accounts Retrieves balances, cards and transaction information on accounts arrangements Retrieves balances and transaction information for all products except accounts customers Retrieves balances and transaction information for a customer's accounts and arrangements instruments Retrieves position information for a legal entities own book portfolios limits Retrieves limit information for a customer, and allows checking and managing limits utilized by a party. nostros Retrieves Nostro position information for the legal entity portfolios Retrieves valuation, holdings and transaction information on portfolios reports Retrieves various named holdings reports by customer and account / arrangement treasury-currencies Retrieves currency position information for the legal entity treasury-currencyPairs Retrieves currency pair position information for the legal entity Orders derivativeOrders Allows the creation, viewing and management of derivative orders forexOrders Allows the creation, viewing and management of forex orders paymentOrders Allows the creation, viewing and management of payment orders payments Allows the creation, viewing and management of payments and transfers paymentStops Allows the creation, viewing and management of payment stop requests. Also enables blocking and activation of cards. securityOrders Allows the creation, viewing and management of security orders securityTransferOrders Allows the creation, viewing and management of security transfer orders Meta apis Retrieves information about the API ecosystem, both reference information and runtime metrics queries Allows the creation, viewing and management of query definitions screens Allows the creation, viewing and management of screen definitions tables Allows the viewing of table definitions Reference balanceTypes Retrieves human readable descriptions of balance types brokers Retrieves the brokers that are used by the organization companies Retrieves the legal entity information that is used by the organization countries Retrieves the country information that is used by the legal entity, either a list of countries or a specific country by ISO 3166-1 alpha-2 code. currencies Retrieves the currency information that is used by the legal entity, either a list of currencies or a specific currency by ISO 4217 code. dates Retrieves the working day information that is used by the organization, either a list for all legal entities or for a specific legal entity. interestBases Retrieves the interest bases information that is used by the legal entity periodDates Retrieves periodic interest information that is used by the legal entity rateTexts Retrieves human readable descriptions of interest conditions treasury Retrieves treasury configuration that is used by the legal entity treasury-dealers Retrieves the dealers that are used by the organization PSD2 accounts These APIs are used to get the account information. fundsTransfer These APIs are used to create and get FundsTransfer records. payments These APIs are used to create and get the PaymentOrder records."
  },
  "faq/what-is-marketplace.html": {
    "href": "faq/what-is-marketplace.html",
    "title": "FAQ",
    "keywords": "What is MarketPlace? Developed as a self-service, online digital store, MarketPlace is a platform that connects fintech providers with some of the worlds largest financial institutions focused on sourcing innovation. MarketPlace presents an unprecedented business opportunity to distribute integrated third-party products and services to Temenos customers."
  },
  "faq/where-is-the-sandbox.html": {
    "href": "faq/where-is-the-sandbox.html",
    "title": "FAQ",
    "keywords": "Where is the Sandbox I am accessing? The Sandbox is hosted in UK datacentres."
  },
  "integration/3-hours.html": {
    "href": "integration/3-hours.html",
    "title": "Create Events",
    "keywords": "Bellow user guide shows how to create Integration Framework (IF) events and flows in order to package them in a T24 development environment. Events What is an Event A generic term for the notification which T24 emits when a business event occurs. Example: The Events are generated when a transaction happens and for that transaction an Integration Flow is attached. From the transaction and associated applications, the data enrichments are built as defined in the Flow and an XML representation of the Event is generated. This XML is confirmed to the schema representation (XSD) of the Flow and stored in a T24 events table called IF.EVENTS.INTERFACE.TABLE. Bellow steps will show how to create Integration Framework (IF) events in order to package them in a T24 development environment. What are the Benefits of Events Events enable messages generated by an application to be managed following a publish model. When events are generated, they are passed through system as XML files and registered event listeners receive the event information as XML. Each application view uses an XML schema as metadata to describe the XML data for events. This metadata enables the users to understand the data requirements of any application view event or service. Preparing Integration Project In a workspace created in your Design Studio, set-up Integration Studio Perspective: On top menu bar, go to Window > Perspective > Open Perspective > Other From the list, click on Integration Studio > OK In order to create a new T24 Integration Project go to File > New > T24 Integration Project: Choose a name for your project Check 'Enable project specific settings' Choose Connection Method as Web Service Insert IF Service URL : http:// localhost:9089 /axis2/ (replace 'localhost:9089' with your sandbox address or use your localhost, then '/axis2/') Insert valid T24 User Name Insert valid Password for the above T24 user The connection with T24 server is validated. Result: You are now connected to T24 and will be able to create events and flows. How to Create Events To create a new event, right click the events folder under the Integration Studio project. Specify the name of the event. Ensure that the event name has .event extension. Select 'Events' folder under Integration Studio project (called Sample) created before. Then choose New > T24 Event Wizard And set a file name When setting the file name, do not change the extension ‘.event’ With a T24 Connection available, Integration Designer retrieves the T24 data like: Version, Application, Exit Points, Application Fields etc, and populates the relevant drop down boxes. RESULT: New event created and exit point updated. Exit point is when an T24 event is emitted and triggered. Define the exit point in the new event. Exit point can be an input or authorization routine of a Version, an Application, or Component Service operation. A new option TSA.SERVICE is also added to define events for CoB or Service. Currently, the exit point is to inform at which stage the event will be triggered. On selecting the exit point type, the respective section is enabled, such that the exit point and the application/version name can be specified. (INPUT.ROUTINE is selected because we want to see the event data when user inputs something). Save the exit point: CTRL + S Create Overrides Overrides can be specified using the Overrides tab. This helps in implementing DISPO.PROCESSING, such that a particular user can authorize the record. Only Overrides with DISPO.PROCESSING set to FORCE are available. Overrides tab is enabled only for INPUT.ROUTINE exit point, as override is inappropriate during Authorized stage. Note Override option is supported only for INPUT.ROUTINE type of exit point for Version and Application. Example: Go to Customer.event tab screen Select Overrides Add overrides: To save the event changes press CTRL + S. Flows What is a Flow A flow defines the layout of an XML message which will leave T24 when a business event occurs. What are the Benefits of Flows The flow is referenced at run-time in order for an enriched message to be constructed and dispatched. (The Run-Time Engine -RTE = system platform, database, and language independent, which provides maximum flexibility with its multi-presentation engine. It supports the development of applications that serve thousands of users simultaneously). Define or Create a Flow Under Customer.event, click Flow tab Enter the flow name (Customer) Click update the Event fields to be added and select the overrides. Click 'Edit' button to launch the Flow editor. In the next screen, select from 'Field' all the strings required (of interest). Double click a selection of fields (top right) to add them to the Flow Enrichments as in the picture below. Application should already be set to CUSTOMER (if not, select it now) and the Field control prefilled with all fields available from this application (as available in the connected T24 instance). (Include for example some name and address fields) Additional information: Fields selected may be reordered or removed. Field control is prefilled with all fields available from this application (as available in the connected T24 instance). Attach only valid flows to the integrator. For example, attaching a FundsTransfer flow to a Teller version will result in a publish error, as the fields in FundsTransfer are not available in Teller. On Customer.flow tab, check below Source, where you can view the ‘source code’ for the exit point and data flow definitions in the respective source tabs. Both (.event and .flow) are xml and can be integrated to a source control system and versioned. The option Event Priority is introduced to set the priority for event delivery of the event type that is under design when using integration service. The default priority is 0 and can be edited to a positive integer. This value gets stored in the EVENT.PRIORITY field of IF.INTEGRATION.FLOW.CATALOG application. The Include before image option adds the existing transaction data to the generated event. The Process updates only option includes only the changed field value for the current transaction to the event and ignores all other fields while generating the event. The Include Digital Signature option publishes the flow with a new attribute “Include Digital Signature” to the flow. This enables the event messages to be digitally signed. The implementation for digitally signing the message need to be implemented by the user and the details are available in the Inbound Security Service User Guide. The Display Name column in the Flow Enrichments section is an editable column. Once a T24 field is added to the schema, this column allows to specify a different name to the field only in the flow to make the names more meaningful. This does not change the field name in the underlying application. Note The options “Include Before Image” and “Process Updates Only” are applicable only for Application, Version and TSA.SERVICE exit points. Flow Wizard Join (Optional) It is possible to add join field in the flow. A join field is a field that is used to retrieve the related information. To build a join field: Example: • Select the field through which the join has to be defined. (Here 'ACCOUNT.OFFICER') • Click on 'Add Join' button and a popup window as shown below appears. • Supply an XML-friendly Display Name (Here 'AccountOfficerName') • Select the application from 'Application' drop down box from which the join retrieves the data. (Here 'DEPT.ACCT.OFFICER') • Select the field from the 'Field Name' drop down box. This is the field from where the join field gets the value. (Here 'NAME') • Click 'Add' button to add to the join definition. You can see Join Definition: e.g. CUSTOMER>ACCOUNT.OFFICER>DEPT.ACCT.OFFICER>NAME Repeat step 3-6 till the join field is completed in the 'Join Definition' field. Click Finish Observe the new Flow Enrichment: Save all the changes: CTRL + S Create Package Learn how to create a package with Design Studio by following below steps. Before generating the package, first you need to verify that the created events and flows are successfully installed in T24 area by publishing the events and flows. Publish Project Right click on the name of the project, then select Integration Studio > Publish In the Console screen, status appears as 'Successfully Published': You have now successfully generated events and flows in Design Studio. Verify publication to T24 When the Event Designer project is published successfully to T24, the following applications are updated: IF.EXIT.POINTS: which holds records that binds the notification exit points with their integration flows. IF.INTEGRATION.FLOW.CATALOG : This is a catalog for the Integration Flow records. Integration Flows are created from SOA Studio to be stored in this table at design time. These flows are attached to Exit Points where the notifications are sent out from T24. The flow schema thus created will be stored in the FLOW.SCHEMA field of IF.INTEGRATION.FLOW.CATALOG table. Example: To see how to create or modify a customer record, please see Generate Events section. Packaging the IF Events and Flows If the above publication was successful, please follow next steps in order to generate the package: Right click on the project > Run As > Run Configurations Make sure you have following configurations: Double click on Maven Build ; Click on Browse File System button and select the project created in your workspace for which you want to generate a package; Type 'clean package' in Goals area; Click Run. You should receive a Build success message in the console And you should obtain the jar to be installed in the new environment: If the maven build is successful, the artefacts (jar) are stored under the target folder (see above). The .jar file is for TAFJ implementations. Install Package Overview To deploy a set of model files, they must be packaged using the packager and installed into a T24 area using the installer. The packager is a DS process that builds T24 model bank into one single package that can be installed on remote T24 environment. The packager gathers from your workspace all files to assemble: Basic files Data files All DS generated model files Packager supports TAFJ environments, generating one .jar you can deploy. Prerequisites Follow these steps in order to create package Install TortoiseGit As next step, please refer to following documentation in order to use GitLab Repository for MarketPlace Sandbox and create a Repository clone Steps Trace the 'Target' folder on your local machine is the new jar’s location. (e.g. D:\\MKP\\DesignStudio\\workspace1\\Sample\\target) Manually copy the JAR, containing compiled basic routines, available inside the JAR from [Project-name]-packager\\target folder to the packages folde r. Note Packages folder refers to the one found in GitLab Repository folder in the environment created by cloning GitLab Repository Follow this user guide to learn how to deploy a T24 package to the Sandbox by using TortoiseGit commands. Verify deployment in the browser Type IF.EXIT.POINTS in the command line and search for your application Type IF.INTEGRATION.FLOW.CATALOG in the command line and then the name of the flow created Note After you have validated the changes against T24 development environment, you can create and deploy the package on one or many environments. Generate Events To see more about what is an event and what are the benefits of it, please check this user guide . Note Any change of records will generate an EVENT. Change a record to generate an event Below example shows a few changes into a customer record: Login to T24 Browser and type CUSTOMER, in command line (Use comma to create an authorized record) Type a customer ID and press enter or edit button Make some changes or add information in the fields displayed and commit the deal (validate by left corner button) These modifications are generating an event record. Next, check View Events section to learn how to identify them. View Events To see what triggers an event , please check first Generate Events section from above. View Event Record Any change (create/ amend) of a record can be observed as an event record in IF.EVENTS.INTERFACE.TABLE. The event created in previous example from Generate Events section can be seen as follows: Type IF.EVENTS.INTERFACE.TABLE in the command line On the new screen, go to List Live File and press validate Go to the Selection Screen button (search). Below is an example of one of the options to search the event created before: To display the event data details, click on the magnifier button: Event Delivery with Jboss Integration Service provides the asynchronous Event delivery functionality through a store and forward interface table and a TSA Service. The Events are generated, for example, when a transaction happens for which an Integration Flow is attached. Performing a transaction triggers an event in integration framework and this event will be consumed by JMS queue or by a middleware, eventually. From the transaction and associated applications, the data enrichments are built as defined in the Flow and an XML representation of the Event is generated. This XML would be confirming to the schema representation of the Flow and stored in the IF.EVENTS.INTERFACE.TABLE within T24 into the EVENT.DATA field. The transaction continues and gets completed normally. A dedicated TSA Service called INTEGRATION.SERVICE needs to be executed to deliver the events through CALLJEE method. When the event delivery happens this data will be transformed to XML value and delivered to JMS Queue. Consuming Events IF Event messages are delivered always in XML format. By running the INTEGRATION.SERVICE, the XML message is delivered to the application server JMS Queue by having the configurations in Parameter record and JMS queue configurations in the application server. Default parameter record containing the queue name is given below. And the application server side configurations are already handled for the above default queue. With this above configuration XML Message can be delivered to the JMS Queue, later this has to be consumed by a listener program. The custom listener program can be built in Java run in the same application server and then the message has to be translated to understandable format for the outside application that will receive them. Before consuming the event, the listener program should check for the JMS message header in order to identify if that event is indeed supposed to be consumed by it or not. For this to happen it must be set the MSG.PROP.NAME field (for example taskId) into the Parameter record and that field to be also defined into the event as a custom field (taskId equal with a value that will be used by listener to search for it into the JMS header). Note The MSG.PROP.NAME is a multi value field that defines the list of names to be used to create properties to set in the JMS message header. For each value in this field, a property would be added to the JMS message header with the value obtained from an equivalent field in the event record. We need to consider the following: Message data can be retrieved by implementing MessageListener class and through the method onMessage(Message msg); Retrieved XML message can be parsed and redirected to the outside application by having supporting jar files like json-simple.jar, jdom.jar, etc.; Dependent jars to be mentioned in Maven dependency and Maven build can help us building the classes to a Jar file; Jar has to be deployed in the Application Server. Note Please refer to next IntegrationFrameworkEventMDB template project. This is a sample MDB for consuming events from Integration Framework Events Queue. This MDB is configured to consume messages from queue/eventQueue and will echo event XML."
  },
  "integration/3-minutes.html": {
    "href": "integration/3-minutes.html",
    "title": "Integration 3 minutes guide",
    "keywords": "Integration Events – 3 Minutes Guide This is a short guide which will explain how to see the Integration Events in ReST client. In this example we will fetch the events for FUND TRANSFER. We already created an Integration Project and published to T24: Project Name: Demo Event Name: FTDemo.event Event Type: Demo-FTDemo Prerequisites Temenos Sandbox Google Chrome browser – Download from here POSTMAN chrome extension Either search POSTMAN ReST client on Google OR click this link Access the Data Service The Temenos Sandbox already has one Data Service that will fetch the events from T24 To learn how to fetch the data from T24 using ReST client, please follow this 3 minutes guide . API Name to access events data: /enqIntegrationEventss() Data Service Name: http://127.0.0.1:9089/Prospect-iris/Prospect.svc/GB0010001/ Filters: ?$filter=substringof(‘Demo’, EventType) or ?$filter=EventType eq ‘Demo-FTDemo’ Complete URL: http://127.0.0.1:9089/Prospect-iris/Prospect.svc/GB0010001/enqIntegrationEventss()?$filter=substringof('Demo ', EventType) If we don’t provide the filter, it will fetch all the events from T24 and slow down the POSTMAN. Therefore the best practice is to fetch only the events in which you are interested. Follow this post if you want to know more about filters – IRIS Data Service & OData Filters Now we are going to query to T24 for event type Demo-FTDemo by GET method on above mentioned data service: e.g. /Prospect-iris/Prospect.svc/GB0010001/enqIntegrationEventss()?$filter=EventType eq ‘Demo-FTDemo’ We will GET following Response – This response is empty because there is no transaction after creating this event. Initiate FUNDS.TRANSFER Now login to T24, initiate a FUNDS.TRANSFER and commit the deal in T24 Note Don't forget to use comma See the events data Now follow the same steps done previously in order to fetch the events data. Open POSTMAN and GET request on /enqIntegrationEventss() resource e.g. GET http://127.0.0.1:9089/Prospect-iris/Prospect.svc/GB0010001/enqIntegrationEventss()?$filter=substringof('Demo ', EventType) Response from above request is the following: In the response we can see event type and other useful information: <d:EventType>Demo-FTFlow</d:EventType> and also the T24 Application name <d:CommonXmlVal>FUNDS.TRANSFER</d:CommonXmlVal>"
  },
  "integration/glossary.html": {
    "href": "integration/glossary.html",
    "title": "Glossary",
    "keywords": "Glossary KeyWord Description CALLJEE CALJEE is a JBC function that is supposed to open a connection with the application server in order to send requests and receive responses. Event Generic term for the notification which T24 emits when a business event occurs. Exit Point Defines the hook, or API, in T24 to which an Event can be linked. The Exit Point therefore defines when a notification message leaves T24. Exit Points can be linked to T24 VERSIONs, T24 Applications, or to component service operations. Flow Catalog A T24 table which contains details of all the Integration Flows which have been created by the system integrators. Accessed both at design-time and at run-time. The Flow Catalog provides a component-based interface to Eclipse, Visual Studio and T24 itself. Integration Flow Flow defines the layout of an XML message which will leave T24 when a business event occurs. Created in SOA Event Designer at design-time, and referenced at run-time in order that an enriched message can be constructed and dispatched. JMS Java Message Service (JMS) is an application program interface (API) that supports the formal communication known as messaging between computers in a network. JMS provides a common interface to standard messaging protocols and also to special messaging services in support of Java programs. MDB A Message-Driven Bean (MDB) is a Java Messaging Service (JMS) message listener that can reliably consume messages from a queue or a subscription of a topic. TSA A TSA (T24 Service Agent) is supposed to trigger the execution of some processes that are configured to be run in order to achieve a particular functionality. XML An eXtensible Markup Language (XML) is a metalanguage which allows users to define their own customized markup languages, especially in order to display documents on the Internet."
  },
  "integration/index.html": {
    "href": "integration/index.html",
    "title": "Integration Overview",
    "keywords": "Integration Temenos' Integration offering makes banks more agile, by enabling them to integrate systems much faster and more cost-efficiently, and to become more competitive by enabling near real-time, highly scalable, self-assisted and multi-channel banking 24/7. Our Integration offering makes your bank much more agile, competitive and profitable. Most importantly, it enables you to offer a superior customer experience, one that is much timelier as well as more easily attuned to evolving customer needs, even when business is growing fast. Our Integration products and framework are for you if you are seeking enhanced: Agility The ability to integrate any business system up to 3x faster, without detailed, vendor-specific coding work, enabling you to respond much faster to evolving business needs Competitiveness The ability to provide multi-channel banking services in near real-time 24/7, enabling you to be competitive in the era of real-time digital business Profitability The ability to sustainably reduce the costs of performing and maintaining integration, and the ability to exploit Cloud-based applications Scalability The ability to preserve the performance of your integrated business services and straight-through-processing as business volumes grow Reliability Reduce the risk of batch-processing glitches and protect your bank from regulatory scrutiny and reputational damages How it works Our Integration offering consists of products and also proposes an optimal way (framework), to deploy them in the bank. Design Studio for Integration Events provides an intuitive graphical environment, that commodity specialists in the bank can use to easily configure what data should leave Temenos' Core Banking system and when, in the context of a business transaction that needs to be completed. It is the foundation for enabling event-based, near real-time, asynchronous integration. The Enterprise Service Bus (ESB) adapters enable commodity specialists to use the design-time environment of widely used ESBs to perform routing and transformation work on messages coming from the Core Banking system. Supported ESBs include those of IBM, Oracle, Microsoft, TIBCO and Fiorano (others on demand). The Integration Framework lets the bank exploit the above products in combination with standard third-party middleware and industry-standard messages and formats, to benefit from event-based, near real-time, asynchronous integration between its business systems. This framework is part of Temenos' approach to implementing enterprise architecture in the bank in order to reduce its cost-per-transaction. Note Be more agile and with near-real-time event-based integration. Issues faced in integration Our Integration offering addresses the lack of business agility and competitiveness faced by banks that still rely on traditional point-to-point integration. Your bank will benefit from our Integration offering if it: Is slow in responding to evolving business needs, due to the complexity of building coded interfaces between business systems. Struggles to offer a multi-channel customer experience in near real-time, due to the lags of end-of-day batch processing. Bears high costs from maintaining coded interfaces and from depending on vendor-specialized integration experts. Is unable to exploit cloud-based applications in a secure and resilient manner, to improve the efficiency of its value chain. Suffers from limited scalability and slower straight-through-processing (STP) when its business systems are heavily solicited by traditional interfaces. Is exposed to the potential reputational and regulatory risks related to glitches in batch-based integration processing."
  },
  "integration/install-package.html": {
    "href": "integration/install-package.html",
    "title": "Integration Framework Package Installation",
    "keywords": "Install Package Overview To deploy a set of model files, they must be packaged using the packager and installed into a T24 area using the installer. The packager is a DS process that builds T24 model bank into one single package that can be installed on remote T24 environment. The packager gathers from your workspace all files to assemble: Basic files Data files All DS generated model files Packager supports TAFJ environments, generating one .jar you can deploy. Prerequisites Follow these steps in order to create package Install TortoiseGit As next step, please refer to following documentation in order to use GitLab Repository for MarketPlace Sandbox and create a Repository clone Steps Trace the 'Target' folder on your local machine is the new jar’s location. (e.g. D:\\MKP\\DesignStudio\\workspace1\\Sample\\target) Manually copy the JAR, containing compiled basic routines, available inside the JAR from [Project-name]-packager\\target folder to the packages folde r. Note Packages folder refers to the one found in GitLab Repository folder in the environment created by cloning GitLab Repository Follow this user guide to learn how to deploy a T24 package to the Sandbox by using TortoiseGit commands. Verify deployment in the browser Type IF.EXIT.POINTS in the command line and search for your application Type IF.INTEGRATION.FLOW.CATALOG in the command line and then the name of the flow created Note After you have validated the changes against T24 development environment, you can create and deploy the package on one or many environments."
  },
  "design/uxp/widgets-3-minute.html": {
    "href": "design/uxp/widgets-3-minute.html",
    "title": "UXP 3 Minute Guide",
    "keywords": "This is a short guide to explain what you can develop through UXP and how to use a simple Widget. Development What you can develop by using UXP solution? Here's a description of a simple business problem: A car part supplier needs to capture client data for billing purposes. If the client wishes to pay by account, the supplier also needs to capture and check the clients’ credit details. This data needs to be collected either by call centre staff or by company representatives on sales visits. The clients themselves may also supply this data via the supplier’s website. Note The solution can be checked in the User Guide that comes with your package, under Getting started section. Also, you can see the entire flow in the Widgets 3 Hour Guide . Use a Widget Go to Presentation editor, expand the buttons, click on Phase1 > Add > Display Item > TestWidget: Give a name in the Item Name field. (We named this project ' FirstTestWidget ') Click OK. Now we have added a widget which has currently no functionality. To add a functionality to it, go to Tools > Edit Widgets for Project > Click right on Widget (TestWidget) > Add > Custom Attributes Under Custom Attributes > click on Attribute and fill the field Name which is mandatory, then click Save. Note This field is very important and we must be careful when choosing the name of the attribute, because it will be called in the code. For example, if we want a 'Hello World' kind of attribute, we can name it as Message To check what has been created, go to Presentation Editor > Double click on FirstTestWidget [TestWidget] > Go to Widget Details tab In the Message field, you can type 'Hello World' ( any message you want to use ) and click OK. To run the project, go to Presentation Editor > Click right on Presentation Editor > Run The new screen will not display anything related to the widget built before. In order to see the changes, modify Body and Header content. Body Template Content To be able to see 'Hello World' message, go to Templates folder in order to modify body.wgt file. Edit body.wgt with the below HTML command, in order to acces the Custom Attribute previously added: <div> $$ITEM.Message$ </div> Save the change into body.wgt file and run again the Presentation Editor. You will see now displayed 'Hello World' message. Header Template Content Tip You need to include any external javascript libraries/files e.g. jquery and external css files in the header template. You should also add javascipt/css used by the widget. You should try to include any script required by the widget in the header file, if possible, as each header is only included once in the page regardless of how many times the widget is used in the page. Add jQuery script version on **head.wgt * <script src=\"http://code.jquery.com/jquery-1.12.4.min.js\" integrity=\"sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ=\" crossorigin=\"anonymous\"></script> Go back to body.wgt and edited according to the changes you need to make. Here is a small example: <div id=\"testID\"> $$ITEM.Message$ </div> <script> $(\"#testID\").css(\"color\", \"red\"); </script> Address use in current example : http://localhost:8181/TestWgt/servletcontroller When the screen is refreshed, Hello World message will appear in red Note For more features regarding Widgets, please check also Widgets 30 minute guide and Widgets Developers Guide available in the UXP package."
  },
  "design/uxp/widgets-30-minute.html": {
    "href": "design/uxp/widgets-30-minute.html",
    "title": "UXP 30 Minute Guide",
    "keywords": "This is a short guide to explain the use of UXP and basic steps for installation and development. About UXP Creating a basic project can be carried out as a series of stages. Once the basic solution has been created, any of the elements can be amended to enhance the solution. Below are the main phases of the development: Create Project Create Process Create Phase add questions add text add buttons Create Data Store add data items add data groups add lists Associate Data Store with Process Create Rules add validation add business rules add navigation Although the steps are in the order shown, the order may change depending on your starting point for the process. For example, you may be replacing an existing process for which a database exists. In this case, it may be more convenient to create the data store from the existing database as a first step before creating the process. UXP includes tools which allow you to generate your project from database, web service and XML schema files to help speed up the development process. UXP allows flexibility in approach in order to build the solution in the most efficient way. Installation Note When planning an Enterprise installation, you firstly need to decide who in your organization will perform the above roles as this will determine what UXP components need to be installed on each machine. Although described separately, you can of course allocate all administrative tasks to an individual. Once you have defined the roles required, the Enterprise Server components should be installed on the appropriate machine, in the following order: • UXP Server • Administrator • Deployer • Developer Download your Temenos UXP Developer Package from Temenos MarketPlace. This Package contains also some useful user guides. Installation overview: Start installation Choose install options Install Obtain License Install License Complete Check also these steps to see installation process. Widget Basic Steps Example Below are the steps required for a simple widget creation. To develop more complex applications, some knowledge of javascript, jquery and css would be useful. Create a Widget Create a folder on D partition. For this user guide, we defined a folder called 'UXPProjects' We will create a new Project called 'TestProject': Go to File > New > New Solution Project Add Project Name ( TestWgt ) Select Project Location ( D:/UXPProjects ) Click OK > A new project is created Now, in the new screen go to Process Editor > click right on Processes > Add Process Give a Process Name ( Process1 ) and click OK Click right on Process1 > Add Phase Give a Phase Name ( Phase1 ) and click OK Now, go to Presentation Editor > Click right on Presentations > Add Presentation Type Give a Presentation Name ( Presentation1 ) and select Type > Rich HTML > click OK Go to Menu bar > Tools > Edit Widgets for Projects Click right on Widgets > Add > Widget An empty list of attributes is displayed. In this list, only Name and Type are mandatory. You can also add any other attributes Name : *TestWidget (The widget name is used in the drop down list of display types in the Presentation Editor when you select a display type for an element.) Type : *Display Item (The type specifies the type of element the widget can be applied to.) Click save Go to the folder created for this project ( D:/UXPProjects ) and then to Templates folder In Templates folder, create a new folder. The name of this folder is the widget name. Suppose you have a MarketPlace widget, you can name it something like: com.temenos.test Inside this folder, create a head.wgt (optional) and body.wgt (mandatory) file. Go back to Tools > Edit Widgets for Project Now we can add the Head and the Body of the widget Click on Source Template and in Value field, select as source body.wgt (created in Templates folder) Add another template (this will be automatically recognized as a Header Template) Click right on the Widget ( TestWidget ) > Add > Template Click on Header Template and in Value field, select as header header.wgt (created in Templates folder) Save To see how to use a widget, check following Widgets 3 Minute Guide ."
  },
  "faq/access-commo-files.html": {
    "href": "faq/access-commo-files.html",
    "title": "FAQ",
    "keywords": "Can I access Sandbox commo files? If you need to access the commo files of the Sandbox, please contact marketplace@temenos.com"
  },
  "faq/access-on-your-behalf.html": {
    "href": "faq/access-on-your-behalf.html",
    "title": "FAQ",
    "keywords": "Can I let my Agency/Designer/Uncle access our Sandbox on my behalf? Only named users are allowed to access the Sandbox and no other persons or third parties should be allowed to access the Sandbox on your behalf."
  },
  "faq/api-list.html": {
    "href": "faq/api-list.html",
    "title": "FAQ",
    "keywords": "Where can I find published APIs? To get started with your MarketPlace Sandbox, please click here for the current list of published APIs."
  },
  "faq/api-roadmap.html": {
    "href": "faq/api-roadmap.html",
    "title": "API RoadMap",
    "keywords": "API RoadMap Temenos is committed to delivering publically supported APIs to empower its developer community and increase the diversity of applications and services in the Temenos MarketPlace. May 2018 : PSD2 APIs Currently accessible via the MarketPlace Provider Sandbox. Check the list of available PSD2 APIs . The following APIs will be made available via the MarketPlace Developer Sandbox as soon as they are released: November 2018 : 200+ RESTful Provider APIs T24 Core - Retail Focus & Treasury (Domains - Party, Holdings, Orders, Product, Reference & Meta) May 2019 : 200+ RESTful Provider APIs L3 Java Customisation APIs MVP - includes T24 Core & AA Retail (150 Methods & 40 Hook Interfaces), RESTful Provider APIs covering Corporate, Analytics, Wealth & Treasury November 2019 : 200+ RESTful Provider APIs L3 Java Customisation APIs for Treasury & Corporate banking + additional RESTful Provider APIs To express interest in pre-release Temenos APIs, please contact us at marketplace@temenos.com . For providers who have already tested our APIs, it only takes a minute to complete our survey and we really appreciate your feedback."
  },
  "faq/change-t24-version.html": {
    "href": "faq/change-t24-version.html",
    "title": "FAQ",
    "keywords": "Can I change the version of T24 the Sandbox is running? If you need to build an R16 Integration for a client in need of an upgrade and will not work with the MarketPlace Provider Sandbox, which runs R18 AMR, other T24 releases are available. For more on this, please contact marketplace@temenos.com"
  },
  "faq/confidential-records.html": {
    "href": "faq/confidential-records.html",
    "title": "FAQ",
    "keywords": "Can I upload confidential records to the Sandbox? No 'personal data', 'confidential' or 'sensitive' data should be stored in the Sandbox."
  },
  "faq/connect-to-sandbox.html": {
    "href": "faq/connect-to-sandbox.html",
    "title": "FAQ",
    "keywords": "What should I connect to the MarketPlace Provider Sandbox? We recommend a web-frontend that allows a user to experience your product while leveraging T24 model bank data. Describe your use-case(s) on the MarketPlace product page Connect your web-frontend to the MarketPlace Provider Sandbox Connect the product to the MarketPlace product page Run through any required integration tests so you can capture demo user data Publish the product page and follow-up on activated trials"
  },
  "faq/contact-us.html": {
    "href": "faq/contact-us.html",
    "title": "Contact Us",
    "keywords": "Contact Us To find more details about what MarketPlace is providing or to receive technical support and more information related to our products and integration of your app, please contact us at marketplace@temenos.com ."
  },
  "faq/content-on-product-page.html": {
    "href": "faq/content-on-product-page.html",
    "title": "FAQ",
    "keywords": "What content can I display on my MarketPlace Product page? Your product page should deliver a high-quality overview of your organisation and a demo experience that will get potential customers hooked and wanting more. The MarketPlace is capable of delivering video, whitepapers and other sales collateral, but crucially can offer users a walk-through of your product via a Downloadable or WebApp product type free trial demo."
  },
  "faq/create-product-page.html": {
    "href": "faq/create-product-page.html",
    "title": "FAQ",
    "keywords": "How do I create my MarketPlace product page? You need to be set-up as a Developer on your organisational profile. To check if you have Developer rights, login to the Temenos MarketPlace , click Manage , Account , Users ."
  },
  "faq/deploy-api-war.html": {
    "href": "faq/deploy-api-war.html",
    "title": "FAQ",
    "keywords": "How can I deploy a custom API/war file? If your product/solution requires a custom API/war file, please contact marketplace@temenos.com"
  },
  "faq/deploy-jars.html": {
    "href": "faq/deploy-jars.html",
    "title": "FAQ",
    "keywords": "Can I deploy misc. localjars to the Sandbox? If you need to deploy a localjar file to the Sandbox, please contact marketplace@temenos.com"
  },
  "faq/export-data.html": {
    "href": "faq/export-data.html",
    "title": "FAQ",
    "keywords": "Can I export data from the Sandbox? If you need to export the Sandbox database, please contact marketplace@temenos.com"
  },
  "faq/export-log-data.html": {
    "href": "faq/export-log-data.html",
    "title": "FAQ",
    "keywords": "Can I export the application (T24) log data from the Sandbox? If you need to examine the T24 logfiles, please contact marketplace@temenos.com"
  },
  "index.html": {
    "href": "index.html",
    "title": "",
    "keywords": "</p> <h1 id=\"parent-\" sourceFile=\"index.md\" sourceStartLineNumber=\"14\" sourceEndLineNumber=\"14\">parent {</h1> <p sourceFile=\"index.md\" sourceStartLineNumber=\"15\" sourceEndLineNumber=\"23\"> height: 100px; width: 230px; margin-left: auto; margin-right: auto; border: 0px; } Connect Your App Integrate your product with the MarketPlace Provider Sandbox via our APIs Publish Your App Increase retention by sharing your integration on the worlds largest financial MarketPlace FAQs Check questions and answers about MarketPlace products, sandboxes and T24 Get Help Ask questions, get answers, share your knowledge, see best practices and connect with our experts"
  },
  "apis/index.html": {
    "href": "apis/index.html",
    "title": "API Introduction",
    "keywords": "The MarketPlace Provider Sandbox is exposing a series of REST APIs that can be invoked in order to create, read and/or update records in it. Authentication Temenos API supports Authentication. All the required credentials are communicated separately. Service Catalog Service Catalog shows the swagger file content and implicitly all the available operations of a specific API. Get Service Catalog URL https://<sandboxId>.temenos.cloud/irf-test-web/api/v1.0.0/meta/apidocs/<apiName> Http Method GET Http Response Headers Content-Type: 'application/json' Response It will display the schema definition view (the swagger content) of the interrogated API. Domains Domains are the highest level grouping for APIs. Domains General Domains allow the same resource path to give different result based on domain: /party/customers/654321 : Reference data (names, address, etc.) for customer 654321 /holdings/customers/654321 : Collection of holdings for customer 654321 Currrent domains party : Master party data; customers, counterparties etc. product : Master product data; products, rates, eligibility etc. holdings : Financial holdings (accounts, arrangements, portfolios, etc.) at party and bank level orders : Order management for all types of orders, e.g. payments, security trading, etc. meta : APIs about APIs; usage, deployment, etc. reference : Reference data; rates, dates, etc. Standard Methods The following table describes how to map standard methods to HTTP methods: Standard Methods Standard Method HTTP Mapping HTTP Request Body HTTP Response Body List GET N/A Resource list Get GET N/A Resource Create POST Resource Resource Update PUT Resource Resource Delete DELETE N/A Empty Standard Request Parameters The following table describes a list of standard parameters used across all APIs: Standard Request Parameters Name Type Description page_token string The pagination token in the List request. page_size int32 The pagination size in the List request. page_start int32 The pagination start row in the List request total_lastitems int32 The last total_lastitems items to be returned in the List request. Mutually exclusive with page_start and page_size total_size int32 The total count of items in the list irrespective of pagination. request_id string A unique string id used for detecting duplicated requests. Optional. resume_token string An opaque token used for resuming a streaming request. Reserved for future use - not yet implemented. validate_only bool If true, it indicates that the given request should only be validated, not executed. response_verbosity All, Minimal, Properties, Activities For activity (AA) requests, determines they level of information returned in the response message. All - header information, property and activity information. Minimal - header information. Properties - header information and property information. Activities - header information and activity information. Standard Names This section describes a set of standard message field definitions that are used across all APIs. Standard Names Name Type Description name string The name field should contain the relative resource name. parent string For resource definitions and List/Create requests, the parent field should contain the parent relative resource name. create_time Timestamp The creation timestamp of an entity. update_time Timestamp The last update timestamp of an entity. Note: update_time is updated when create/patch/delete operation is performed. delete_time Timestamp The deletion timestamp of an entity, only if it supports retention. expire_time Timestamp The expiration timestamp of an entity if it happens to expire. start_time Timestamp The timestamp marking the beginning of some time period. end_time Timestamp The timestamp marking the end of some time period or operation (regardless of its success). time_zone string The time zone name. It should be an IANA TZ name, such as \"America/Los_Angeles\". region_code string The Unicode country/region code (CLDR) of a location, such as \"US\" and \"419\". language_code string The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". mime_type string An IANA published MIME type (also referred to as media type). display_name string The display name of an entity. title string The official name of an entity, such as company name. It should be treated as the formal version of display_name. description string One or more paragraphs of text description of an entity. Return Status Codes Each Status-Code returned by API call is described below, including a description of which method(s) it can follow and any meta-information required in the response. Http Status Code SUCCESS 200 OK SUCCESS 201 Created Record created in T24 ERROR 400 Bad Input Wrong data or invalid body contents 401 Unauthorized Wrong valid authentication credentials 403 Forbidden The server understood the request but refuses to authorize it 404 Resource Not Found Requested resource not available in service 405 Method Not Allowed 412 Precondition Failed 415 Unsupported Media Type Check content-type and other http header settings 500 Internal Server Error The server encountered an unexpected condition that prevented it from fulfilling the request. Retry the exact same request that triggered this response, and hope to get a different response. Pagination Pagination in APIs helps client application to handle responses to easier. Pagination is controlled via two parameters, page_size and page_start : page-size - limits the number of records in the api response page-start - helps to retrieve next set of records. Pagination Sample URL 1 localhost:8080/api/v1.0.0/provider-accounts/10944/transactions?fromDate=2017-01-01&page_size=5 Sample Response 1 { \"header\": { \"data\": { \"accountId\": \"10944\", \"currency\": \"USD\" }, \"audit\": { \"T24_time\": 1554, \"parse_time\": 4 }, \"page_start\": 0, \"page_token\": \"a1f92b0d-4ca0-44f1-8025-b16d417f11a2\", \"total_size\": 39, \"page_size\": 5 }, \"body\": [ { \"reference\": \"FT170803R9LY\", \"amount\": 200000, \"bookingDate\": \"2017-03-21\", \"valueDate\": \"2017-03-21\" }, { \"reference\": \"FT17080GCFJJ\", \"amount\": 150000, \"bookingDate\": \"2017-03-21\", \"valueDate\": \"2017-03-21\" }, { \"reference\": \"SCTRSC17080KMQW4\", \"amount\": -2805, \"bookingDate\": \"2017-03-21\", \"valueDate\": \"2017-03-21\" }, { \"reference\": \"SCTRSC1708064H4D\", \"amount\": -70434.35, \"bookingDate\": \"2017-03-21\", \"valueDate\": \"2017-03-21\" }, { \"reference\": \"SCTRSC17086RZV02\", \"amount\": -3263.27, \"bookingDate\": \"2017-03-27\", \"valueDate\": \"2017-03-27\" } ] } Sample URL 2 localhost:8080/api/v1.0.0/provider-accounts/10944/transactions?fromDate=2017-01-01&page_size=5&page_start=10 Sample Response 2 { \"header\": { \"data\": { \"accountId\": \"10944\", \"currency\": \"USD\" }, \"audit\": { \"T24_time\": 448, \"parse_time\": 1 }, \"page_start\": 10, \"page_token\": \"a9b3fc6b-3f39-4925-8c6e-542e9fa238fd\", \"total_size\": 39, \"page_size\": 5 }, \"body\": [ { \"reference\": \"FT17086WV7YX\", \"amount\": 200000, \"bookingDate\": \"2017-03-27\", \"valueDate\": \"2017-03-27\" }, { \"reference\": \"SCTRSC17088S0BZW\", \"amount\": -22792.77, \"bookingDate\": \"2017-03-29\", \"valueDate\": \"2017-03-29\" }, { \"reference\": \"FT1708899Y3D\", \"amount\": 75000, \"bookingDate\": \"2017-03-29\", \"valueDate\": \"2017-03-29\" }, { \"reference\": \"SCTRSC17088RFNT2\", \"amount\": -6928.71, \"bookingDate\": \"2017-03-29\", \"valueDate\": \"2017-03-29\" }, { \"reference\": \"SCTRSC17088ZP11W\", \"amount\": -49171.54, \"bookingDate\": \"2017-03-29\", \"valueDate\": \"2017-03-29\" } ] } Caching Caching is controlled via the parameter page_token . Caching Sample URL localhost:8080/api/v1.0.0/provider-accounts/10944/transactions?fromDate=2017-01-01&page_size=5&page_start=10&page_token=dbf26a4b-0bd3-4407-8e25-ae406c6e3b57 Note: There is no T24_time element to the audit, as the request has been served from cache. Sample Response { \"header\": { \"data\": { \"accountId\": \"10944\", \"currency\": \"USD\" }, \"audit\": { \"parse_time\": 4 }, \"page_start\": 10, \"page_token\": \"dbf26a4b-0bd3-4407-8e25-ae406c6e3b57\", \"total_size\": 39, \"page_size\": 5 }, \"body\": [ { \"reference\": \"FT17086WV7YX\", \"amount\": 200000, \"bookingDate\": \"2017-03-27\", \"valueDate\": \"2017-03-27\" }, { \"reference\": \"SCTRSC17088S0BZW\", \"amount\": -22792.77, \"bookingDate\": \"2017-03-29\", \"valueDate\": \"2017-03-29\" }, { \"reference\": \"FT1708899Y3D\", \"amount\": 75000, \"bookingDate\": \"2017-03-29\", \"valueDate\": \"2017-03-29\" }, { \"reference\": \"SCTRSC17088RFNT2\", \"amount\": -6928.71, \"bookingDate\": \"2017-03-29\", \"valueDate\": \"2017-03-29\" }, { \"reference\": \"SCTRSC17088ZP11W\", \"amount\": -49171.54, \"bookingDate\": \"2017-03-29\", \"valueDate\": \"2017-03-29\" } ] } Code Samples Please find below some code samples in different programming languages. Code Samples Note In the code samples below are used: 2 headers 3 parameters , but it can be less or more of them. Code Samples <!-- design process steps--> <!-- Nav tabs --> Curl C# Java JavaScript ObjC PHP Python Ruby <!-- end design process steps--> <!-- Tab panes --> curl -v -X GET <required_url>?parameterName1={parameterValue1}&parameterName2={parameterValue2}parameterName3={parameterValue3} -H \"<headerName1>: {headerValue1}\" -H \"<headerName2>: {headerValue2}\" --data-ascii \"{body}\" using System; using System.Net.Http.Headers; using System.Text; using System.Net.Http; using System.Web; namespace CSHttpClientSample { static class Program { static void Main() { MakeRequest(); Console.WriteLine(\"Hit ENTER to exit...\"); Console.ReadLine(); } static async void MakeRequest() { var client = new HttpClient(); var queryString = HttpUtility.ParseQueryString(string.Empty); // Request headers client.DefaultRequestHeaders.Add(\"<headerName1>\", \"{headerValue1}\"); client.DefaultRequestHeaders.Add(\"<headerName2>\", \"{headerValue2}\"); // Request parameters queryString[\"parameterName1\"] = \"{parameterValue1}\"; queryString[\"parameterName2\"] = \"{parameterValue2}\"; queryString[\"parameterName3\"] = \"{parameterValue3}\"; var uri = \"<required_url>?\" + queryString; var response = await client.GetAsync(uri); // or var response = await client.DeleteAsync(uri); // or var response = await client.PostAsync(uri, content); // or var response = await client.PutAsync(uri, content); } } } // This sample uses the Apache HTTP client from HTTP Components // (http://hc.apache.org/httpcomponents-client-ga/) import java.net.URI; import org.apache.http.HttpEntity; import org.apache.http.HttpResponse; import org.apache.http.client.HttpClient; import org.apache.http.client.methods.HttpGet; import org.apache.http.client.utils.URIBuilder; import org.apache.http.impl.client.HttpClients; import org.apache.http.util.EntityUtils; public class JavaSample { public static void main(String[] args) { HttpClient httpclient = HttpClients.createDefault(); try { URIBuilder builder = new URIBuilder(\"<required_url>\"); builder.setParameter(\"parameterName1\", \"{parameterValue1}\"); builder.setParameter(\"parameterName2\", \"{parameterValue2}\"); builder.setParameter(\"parameterName3\", \"{parameterValue3}\"); URI uri = builder.build(); HttpGet request = new HttpGet(uri); request.setHeader(\"<headerName1>\", \"{headerValue1}\"); request.setHeader(\"<headerName2>\", \"{headerValue2}\"); // Request body StringEntity reqEntity = new StringEntity(\"{body}\"); request.setEntity(reqEntity); HttpResponse response = httpclient.execute(request); HttpEntity entity = response.getEntity(); if (entity != null) { System.out.println(EntityUtils.toString(entity)); } } catch (Exception e) { System.out.println(e.getMessage()); } } } <!DOCTYPE html> <html> <head> <title>JSSample</title> <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js\"></script> </head> <body> <script type=\"text/javascript\"> $(function() { var params = { // Request parameters \"parameterName1\": \"{parameterValue1}\", \"parameterName2\": \"{parameterValue2}\", \"parameterName3\": \"{parameterValue3}\", }; $.ajax({ url: \"<required_url>?\" + $.param(params), beforeSend: function(xhrObj){ // Request headers xhrObj.setRequestHeader(\"<headerName1>\",\"{headerValue1}\"); xhrObj.setRequestHeader(\"<headerName2>\",\"{headerValue2}\"); }, type: \"GET\", // Request body data: \"{body}\", }) .done(function(data) { alert(\"success\"); }) .fail(function() { alert(\"error\"); }); }); </script> </body> </html> #import <Foundation/Foundation.h> int main(int argc, const char * argv[]) { NSAutoreleasePool * pool = [[NSAutoreleasePool alloc] init]; NSString* path = @\"<requested_url>\"; NSArray* array = @[ // Request parameters @\"entities=true\", @\"parameterName1={parameterValue1}\", @\"parameterName2={parameterValue2}\", @\"parameterName3={parameterValue3}\", ]; NSString* string = [array componentsJoinedByString:@\"&\"]; path = [path stringByAppendingFormat:@\"?%@\", string]; NSLog(@\"%@\", path); NSMutableURLRequest* _request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:path]]; [_request setHTTPMethod:@\"GET\"]; // Request headers [_request setValue:@\"{headerValue1}\" forHTTPHeaderField:@\"<headerName1>\"]; [_request setValue:@\"{headerValue2}\" forHTTPHeaderField:@\"<headerName2>\"]; // Request body [_request setHTTPBody:[@\"{body}\" dataUsingEncoding:NSUTF8StringEncoding]]; NSURLResponse *response = nil; NSError *error = nil; NSData* _connectionData = [NSURLConnection sendSynchronousRequest:_request returningResponse:&response error:&error]; if (nil != error) { NSLog(@\"Error: %@\", error); } else { NSError* error = nil; NSMutableDictionary* json = nil; NSString* dataString = [[NSString alloc] initWithData:_connectionData encoding:NSUTF8StringEncoding]; NSLog(@\"%@\", dataString); if (nil != _connectionData) { json = [NSJSONSerialization JSONObjectWithData:_connectionData options:NSJSONReadingMutableContainers error:&error]; } if (error || !json) { NSLog(@\"Could not parse loaded json with error:%@\", error); } NSLog(@\"%@\", json); _connectionData = nil; } [pool drain]; return 0; } <?php // This sample uses the Apache HTTP client from HTTP Components //(http://hc.apache.org/httpcomponents-client-ga/) require_once 'HTTP/Request2.php'; $request = new Http_Request2('<required_url>'); $url = $request->getUrl(); $headers = array( // Request headers '<headerName1>' => '{headerValue1}', '<headerName2>' => '{headerValue2}', ); $request->setHeader($headers); $parameters = array( // Request parameters 'parameterName1' => '{parameterValue1}', 'parameterName2' => '{parameterValue2}', 'parameterName3' => '{parameterValue3}', ); $url->setQueryVariables($parameters); $request->setMethod(HTTP_Request2::METHOD_GET); // Request body $request->setBody(\"{body}\"); try { $response = $request->send(); echo $response->getBody(); } catch (HttpException $ex) { echo $ex; } ?> ########### Python 2.7 ############# import httplib, urllib, base64 headers = { # Request headers '<headerName1>': '{headerValue1}', '<headerName2>': '{headerValue2}', } params = urllib.urlencode({ # Request parameters 'parameterName1': '{parameterValue1}', 'parameterName2': '{parameterValue2}', 'parameterName3': '{parameterValue3}', }) try: conn = httplib.HTTPSConnection('<sandboxId>.temenos.cloud') conn.request(\"GET\", \"<required_url_without_sandboxId>?%s\" % params, \"{body}\", headers) response = conn.getresponse() data = response.read() print(data) conn.close() except Exception as e: print(\"[Errno {0}] {1}\".format(e.errno, e.strerror)) #################################### ########### Python 3.2 ############# import http.client, urllib.request, urllib.parse, urllib.error, base64 headers = { # Request headers '<headerName1>': '{headerValue1}', '<headerName2>': '{headerValue2}', } params = urllib.parse.urlencode({ # Request parameters 'parameterName1': '{parameterValue1}', 'parameterName2': '{parameterValue2}', 'parameterName3': '{parameterValue3}', }) try: conn = http.client.HTTPSConnection('<sandboxId>.temenos.cloud') conn.request(\"GET\", \"<required_url_without_sandboxId>?%s\" % params, \"{body}\", headers) response = conn.getresponse() data = response.read() print(data) conn.close() except Exception as e: print(\"[Errno {0}] {1}\".format(e.errno, e.strerror)) #################################### require 'net/http' uri = URI('<required_url>') query = URI.encode_www_form({ # Request parameters 'parameterName1' => '{parameterValue1}', 'parameterName2' => '{parameterValue2}', 'parameterName3' => '{parameterValue3}' }) if query.length > 0 if uri.query && uri.query.length > 0 uri.query += '&' + query else uri.query = query end end request = Net::HTTP::Get.new(uri.request_uri) # Request headers request['<headerName1>'] = '{headerValue1}' request['<headerName2>'] = '{headerValue2}' # Request body request.body = \"{body}\" response = Net::HTTP.start(uri.host, uri.port, :use_ssl => uri.scheme == 'https') do |http| http.request(request) end puts response.body"
  },
  "apis/psd2/psd2.html": {
    "href": "apis/psd2/psd2.html",
    "title": "Temenos PSD2 API Listing",
    "keywords": "List of PSD2 APIs Category API Name Description Accounts getAccountOverview Gets the account details. getAccountBalance Gets the account balance. getAccountStatus Checks the account status and it will return yes when the account is active. getAccountBalanceReport Checks the account balance in order to confirm or not the availability of the requested amount value. getTransactionHistory Gets all the account transactions or it gets all the account transactions that happened in a certain period of time. Payments createPaymentInitiation Creates a new payment. updatePaymentOrderSubmission Updates the payment submission. getPaymentOrderStatus Gets the status of a payment. getPaymentOrderList Gets all the payment orders or it gets all the payment orders that were done in a certain period of time. getPaymentOrder Gets the details of a payment order. Funds Transfer createPayment FT Initiation. createSEPAPayment FT SEPA Initiation. updatePaymentTransfer FT Submission. updateSEPAPaymentTransfer FT SEPA Submission. getPaymentTransferList Gets all the funds transfer or it gets all the funds transfer that were done in a certain period of time. getPaymentTransferStatus Gets the status of the FT payment. getPayment Gets the details of FT payment. getSEPAPayment Gets the details of FT SEPA payment."
  },
  "banking/architecture.html": {
    "href": "banking/architecture.html",
    "title": "Banking Architecture",
    "keywords": "<!-- ---------------------------------------------------------------------- --> <!-- the source is: [http://uni-t.temenos.com/teams/Technical_BSG/Technical%20BSG%20documents/1-%20Core%20Banking/Appendixes%20and%20Technology%20Overview/Temenos%20Core%20Banking%20Technology%20Overview_v8.pdf#search=core%20banking%20presentation](http://uni-t.temenos.com/teams/Technical_BSG/Technical%20BSG%20documents/1-%20Core%20Banking/Appendixes%20and%20Technology%20Overview/Temenos%20Core%20Banking%20Technology%20Overview_v8.pdf#search=core%20banking%20presentation)-- > <!-- ---------------------------------------------------------------------- --> Temenos Core Banking solution combines rich functionality with cutting-edge technology in an easily upgradable application. Its customers benefit from real-time embedded analytics, a sophisticated product builder and technology that allows for easy integration and infinite scalability, in turn enabling them to significantly outperform their peers. Tools used: Design Studio (DS) Design Studio is a graphical tool, based on Eclipse technologies such as the Integrated Development Environment (IDE) and Eclipse Modeling Framework (EMF). Interaction Framework The Temenos’ Interaction Framework separates the transaction processors from the user interface and makes interactive channels and devices easy to deliver. Integration Framework Based on an event driven architecture (EDA), the Integration Framework enables the Core Banking to easily exchange business events with other systems and so facilitate integration into an overall information system. The Integration Framework enables the use of market standard middleware and Enterprise Service Buses (ESB). Temenos WebService Composer (TWS) is a tooling exposing the Core Banking service landscapes as WS-I (Web Services Interoperability) compliant Web APIs. Any business functionality can be easily exposed as web services using the TWS Composer tooling. TWS Composer exposes Core Banking web services via SOAP / XML language thus being platform and programming language independent. Architecture Overview Temenos Core Banking architecture consists mainly of the following tiers: Presentation and Design Business Logic Data The Presentation Tier: It refers to all supported channels into the system. This includes both internal bank users who access the system through a highly functional web-browser based interface as well as external customers accessing the system via the Internet and mobile devices. The Business Logic Tier: The Core Banking is considered an Online Transaction Processing Engin (OLTP) whereby all business transactions are executed autonomously against a centralised data store. Because of this design and support of JEE Application Server, the Core Banking application can scale without the need of 3rd party cluster-ware allowing individual nodes to be applied, or removed, from the cluster without the need for global configuration or system downtime. Data Tier: The Core Banking is rendered database independent by use of standard JDBC java data access technology. Note that it makes no use of database utilities such as triggers or stored procedures nor utilities or features specific to the operating platform upon which the database is deployed. The Core Banking simply issues requests to the database to read or write data."
  },
  "banking/basics.html": {
    "href": "banking/basics.html",
    "title": "Banking Learn Basics",
    "keywords": "THIS PAGE IS COMING SOON!"
  },
  "banking/channels.html": {
    "href": "banking/channels.html",
    "title": "Channels",
    "keywords": "Channels Extend your reach to customers by delivering products and services for any business line, across all channels, for any user, and accessible by any device and in any language – all delivered with a consistent, optimized user experience from a single platform. Introduction Temenos channel solutions enable you to empower, and provide choice and convenience to your customers in how they want to bank and manage their finances. You will be able to deliver anytime, anywhere banking from any device. Solutions with rich domain functionality for your retail, corporate and wealth lines of business can be rapidly deployed so you can quickly implement a multi-channel strategy and gain competitive advantage. Solutions are componentized and highly customizable providing you with the flexibility and agility needed to flourish in this new digital banking landscape. Speed to market for new products and services will be accelerated by up to 4 times enabling you to capitalize quickly on new market opportunities and customer demands. The user experience you provide to your customers, whether through self-service or assisted channels, will be a key competitive differentiator and drive improved levels of customer retention, customer loyalty and profitability. Highlights Temenos’ ground breaking channels solutions enable you to deliver products and services for any business line (retail, corporate, wealth, universal) across all self-service and assisted channels (branch, contact center, RM advisors, internet, mobile) for any user (customer, teller, advisor) and accessible by any device (desktop, laptop, smartphone, tablet, smartTV) and in any language – with a consistent, optimized user experience, all delivered from a single platform Rapid deployment Pre-packaged channel solutions for retail, corporate and wealth are fully regionalized enabling rapid deployment, speed to market and fast time to value and compliance with local regulatory requirement. Superior, consistent user experience You will be able to provide a rich, dynamic consistent user experience to your retail, corporate or wealth customers across all channels. Solutions are responsive to design so the experience is optimized whatever device type your customers and financial advisers choose to use. The user experience you provide to your customers will be a key competitive differentiator. Reduced cost of ownership With all business line solutions across all channels managed from a single platform the IT architecture is dramatically simplified. This approach provides you with low cost of ownership with reduced maintenance costs by up to 95%. A single platform also provides you with the business agility to respond to fast moving customer demands and market requirements. Componentized The functionality of the solutions can be easily extended by deploying a wide range of available components. For example, if you are a retail bank you may wish to offer some added value functionality specifically for your HNWI (high net worth individual) customers. Flexible and configurable Solutions are highly configurable using a code free environment and corporate branding is simple to apply. Enhancements to the user interface to keep it fresh and relevant are easily done without any impact on the core business logic. Multiple brands, or a differentiated user experience for customer segments or new target markets, is easily achieved from a single business process thereby accelerating speed to market and reducing ongoing maintenance. Extendable The underlying UXP includes a powerful, flexible development platform that can be extended across the enterprise to enable the rapid development of additional online or mobile applications. Our unique SmartHybrid development approach encompasses the very best of native and web technologies. This enables the development of high performance, native ‘look and feel’, rich and dynamic mobile applications for Windows, IOS and Android devices. Your customers will only need to download the application once as enhancements and updates are automatically uploaded. Full integration for Experience Driven Banking Solutions can be further enriched with advanced and embedded analytics and front office capabilities such as PFM (personal financial management), rewards and loyalty schemes and real-time campaign marketing. This enables you to enter the realm of providing your customers with ‘Experience Driven Banking’ that is contextual, and relevant to their needs, delivering value added offers and financial advice at the right time, in the right place."
  },
  "banking/faq.html": {
    "href": "banking/faq.html",
    "title": "Banking FAQ",
    "keywords": "THIS PAGE IS COMING SOON!"
  },
  "banking/glossary.html": {
    "href": "banking/glossary.html",
    "title": "Glossary",
    "keywords": "Glossary KeyWord Description ABOR Accounting Book Of Records IBOR Investment Book Of Records PFM Personal Financial Management"
  },
  "banking/index.html": {
    "href": "banking/index.html",
    "title": "Digital Banking Suites",
    "keywords": "Digital Banking Suites Note The Temenos Suites not only empower banks to transform their customers’ experience, but overcome the long-standing barriers to investment by, for example, enabling banks to progressively renovate systems, thereby speeding up time to value and lowering risk to value. The Temenos Suites provide the solution for banks to serve up the right customer insights at the right moment, via the right channel, at the same time as driving massive efficiencies in the back-office: in short, they offer front office differentiation with back office automation. The two are highly connected. Having a user interface that is intuitive and seamless is essential. But the quality of the overall user experience requires that banks are able to draw insights in real time and from multiple datasets. Moreover, the speed of fulfilment is also critical, and so it really matters that the digital solution is front-to-back. CorporateSuite Note CorporateSuite provides one system; one view for all your corporate banking needs, today & tomorrow. CorporateSuite, with its scalable innovative technology, provides superior features for corporate banks, supporting profitability, customer acquisition and retention. Now, bank customers can benefit from quality digital solutions to equal their retail experiences, for all their business banking needs. Our CorporateSuite customers continue to see the benefit of our advanced modules, with Techcombank having won several awards for Trade Finance and Supply Chain activities. Temenos' CorporateSuite customers benefit from increased efficiency and profitability through: A full complete, single solution Transparent, single view offering a 360° view of accounts Agile, parameter driven platform flexibility A product builder to quickly create segment customer level products Full control Insight into customer profitability, loyalty, attrition risk and number of products for targeting activity A massively scalable, straight through-processing solution Comprehensive business functionality and a modern, advanced, secure, open, modular architecture An automated, electronic solution without the need for cumbersome paper based processes FundSuite Note FundSuite is Multifonds; the award winning fund administration software providing fund accounting, portfolio accounting, and investor servicing and transfer agency on a single platform. With FundSuite, clients have the capability to manage all the asset classes and jurisdictions they are involved with now or in the future, from a single accounting and investor servicing platform. FundSuite: Delivers long-only control and efficiency with alternatives flexibility on one platform, to support convergence between long-only and alternative funds Reduces total cost of ownership by consolidating functions and systems on one platform across multiple geographies, asset classes, jurisdictions Delivers increased efficiency through sophisticated workflow and exception management Syndicates analysis/product development across clients, so that development costs are shared and all clients benefit from changes made to one code base Supports both middle office and back office, and delivers the Investment Book Of Records (IBOR) and Accounting Book Of Records (ABOR) from one platform Provides ease of data access based on an open Oracle architecture IslamicSuite Note IslamicSuite, with its scalable innovative technology, provides superior features for lslamic banks to offer their customers Shari'ah compliant products and services that rival their Islamic or conventional counterparts. IslamicSuite services the Islamic banking community with Shari'ah compliant, flexible solutions that have been specifically designed to support wealth, retail, corporate and treasury bank needs. This range of highly scalable, established solutions means that you can now easily and efficiently create new Islamic banking products, offering world class services that rival your Islamic or conventional counterparts Temenos' IslamicSuite customers benefit from increased efficiency and profitability through: Full automation and increased straight through processing rates 31% higher return on assets -8.6 point lower cost-to-income ratio higher return on capital Reduced development time by 40% Quality customer products and services available quickly and cost effectively Growth at double target rate Adopting a pre-configured solution based on Shari'ah industry standard Offering advanced Shari'ah wealth management services WealthSuite Note WealthSuite is an integrated software solution for wealth managers. Its highly scalable technology offers integrated, multi-channel, front-to-back office capabilities. WealthSuite is designed to empower your business. The solution is industrializing the investment process, allowing you to efficiently manage investments for large numbers of complex portfolios and achieve maximal investment performance. Combining back office efficiency with front office differentiation, WealthSuite offers sophisticated portfolio management functionality to mass affluent and U/HNW clients, allied with CRM capabilities, mobile and internet banking capabilities and comprehensive back office support. If you are looking for a single vendor solution, with the associated benefits of centralized support, WealthSuite promises to transform your business. WealthSuite offers: Increased performance and revenue growth Stronger customer loyalty Advanced digital capabilities Cost and risk reduction RetailSuite Note The world's leading retail banking solution designed for the new banking landscape. RetailSuite is an integrated banking software solution for retail banks of all sizes across the globe. It combines a modern, agile core with powerful analytics and a single platform for distribution across all digital and assisted channels. It enables you to provide convenience and choice to your customers in how they want to bank and manage their finances. It will extend your reach to customers using any device, today and in the future. You will be able to harness the wealth of your data to better understand your customers and develop products and services they want and need quickly and easily. RetailSuite will address your banking technology, regulatory and market challenges of today and tomorrow. Through Temenos you can leverage technology innovation to drive competitor differentiation and advantage, increase operational efficiencies, reduce costs and boost profitability. UniversalSuite Note The world’s leading universal banking solution designed for the new banking landscape. UniversalSuite is an integrated banking software solution for Universal banks with market-leading retail, corporate and wealth management functionality. It combines an agile core with powerful analytics and a single platform for distribution across all channels. It enables banks to be competitive with customer-centric, relevant products and an optimized user experience whatever channel the customer chooses to use. This will drive customer loyalty, decrease attrition, increase wallet share and improve profitability. With UniversalSuite, banks can drive efficiency at the same time as building customer intimacy. UniversalSuite will address your banking technology, regulatory and market challenges of today and tomorrow. Through Temenos you can leverage technology innovation to drive competitor differentiation and advantage, increase operational efficiencies, reduce costs and boost profitability. Whether you are a retail bank looking to target the mass-affluent segment, or a multi-segment, multi-country bank, UniversalSuite provides a solution which will enable you to scale, onboard, reduce attrition and deliver a market-leading service to your customers regardless of the segment. InclusiveBankingSuite Note A scalable, world-class solution community banks enabling financial inclusion around the world. InclusiveBankingSuite is an integrated banking software solution that helps community banks and financial institutions of all sizes, active in both (group and individual) lending and (member) deposit holding. It provides FIs with world-class banking capabilities that usually are only accessible to larger commercial banks with significant IT budgets. InclusiveBankingSuite, which can be deployed in the Cloud on a SaaS basis, provides a modern, agile and highly scalable core banking system, as well as a single platform for distribution across all digital and assisted channels, and powerful business analytics. For community banks, the InclusiveBankingSuite offers dividend point tracking, provisions therefore and parameterised dividend processing functionality. InclusiveBankingSuite enables FIs to significantly reduce operating costs even when business is growing fast, and to pass on these efficiencies to their end-customers in the spirit of financial inclusion. At the same time, it enables FIs to clearly differentiate themselves with highly responsive service, tailored products and a truly customer-centric experience – giving every customer, regardless of their financial worth, the same quality service anywhere. Cost-efficiency - Cloud deployment and SaaS model, low cost of ownership, high STP levels Innovation - Easy product configuration and launch, powerful customer analytics Multichannel - Efficient multichannel distribution of banking services and products Flexibility - Supports various group types, individual rates, standard payment channels Scalability - Preserves transaction and query performance when growth is fast Operational resilience - Nonstop 24/7 business, scalable data centres with SLAs and controls Business security - Biometrics, customer mnemonics LifecycleManagementSuite Note Manage every phase of the account lifecycle. At its foundation, the Lifecycle Management Suite provides common services such as dashboards, views, reports, workflows, business rules and security that are packaged with business-specific functionality to create solutions for origination, service, collection, recovery and profitability. These modules can stand separately or be deployed in a single platform (working together) to maximize the potential value. Additionally, connectors are available for each module to deliver best-of-breed, third-party integrated services. Account Origination - Streamline the application process with powerful decisioning and multi-channel capabilities. Loan Origination - Deliver instant automated decisions to applicants from any channel for direct and indirect lending. Service - A standardized request management system to dramatically improve performance. Collection - Charge-off, collect on and outsource accounts using functionality for workflow through to reporting. Recovery - Charge-off, collect on and outsource accounts using functionality for workflow through to reporting. Profitability - Behavior-based cost development and profitability measurement on account-level behavior."
  },
  "banking/internet_api.html": {
    "href": "banking/internet_api.html",
    "title": "",
    "keywords": ""
  },
  "banking/internet_banking.html": {
    "href": "banking/internet_banking.html",
    "title": "",
    "keywords": "Retail Internet Banking is a pre-packaged internet banking solution for retail banks. The solution is componentized, very flexible and provides an optimized, user experience fully responsive in design to any device type. Customization of functionality and applying corporate branding is very easy to do in a code-free environment. This solution provides the client with selfservice access to their retail banking products enabling them to manage their finances as and when it suits them. Fully integrated to Temenos’ retail core banking solution it provides a broad range of retail banking functionality such as providing a single view of retail product holdings, management of current and savings accounts, ability to set up and manage domestic and international payments, management of standing orders, direct debits and monies transfers, single view of loans and loan applications, and management of fixed term deposits. The Retail Internet Banking solution can also be provided, fully integrated, with an award winning PFM (personal financial management) solution that enables customers to completely personalize their digital banking experience. With PFM capabilities fully embedded into the solution users can easily visualize and analyze income and spending, cash flow, budgeting and savings goals so that they can manage their money more efficiently and make better spending decisions. This enables you to deliver a best-in-class, customer centric digital banking experience to your customers."
  },
  "banking/introduction.html": {
    "href": "banking/introduction.html",
    "title": "Core Banking Software",
    "keywords": "Core Banking Software The Temenos Core Banking solution is an open, integrated and real-time platform providing: Real-time, complete customer information – enabling financial institutions to offer their customers the right products at the right time. Product builder – allows for extremely quick time to market for new products, as well as the ability to personalize products and services to individual customers; a market of one. Infinite scalability – the solutions run on any software stack and is engineered to be linearly scalable, allowing customers to generate significant economies of scale. Extremely low TCO – against the industry average of 78.8% of IT budgets being spent on maintenance, Temenos customers spend 44.3%. Zero risk of obsolescence – Temenos spends more than 20% of sales annually on R&D, continually developing financial and banking software based on customer requirements and innovation from our labs. We make this available to customers through regular releases, ensuring once they've caught up, they never fall behind again. Delivery Method There is a growing realisation of the need to replace ageing core banking systems, but where to start and how to mitigate risk? Temenos boasts an extremely broad range of system integration and consulting partners, bringing you choice and a deep pool of experience to help with your system migration. Our core banking system can be deployed on premise, on a range of hardware platforms, or on shared infrastructure, allowing you to keep your existing infrastructure, move to a lower cost stack or not have to worry about infrastructure at all. The Temenos core banking system is modular, allowing for progressive renovation and build and migrate strategies, which dramatically reduce risk and speed up time to value."
  },
  "banking/mobile_api.html": {
    "href": "banking/mobile_api.html",
    "title": "",
    "keywords": ""
  },
  "banking/mobile_banking.html": {
    "href": "banking/mobile_banking.html",
    "title": "",
    "keywords": "The mobile banking app is a standalone solution providing rich, pre-configured retail functionality. It is fully integrated into Temenos’ core banking platform. Developed using our SmartHybrid technology solution it provides a near native experience, with fully optimized performance and security. It is available for iOS, Android and Windows phones."
  },
  "banking/reference.html": {
    "href": "banking/reference.html",
    "title": "Banking Reference",
    "keywords": "THIS PAGE IS COMING SOON!"
  },
  "banking/corporate/index.html": {
    "href": "banking/corporate/index.html",
    "title": "Corporate Suite",
    "keywords": "THIS PAGE IS COMING SOON!"
  },
  "banking/islamic/index.html": {
    "href": "banking/islamic/index.html",
    "title": "Islamic Suite",
    "keywords": "THIS PAGE IS COMING SOON!"
  },
  "banking/retail/accounts.html": {
    "href": "banking/retail/accounts.html",
    "title": "Account Retail Banking",
    "keywords": "ACCOUNTS Note In order to create an account for which you want to give Internet access to the customer, please follow below section of current user guide. Current Account To create an account for your new customer: Go to User Menu > Account. Click Open Current Account A new window is diplayed with an account number automatically generated Insert the Customer Id and the currency that you want (It is possible to see company's currency automatically filled, but you can choose a different one) When you press validate button, Account Name, Short Name will be automatically filled based on Customer Id. Also, the field Alternative Account No. 2 will be completed with a generated IBAN number To authorize the account created: Login with a different user Under User Menu go to Authorise/ Delete In the new screen will be displayed the list of unauthorized accounts Authorize the account you created Savings Account The steps to create a savings account are similar to the ones for a current account creation: Go to User Menu > Account. Click either Open Savings Account A new window is diplayed with an account number automatically generated Insert the Customer Id and the currency that you want When you press validate button, Account Name, Short Name will be automatically filled based on Customer Id To authorize the account created: Login with a different user Under User Menu go to Authorise/ Delete In the new screen will be displayed the list of unauthorized accounts Authorize the account you created Create Online Banking Arrangement for an Account Log into T24 BrowserWeb Go to User Menu > Product Catalog Under Product Groups select Accounts > Current Accounts and then select the account type required Both the TCIB and TCMB products are arranged under the Product Groups and Products In the new window, insert the customer id, the currency of the new account and backward the effective date with one business day by clicking the calendar button. ( Note : this change of date is required if you want the customer's account to be available in the same day into the internet banking application. If left as default, the account will be visible only next day ). Press validate The screen will extend (a newly created arrangement is displayed) and you can see several default attributions. You can add more or change these configurations based on your requirements The new account number appears under 'Account' section Note Customer number is an Id from the T24 Customer List (In the Menu bar, type 'CUSTOMER' > Press enter > Go to List Live File > Choose Id or use the Id of a customer you created before ) User is advised to take note of the Customer ID and Arrangement ID to use them during the upcoming configuration Note down the Arrangement Id. This is needed for authorization step Commit the deal A warning message is displayed regarding the Account Opening Agreement > Choose 'RECEIVED' and press again Commit button In case the arrangement currency is different from charge currency, an override message will pop-up > Click Accept Overrides > Transaction is complete Log out and login again with a different user in order to authorise the arrangement In the command line type AA.ARRANGEMENT.ACTIVITY A AAACT171074H9N7MSQ ( AA.ARRANGEMENT.ACTIVITY A + the arrangement id ) Press enter and then authorize the transaction (double tick button) Transaction is complete Note You can create different account types with different currencies by using the same steps as above Login to TCIB application with User Id and password 123456 Please note that the account created will be visible after a few minutes. Deposit Funds via Teller Please follow this user guide to see how you can do a cash deposit to a newly created account."
  },
  "banking/retail/create-payee.html": {
    "href": "banking/retail/create-payee.html",
    "title": "Create Payee",
    "keywords": "Create payee In order to add payees in the mobile application, first they must be available in T24. For this, log in T24 BrowserWeb, type BENEFICIARY, TCMB into the command line and press enter: Go to More Actions , then List Live File . Here you will be able to see the entire list of beneficiaries, from which you can add payees in TCMB application. Also, new beneficiary can be created. Press New Deal button. From the new screen, at Owning Customer field, select from the drill down button the customer you want to add as beneficiary: Press commit. Note: If a warning appears, example: Beneficiary Bank details not provided, then Accept Overrides. Now, the beneficiary with the Id BEN9415700044 and nickname APPLE is available in the list of TCMB beneficiaries."
  },
  "banking/retail/customer.html": {
    "href": "banking/retail/customer.html",
    "title": "Customer Retail Banking",
    "keywords": "CUSTOMER Customer record holds all the basic information about a customer. Ideally only one Customer record should exist for each customer. This can be created whenever a name, address and other such essential information is obtained and is not dependent on the existence of an account. In T24, creating a Customer record need not to wait till we are ready to open an account or till we propose to have a business transaction. For example, a Customer record can be set up even when a Bank is considering having any relationship with. Later, when it decides to enter into any contractual obligation, like Foreign exchange or Money Market dealings, it can use the Customer record already created. If at any later stage, the Bank proposed to open a current account, it need not create another record for the Customer. It can as well use information already stored. Once a customer record is authorised, it is not possible to reverse the record. We can however amend any details as and when needed To create a customer: Login to T24 BrowserWeb Under User Menu go to Customer > Individual Customer Once open, the new screen will automatically generated a customer Id To see which are the minimum fields required, click validate button > You will get an 'Input missing' warning with following fields: Mnemonic Short Name.1 Full Name.1 Sector Gender Warning 'Date of Birth' field is not mandatory, but if you wish to assign later, for example, a current account, as long as the age is not defined, the system will consider that the customer is not eligible ( minor age ) and will not allow the account creation. Fill all mandatory fields and press commit To authorise the record: Log out and log in with a different user in order to authorise the record Go to User menu > Customer > Authorise/ Delete Customer > Find the customer created > Click Authorise button Customer is now registered and appears in Live Files records"
  },
  "banking/retail/explore-core-banking.html": {
    "href": "banking/retail/explore-core-banking.html",
    "title": "Explore Core Banking",
    "keywords": "Explore Core Banking Note The Temenos core banking platform has been the best-selling solution on the market for 15 years, used by over 600 financial institutions. It combines rich functionality with cutting-edge technology in an easily upgradable application. Its customers benefit from real-time embedded analytics, a sophisticated product builder and technology that allows for easy integration and infinite scalability, in turn enabling them to significantly outperform their peers. How Temenos Core Banking solution helps The Temenos Core Banking solution is an open, integrated and real-time platform providing: Real-time, complete customer information – enabling financial institutions to offer their customers the right products at the right time Product builder – allows for extremely quick time to market for new products, as well as the ability to personalize products and services to individual customers; a market of one Infinite scalability – the solutions run on any software stack and is engineered to be linearly scalable, allowing customers to generate significant economies of scale Extremely low TCO – against the industry average of 78.8% of IT budgets being spent on maintenance, Temenos customers spend 44.3% Zero risk of obsolescence – Temenos spends more than 20% of sales annually on R&D, continually developing financial and banking software based on customer requirements and innovation from our labs. We make this available to customers through regular releases, ensuring once they've caught up, they never fall behind again How Temenos Core Banking software is delivered There is a growing realisation of the need to replace ageing core banking systems, but where to start and how to mitigate risk? Temenos boasts an extremely broad range of system integration and consulting partners, bringing you choice and a deep pool of experience to help with your system migration Temenos Core Banking system can be deployed on premise, on a range of hardware platforms, or on shared infrastructure, allowing you to keep your existing infrastructure, move to a lower cost stack or not have to worry about infrastructure at all The Temenos Core Banking system is modular, allowing for progressive renovation and build and migrate strategies, which dramatically reduce risk and speed up time to value Core Banking Operation Guide Login T24 Customer Accounts Users Funds Transfer"
  },
  "banking/retail/fundstransfer.html": {
    "href": "banking/retail/fundstransfer.html",
    "title": "Create a Funds Transfer",
    "keywords": "Funds Transfer Funds Transfer is used to effect payments from one account to another account either internally or externally and is related to CUSTOMER and ACCOUNT applications. Login in to T24 If you are MarketPlace Provider, check your Temenos Sandbox product and get the BrowserWeb url to login in T24. e.g. http://127.0.0.1:8080/BrowserWeb Get the T24 User Name and Password from Temenos Sandbox and click on Sign in Initiate a Fund Transfer Type FT I F3 or FUNDS.TRANSFER I F3 . ( FT is shortname of FUNDS.TRANSFER ) Enter the required details of Fund Transfer and click on Validate button: If you don’t provide the required (mandatory) information, then an error message will display on the window. If all the information is correct, then you’ll get successful message of Funds Transfer with transaction reference number. Transaction reference number is necessary to authorise the Fund Transfer. (Response example: Txn Complete: FT16113L60X5 17:58:08 13 DEC 2017 FUNDS.TRANSFER I ) Note You can avoid authorising a transaction by using comma version of Funds Transfer. e.g. use FT, I F3 or FUNDS.TRANSFER, I F3 instead of FT I F3 or FUNDS.TRANSFER I F3 Authorise the Funds Transfer Login to T24 with a different user to authorise the above Funds Transfer. Inputter is not allowed to authorise any transaction. In T24 you can configure how many authorisers are required for a transaction. Enter this command in command window FT A FT16113L60X5 or FUNDS.TRANSFER A FT16113L60X5 Click on the Authorise a deal button You will see a success message for successful transaction ( Txn Complete: FT16113L60X5 18:12:51 13 DEC 2017 FUNDS.TRANSFER A ) Now this transaction is LIVE in T24"
  },
  "banking/retail/increase-daily-limit.html": {
    "href": "banking/retail/increase-daily-limit.html",
    "title": "Increase Daily Limit",
    "keywords": "Increase Daily Limit T24 allows changing the daily limit for accounts transactions through AA application (Arrangement Architecture). Below steps show how to modify this limit for a specific customer. Sign in T24 BrowserWeb From Admin Menu go to External User Administration , then Manage External Users Type EXTERNAL.USER.ID for the customer for which you want to change the arrangement. Click Find Click on View /Modify Arrangement Go to New Activity , change the value of Limit Amount and press commit button Notification will appear, click Accept Overrides Sign off and Login in again with a different user in order to authorize this change Go to the same Menu Manage External User Repeat steps 3 and 4 Authorize the change Daily limit for the Arrangement has been changed."
  },
  "banking/retail/index.html": {
    "href": "banking/retail/index.html",
    "title": "Banking Retail",
    "keywords": "THIS PAGE IS COMING SOON!"
  },
  "banking/retail/internal-user.html": {
    "href": "banking/retail/internal-user.html",
    "title": "User Retail Banking",
    "keywords": "Users There are two types of users in T24: Internal user = Bank stuff External user = Bank customer Please see below what is the process of User creation for both types. Internal Users There are different types of internal users with different capabilities and admin rights based on their roles such as: Customer Service Agent, Account Office, Customer Relation Manager, Supervisor etc Usually, for testing and demo purposes, you will need two simple users. You can have one user to create, modify records, effect transactions, inquire the database and other operations and a second user to authorize any changes that you do. Note Once you have been provided access to Temenos Sandbox, you will automatically receive two specific users along with a standard password, which you can change first time when you login. The necessity to create more users comes in case you might block one user or you need to see different tests done by different users. How to create: If you are MarketPlace Provider, check your Temenos Sandbox product and get the BrowserWeb url to login in T24. e.g. http://127.0.0.1:8080/BrowserWeb Get the T24 User Name and Password provided by MarketPlace team and click on Sign in. Log into the BrowserWeb. Once you login, please keep in mind the user that appears on the left corner. See example below: In the Menu bar, type “ USER, ” (the comma from the end is important in order to skip the authorization step) Copy details of an existing User The easiest way to create a new user is to copy the details from an existing one and use them to a new user Id. In the new screen, type the user name (ealier identified) as shown below: Press enter and a new window is open Go to “ More Actions… ” and choose from there “ Copy ” as shown below: Click on validate button (next right to \"More Actions\" A message is displayed \" Deal copied to your T24 clipboard as: application USER Version , \" You can close this message window and the User Profile window Create the new user Choose a similar name (for easier use). Here, we will call it SAMPLE22 In USER, (don't forget comma ), type the user ID ( SAMPLE22 ) as shown in the picture below and press enter Go to “ More Action… ” and choose from there “ Paste ” and click “ Go ” (or Validate) button The record is automatically populated with the values copied from previous user Update the “ User Name ”, the “ Sign On Name ”, the \" Start Date \" (to be TODAY date) and the \" End Date \". Press commit button Warning User Name must be different than Sign On name. Sign On name is the one you use when you login. For each Sign On name there is a related User Name Transaction is complete. Now sign off and log again into the BrowserWeb with SAMPLE2 user (your newly created user - Sign On Name) Just type a random password and then press enter. A new screen is displayed asking to set a new password After doing this step you will be logged to T24 with your new credentials External Users The user creation process involves the following steps: Create Online Banking Arrangement Create Group Permission Create External User Authorise the Channel User Manage External User Please check Users guide to see how to create an external user."
  },
  "banking/retail/login24.html": {
    "href": "banking/retail/login24.html",
    "title": "Login to T24",
    "keywords": "Login to T24 Follow the simple steps to login into T24 Note Make sure you have the access of Temenos Sandbox Login Screen After getting the login details you need launch BorwserWeb screen in order to login and access T24 resources. Login Access After successful login you will able to do all banking operation by using T24 Browser Web user interface. According to your role and permission you'll see corresponding screen. e.g."
  },
  "banking/retail/reset_user_password.html": {
    "href": "banking/retail/reset_user_password.html",
    "title": "Reset The T24 USER Password",
    "keywords": "Reset The T24 USER Password Note To reset a user password you need to have access to the system through another user. To avoid the situation in which you may block two users, it is advisable to create an additional user, which you can use to unblock the others. In order to create another user, please check USERS Login to BrowserWeb Log into the BrowserWeb with an user for which you know the password In order to determine the ID of the user of which password you want to reset: Reset the password Launch the PASSWORD.RESET application from T24 Command Line Type below command and enter PASSWORD.RESET, I 1001 NOTE : Instead of 1001 you can use any four digit number. You need to fill the following mandatory information in above form User Reset.1 : User Id you want to change the password User Password.1 : Default password so user can login first time User Type : User type internal or external. Click here to learn more about user type After filling the information you need to commit the transaction Logout from current user and login again with changed password user At first login T24 will ask you to reset the password."
  },
  "banking/retail/teller.html": {
    "href": "banking/retail/teller.html",
    "title": "Teller Operations",
    "keywords": "TELLER In order to deposit funds to a new account, you can choose to do a Cash deposit operation through Teller application. You will need first to open a Till and then deposit funds. Open a Till Go to User Menu > Retail Operation > Account Transactions > Teller > Head Teller Operations > Till Administration > Create New Till Check first the list of open tills and make sure you choose a different ID than the ones listed here. Insert a 4 digit number for the new teller in New Till Creation box and then press enter. In the new screen, Till Status should be checked as open and Teller should be your user Id , which you can select from the dropdown list. Press commit button > Your till is now open and you are able to deposit funds for your customer as below. Cash Deposit Go to User Menu > Retail Operation > Account Transactions > Teller > Teller Operations > Teller Cash > Cash Deposit Local ( Note : if you want to credit an account which has a different currency than local one, choose Cash Deposit Foreign) Insert the amount you want to deposit and the account you wish to credit Under Cash denomination table, make sure you choose correct number of units related to the amount inserted Press commit > Transaction is completed You can now check the customer's account balance: Go to User Menu > Account > Account Entries > Entries for Today Insert the account number and click Find"
  },
  "banking/retail/users.html": {
    "href": "banking/retail/users.html",
    "title": "User Retail Banking",
    "keywords": "Users There are two types of users in T24: Internal user = Bank stuff External user = Bank customer Please see below more details about internal user and what is the process of creation of an external user. Internal Users There are different types of internal users with different capabilities and admin rights based on their roles such as: Customer Service Agent, Account Office, Customer Relation Manager, Supervisor etc. Usually, for testing and demo purposes, you will need two simple users. You can have one user to create, modify records, effect transactions, inquire the database and other operations and a second user to authorize any changes that you do. Note Once you have been provided access to Temenos Sandbox, you will automatically receive two specific users along with a standard password, which you can change first time when you login. External Users Note Each External User is related to: a customer (i.e., the person who enters the system through an External User) an internet service arrangement channel permissions The external user creation process involves the following steps: Create a Customer in T24 Create an Internet Service Arrangement Authorise the Internet Service Arrangement Create a Channel Permission Create the External User Authorise the Channel User Activate External User Create a Customer in T24 Please follow this user guide to see more details about a T24 customer and how to create one. Create an Internet Service Arrangement An Internet Service Arrangement is an instance of a certain product that is linked to a specific customer. This arrangement is a personalized instance of a Internet Banking product that defines what the user gets to view when they access the system. When creating the arrangement, some default settings are included. Go to User Menu > Product Catalog > Create Online Banking Arrangement From Category list (under Product Groups) select > Internet Services > Temenos Connect Retail > TCIB Personal Internet Banking, which will create a new arrangement: A new window is displayed > Insert the Customer ID (for the client you want to provide Internet access) and click validate button > An internet service arrangement is created with default settings Note down the arrangement Id Authorise the Internet Service Arrangement Log out and login again with a different user in order to authorise the arrangement In the command line type AA.ARRANGEMENT.ACTIVITY A AAACT171073FPYW1YK (AA.ARRANGEMENT.ACTIVITY A + the arrangement id ) Press enter and then authorize the transaction (double tick button) Transaction is complete Create a Channel Permission Under Admin Menu > click External User Administration > Create/Manage Online Banking Access > Manage Permissions Click Create New Permission > Insert your customer Id > Give a Group Name (at your choice), for example IB (Internet Banking) > Click Find Window expands > Click Create Group Permission Window expands with Channel Permission: insert Description (at your choice) select Type (click on the field, if you want to see its definition and rules) from Dropdown List, select the types of Products you want to give permission for select the Permission type (for example, if you want to allow the external user to do transactions, choose 'Transact', if you want to give him only view rights, select 'See' etc) click Commit button transaction is complete > there is no need to authorise this phase Note Important! When creating the Group Permission, the products created previously (for example current accounts) will not show up in this menu and will NOT be available in the Internet Banking application. In order to create an account for which you want to give Internet access to the customer, please follow this section of Accounts user guide. After creating the account arrangement, the new account will be automatically available into Products list from Group Permission (see below example, image 3) and also into the Internet Banking application. Create the External User Under Admin Menu > click External User Administration > Create/ Manage Online Banking Access > Create External User In the new screen displayed, type the following: External User Creation ( RETAIL ): type a name that the customer will use to login Name ( Cersei Baratheon ): customer's system name Channel ( INTERNET ): click scroll down button Arrangement ( AA171077M827 ): click scroll down button Allowed Customer ( 190207 ): click scroll down button Channel Permission ( 190207-TC ): click scroll down button Start Date ( 26 JAN 2018 ): use calendar and choose today's date End Date ( 26 JUN 2018 ): use calendar and choose user's availability date Authentication Type ( External ): make sure 'External' is checked Authorise the Channel User Logout and login with a different user Go to Admin Menu > External User Administration > Authorise Online Banking Access > Authorise Channel User At this moment Record status appears as 'INAU' = unauthorised > Commit the record Activate External User You can log back with previous user Go to Admin Menu > External User Administration > Create/Manage Online Banking Access > Manage External Users - a search screen is displayed > enter customer id and click find from scroll button on the right, select Modify Channel User > press enter change status from 'Initiated' into 'Active' Commit the deal (no need for authorization at this step) External user is created You can now insert User ID and password 123456 to login to TCIB application"
  },
  "banking/universal/index.html": {
    "href": "banking/universal/index.html",
    "title": "Banking Universal",
    "keywords": "THIS PAGE IS COMING SOON!"
  },
  "banking/wealth/index.html": {
    "href": "banking/wealth/index.html",
    "title": "",
    "keywords": ""
  },
  "design/example.html": {
    "href": "design/example.html",
    "title": "Design Studio Example",
    "keywords": ""
  },
  "design/faq.html": {
    "href": "design/faq.html",
    "title": "Design FAQ",
    "keywords": "UXP How to create a Hybrid App using a Cordova plugin? Find general details on how to get your applications' functionality running in an Temenos UXP app with the purpose to integrate it with Temenos Channels Mobile. Features of Temenos Channels Mobile Banking (hybrid): - Configurable: High fidelity / pixel perfect layout - Native: Shells and skins for iOS , Android and Windows - Device access: Access phone functionality: Camera, GPS, Phone Book... - Dynamic: Update-without new downloads - Secure: 3rd party authentication server integration plus TLS/SSL Knowledge prerequisites: - iOS/Android developing knowledge - Apache Cordova knowledge (the underlying framework that’s powering SmartHybrid) - Web developing knowledge - JAVA knowledge Tools and documentation: - Latest UXP version installation - - Access to UXP user guides Note: The APK and Java refer to Android, but the concept applies to iOS as well. Steps to follow: 1. Get familiar with Cordova (install it on your computer and write a Hello World project). Please check here information about Cordova. 2. Build the APK and run it on your mobile. 3. Integrate your application SDK into that simple application. This way you will understand what a Cordova plugin is. During this process you will write some java files and javascript methods. You will invoke the javascript methods from static html pages (maybe index.html) from your simple application. 4. Take the plugin files and install it in TCMB as an additional Cordova plugin. You will need to write an UXP widget that invokes the javascript methods. (The user guides contain UXP related information, such as widgets and the integration of custom Cordova plugins.) 5. For creating Cordova custom plugins, the information is available on the Cordova website, then the plugin directory can be included in the UXP solution (TCMB in this case) using the Project > Properties > Additional Cordova Plugins tab. We distribute a few hybrid widgets and Cordova plugins out of the box; this can give an idea on how the widget interacts with the respective plugin from the HTML page. This is a brief summary for the steps to follow. Please refer also to Temenos UXP Hybrid Guide."
  },
  "design/glossary.html": {
    "href": "design/glossary.html",
    "title": "",
    "keywords": "KeyWord Description Android Mobile operating system developed by Google, based on a modified version of the Linux kernel and other open source software and designed primarily for touchscreen mobile devices such as smartphones and tablets. BPM Business Process Management - using various methods to discover, model, analyze, measure, improve, optimize and automate business processes. COM Component Object Model (COM) is a binary-interface standard for software components introduced by Microsoft. It is used to enable inter-process communication object creation in a large range of programming languages. Eclipse An integrated development environment (IDE) used in computer programming, and is the most widely used Java IDE. iOS Mobile operating system created and developed by Apple Inc. exclusively for its hardware. It is the operating system that presently powers many of the company's mobile devices, including the iPhone, iPad, and iPod Touch. JDBC Java Database Connectivity (JDBC) is an application programming interface (API) for the programming language Java, which defines how a client may access a database. JSON (JavaScript Object Notation) is a lightweight data-interchange format. It is easy for humans to read and write. It is easy for machines to parse and generate. Odata Open Data Protocol defines a set of best practices for building and consuming RESTful APIs and is based on widely-used technologies like HTTP, Atom publishing protocol, and JSON. There is an ever growing set of libraries available to interface the OData protocol with your preferred programming language or environment (e.g., Java, Javascript, .NET, PHP, Android, iOS, etc.). TLS Transport Layer Security (TLS) – and its predecessor, Secure Sockets Layer (SSL). are cryptographic protocols that provide communications security over a computer network. Several versions of the protocols find widespread use in applications such as web browsing, email, Internet faxing, instant messaging, and voice over IP (VoIP). Websites are able to use TLS to secure all communications between their servers and web browsers. Windows Group of several graphical operating system families, all of which are developed, marketed, and sold by Microsoft. Each family caters to a certain sector of the computing industry."
  },
  "design/index.html": {
    "href": "design/index.html",
    "title": "Design",
    "keywords": "Design Temenos' Design offering boosts banks' responsiveness to changes in business requirements while reducing cost-per-change. This is achieved by enabling banks to adapt the functionality of their Temenos business systems, and to adapt their business processes in a productive, cost-efficient and low-risk manner. How the Design offering helps Our Design offering makes your bank much more responsive, productive, and cost-efficient. Most importantly, it enables you to easily make high-quality adaptions to your banking systems' functionality, to stay abreast with evolving business requirements and customer journeys. Our Design products and framework are for you if you are seeking enhanced: Responsiveness/Productivity - the ability to respond to evolving business requirements by adapting your functionality and processes much faster and much more frequently, possibly multiple times a week, or even per day, without increasing costs Quality - the ability to build and run a highly industrialized and institutionalized change-the-bank process, which encourages high-quality development work and eliminates the risk of faulty changes affecting business operations Cost-efficiency - reduce your dependence on vendor-specialized experts, legacy in-house tools and complex coding cycles, and maximize the level of automation of the change-the-bank process \"Research shows productivity improvements of up to 10 times from using intuitive configuration, as enabled by Design Studio, and up to 30 times with automation and best-practice adoption, as enabled by the Design Framework.\" Note Adapt your banking system functionality and business processes better, faster and more frequently How it works Our Design offering consists of products and also proposes an optimal way (framework), to deploy them in the bank. Design Studio for Core Banking Change Management provides an intuitive, Eclipse-based, integrated, graphical environment and a Model-Driven Development approach to software development, that commodity specialists can use to easily configure changes in the Core Banking system (formerly T24) Design Studio for Wealth Front Office provides similar capabilities as above, but for Temenos' Wealth Front Office system (formerly Triple'A Plus). Specifically, it supports efficient configuration of the entire standard Web User Interface of the Wealth Front Office system Design Studio for Core Banking Development provides facilities for developing additional software (code) that will run within the Core Banking system (formerly T24) environment Design Studio for BPM provides an Eclipse -based, integrated development environment, which commodity specialists can use to easily create, amend, (re-)enrich, deploy and execute new and existing business workflows within the Core Banking system and beyond The Design Framework separates the places where changes are designed, tested and deployed. It allows the bank to exploit some of the above products in combination with standard third-party tools, in order to automate the change-the-bank process and adopt software development best practices. This framework is part of Temenos' approach to implementing enterprise architecture in the bank, in order to reduce its cost per transaction Issues faced in Design Our Design offering addresses the lack of responsiveness, productivity and cost-efficiency faced by banks that try to adapt their banking systems' functionality and their business processes, by changing underlying code directly in the system. Your bank will benefit from our Design offering if it: Struggles to adapt its Core Banking or Wealth Front Office functionality fast and frequently enough to respond effectively to evolving business requirements Struggles to adapt its business processes, within the Core Banking system and beyond, quickly and cost-efficiently to keep pace with evolving user and customer journeys Bears high costs from relying on vendor-specialized experts, in-house tools and complex coding cycles to adapt functionality and business processes Bears risks relative to poor-quality changes being made and deployed directly into the live business environment, potentially compromising the stability of business operations Lacks the right tools and architecture to automate the change-the-bank process and to adopt software development best-practices that break down silos within the change-the-bank team."
  },
  "design/ds/architecture.html": {
    "href": "design/ds/architecture.html",
    "title": "Design Studio Architecture",
    "keywords": "THIS PAGE IS COMING SOON!"
  },
  "design/ds/getting-start.html": {
    "href": "design/ds/getting-start.html",
    "title": "",
    "keywords": ""
  },
  "design/ds/index.html": {
    "href": "design/ds/index.html",
    "title": "Design Studio",
    "keywords": "Design Studio The Design Studio (DS) Workbench application is an integrated graphical environment that enables business and IT professionals to design elements for T24 Model Bank. The application provides his own \"designers\" using editors and text-based tools for developing elements called: models. Design Studio is the Integrated Development Environment (IDE) for realizing T24 design time tasks. It provides import and edition of resources (local ref, versions, enquiries...). All items edited in DS intend to be packaged and deployed on T24 runtime environment. The T24 data these resources return can interface with other systems or be exposed in a browser. Design Studio"
  },
  "design/ds/reference.html": {
    "href": "design/ds/reference.html",
    "title": "Design Studio Reference",
    "keywords": "THIS PAGE IS COMING SOON!"
  },
  "design/ds/start-with-prospect-iris.html": {
    "href": "design/ds/start-with-prospect-iris.html",
    "title": "Start with Prospect Iris",
    "keywords": "Start with Prospect Iris Introduction Prospect-IRIS is sample project for develop banking APIs. This project using IRIS and works with Temenos T24. Prerequisite Github Account – visit http://www.github.com to create an account Temenos MarketPlace products Member SDKs and Design Tools Knowledge of Web Technology Git SCM Tools – Download from https://git-scm.com/download/ Github repository In order to get the Prospect-iris into your development environment please follow steps mentioned here . Create Flow and Events in T24 In order To create a Flow in T24 please follow this 30 Minutes guide available here . GET Published Flow Temenos Sandbox contains necessary API to get the published flow in POSTMAN. API /enqIntegrationFlowCatalogs() will fetch all the available flow in T24 but we want to GET the published flow according to FlowName. Example: Below GET request will fetch the published Flow where FlowName=MarketPlaceDemo-FTMarketPlaceDemo *http://127.0.0.1:8080/MarketPlaceDemo-iris/MarketPlaceDemo.svc/GB0010001/enqIntegrationFlowCatalogs()?$filter=FlowName eq ‘MarketPlaceDemo-FTMarketPlaceDemo’* This will also give you the name of the fields on which events will generate e.g. <d:enqIntegrationFlowCatalog_FieldDefnMvGroup m:type=”Bag(MarketPlaceDemo-modelsModel.enqIntegrationFlowCatalog_FieldDefnMvGroup)”> <d:element> <d:FieldDefn>AMOUNT.CREDITED</d:FieldDefn> </d:element> <d:element> <d:FieldDefn>AMOUNT.DEBITED</d:FieldDefn> </d:element> <d:element> <d:FieldDefn>BASE.CURRENCY</d:FieldDefn> </d:element> <d:element> <d:FieldDefn>BC.BANK.SORT.CODE</d:FieldDefn> </d:element> <d:element> <d:FieldDefn>BEN.ACCT.NO</d:FieldDefn> </d:element> <d:element> <d:FieldDefn>BEN.ACCT.NAME</d:FieldDefn> </d:element> <d:element> <d:FieldDefn>BEN.BANK</d:FieldDefn> </d:element> <d:element> <d:FieldDefn>CREDIT.ACCT.NO</d:FieldDefn> </d:element> <d:element> <d:FieldDefn>CREDIT.AMOUNT</d:FieldDefn> </d:element> <d:element> <d:FieldDefn>CREDIT.CURRENCY</d:FieldDefn> </d:element> <d:element> <d:FieldDefn>DEBIT.ACCT.NO</d:FieldDefn> </d:element> <d:element> <d:FieldDefn>DEBIT.AMOUNT</d:FieldDefn> </d:element> <d:element> <d:FieldDefn>FT1</d:FieldDefn> </d:element> <d:element> <d:FieldDefn>REF.NO</d:FieldDefn> </d:element> <d:element> <d:FieldDefn>TREASURY.RATE</d:FieldDefn> </d:element> </d:enqIntegrationFlowCatalog_FieldDefnMvGroup> Generate the Event To generate the event you have to do some transaction in T24, use the same T24 Version or T24 Application you have created in above steps. Follow this guide to Initiate a transaction. GET Generated Event API /enqIntegrationEventss() will return you all the processed and unprocessed events from events queue. Example: Below URI will return all available events data where EventType=MarketPlaceDemo-FTMarketPlaceDemo http://127.0.0.1:8080/MarketPlaceDemo-iris/MarketPlaceDemo.svc/GB0010001/enqIntegrationEventss()?$filter=EventType eq ‘MarketPlaceDemo-FTMarketPlaceDemo’ Get Generated Events in Java Program Here we are using Prospect-IRIS project, all source and example available in the project, for this example we are using unirest client library feel free change something you prefer. maven dependency for this class <dependency> <groupId>com.mashape.unirest</groupId> <artifactId>unirest-java</artifactId> <version>1.3.0</version> </dependency> Configuration class public class Configuration { public static String DATA_SERVICE_URL = “http://127.0.0.1:8080/MarketPlaceDemo-iris/MarketPlaceDemo.svc/GB0010001/”; public static String INPUTTER_USER_NAME = “USER001”; public static String INPUTTER_PASSWORD = “123456”; public static String AUTHORISER_USER_NAME = “USER002”; public static String AUTHORISER_PASSWORD = “123456”; } Print Integration event on the console public void printIntegrationEvent() throws UnirestException, IOException { String url = Configuration.DATA_SERVICE_URL + “enqIntegrationEventss()?$filter=substringof(‘MarketPlace’, EventType)”; Unirest.setDefaultHeader(“Accept”, “application/atom+xml”); HttpResponse<InputStream> response = Unirest.get(url).basicAuth(Configuration.INPUTTER_USER_NAME, Configuration.INPUTTER_PASSWORD).asBinary(); System.out.println(IOUtils.toString(response.getBody())); } Note: You need to add import from respective classes, this sample is available as a Integration Test in GitHub project. GET Generated events since … You can specify the filter to fetch the events // set the date you want to fetch the events since Date sd = new SimpleDateFormat(“yyyy-MM-dd HH:mm:ss.SSS”).parse(“2016-03-23 20:38:32.522”); long time = sd.getTime(); // format the time stamp so T24 understand String t24Date = String.valueOf(time).substring(0, 10) + “.” + String.valueOf(time).substring(10); String filter = “?$filter=substringof(‘MarketPlace’, EventType)&$filter=CreationTime gt ‘” + t24Date + “‘”; String url = Configuration.DATA_SERVICE_URL + resourceName + filter; Unirest.setDefaultHeader(“Accept”, “application/atom+xml”); HttpResponse<InputStream> response = Unirest.get(url) .basicAuth(Configuration.INPUTTER_USER_NAME, Configuration.INPUTTER_PASSWORD).asBinary(); System.out.println(IOUtils.toString(response.getBody())); In this example you’ll get all the events after 23-March-2016 20:30:32 GET generated events for one hour Time interval You can specify the time range to fetch the events // set the date you want to fetch the events since – keep one hour gap Date sd1 = new SimpleDateFormat(“yyyy-MM-dd HH:mm:ss.SSS”).parse(“2016-03-23 19:38:32.522”); Date sd2 = new SimpleDateFormat(“yyyy-MM-dd HH:mm:ss.SSS”).parse(“2016-03-23 20:38:32.522”); long time1 = sd1.getTime(); long time2 = sd2.getTime(); // format the time stamp so T24 understand String t24Date1 = String.valueOf(time1).substring(0, 10) + “.” + String.valueOf(time1).substring(10); String t24Date2 = String.valueOf(time2).substring(0, 10) + “.” + String.valueOf(time2).substring(10); //create filter string String filter = “?$filter=substringof(‘MarketPlace’, EventType)&$filter=CreationTime gt ‘” + t24Date1 + “‘ and CreationTime lt ‘” + t24Date2 + “‘”; String url = Configuration.DATA_SERVICE_URL + resourceName + filter; Unirest.setDefaultHeader(“Accept”, “application/atom+xml”); HttpResponse<InputStream> response = Unirest.get(url) .basicAuth(Configuration.INPUTTER_USER_NAME, Configuration.INPUTTER_PASSWORD).asBinary(); System.out.println(IOUtils.toString(response.getBody())); You get all the events in between the 2016-03-23 19:38:32.522 and 2016-03-23 20:38:32.522"
  },
  "design/uxp/architecture.html": {
    "href": "design/uxp/architecture.html",
    "title": "UXP architecture",
    "keywords": "Temenos UXP Architecture The platform has the following key elements: Integrated Development Environment (IDE) The Integrated Development Environment ( IDE ) for the Design-Time is a powerful cross platform desktop application (written in Java) that enables the rapid development, visualisation and maintenance of the digital business solutions. The IDE may be used by a single business user or by multiple users, with each addressing separate aspects of the development. The IDE consists of a series of editors (Presentation Editor, Process Editor and Integration Editor) which allow the user to define the components of a business solution: The Presentation Editor - It is used to create and manage the look and feel of the UI solution. Multiple presentations can be created and applied to processes without limit. The Process Editor - It is used to create and visualise business processes. A process is made of multiple phases, which may consist of text, data entry fields, rules, buttons and even online help to guide end users. The IDE's powerful rules engine provides an extensive range of configurable rules to enable the dynamic behaviour (workflow, validation, business service calls) of the UI solution to be specified without writing code. The Integration Editor - It supports open interfaces for integration to Temenos solutions, in-house systems, 3rd party software or middleware, WebServices, OData , XML, relational databases via JDBC , Microsoft COM or custom connectivity via Java classes as well. Other features: Components - allow to create re-usable screens or collection of rules to reduce development effort and create consistency of common screens. Widget Framework - Temenos UXP provides a rich palette of advanced controls (widgets) which can be used without scripting. DataSets - Temenos UXP allows to create test data to drive dynamic behaviour in an application. This is a powerful capability that can greatly improve iterative prototyping and assist in demonstrations of an application when applications data sources are unavailable. Run-Time Engine (RTE) The runtime environment interprets and presents the business solution developed within the IDE. It controls the flow of the process; stores data captured by the solution and can integrate with external systems. RTE is the server platform that renders a completed application for end users. It is a multi-presentation engine that provides high performance, scalability and security with support for open standards. Administration and Deployment UXP platform also comprises the UXP Administrator, UXP Deployment Manager and pre-built applications and modules available for specific vertical markets. UXP Administrator - provides release management and version control facilities to co-ordinate multi-developer teams through an administrator interface. UXP Deployment Manager - manages the deployment of releases and associated configuration files, and installs to the RTE."
  },
  "design/uxp/index.html": {
    "href": "design/uxp/index.html",
    "title": "UXP Introduction",
    "keywords": "Temenos User Experience Platform Temenos UXP is a graphical development tool which enables you to build browser based business solutions. It allows you to develop solutions without any knowledge of the technology used to deliver them. Once built, complete solutions or parts of solutions can be easily reused and re-branded, allowing rapid development of new solutions. Used by major financial institutions and blue-chip systems integration companies, it is the only platform that allows the Financial Institution to create multiple presentation experiences from a single application process definition. This powerful capability means that you can support contextual applications for different user types, deliver to multiple delivery channels and support different languages and brands without duplicating effort. Additionally, Temenos UXP supports different presentation experiences, including: online (rich client and thin client – typically used for disability access and mobile devices), offline, portal or composite clients. Team of users are able to create these experiences by configuration only with the need for code minimised (coding needed only for specific extensions like widgets or complex rules). The Temenos UXP provides a complete suite of tools to build, deploy and maintain business solutions. Note A brief description of the UXP platform can be found here: Architecture Benefits of UXP The underlying UXP (user experience platform) across all Channel solutions (Core and Front Office Banking Applications) is Temenos’ key unique differentiator. The UXP will provide you with a wide range of business benefits including significant improved productivity, operational efficiencies and reduced cost of ownership. Basic Concepts In order to use UXP, you will need to be familiar with the basic terminology used to describe a business problem, which will help to build a simple UXP application. Process A process in UXP captures client data. At its simplest, a process encapsulates a business solution. A process can become more complicated in ways which will be described later in this document. Phase UXP also allows questions to be grouped into a number of sections. Each section forms a logical group and is known as a phase. A process will consist of one or more phases. For example, one phase would collect the client’s personal details and another phase their account details. Dividing a solution into phases introduces points in the solution, between phases, where processing based on the information entered by the user can be carried out. This allows more complex business logic to be added to the solution. In more complex solutions, business processing may also be associated with individual questions. In order to move from one phase to the next, the user must click buttons or links which are specified within UXP for each phase. This process is known as navigation between phases. Data Data Item In order to make use of the data entered by the user during the process, the answer to each question is stored in a data item. Data items are defined by the UXP user. Data Type Each data item has a data type. There are pre-defined data types within UXP e.g. decimal, date, text. When a data item is created, a data type must be associated with it. Data Group Related data items can be organized together as a data group. For example, the client’s address can be organized as a data group called “address” which contains the data items “house number”,” street”, “town” and “postcode”. A data group allows related data items to be manipulated more easily. The complete set of data items and groups are collectively known as the data store. If more than one address needs to be captured, for example the client’s previous addresses, the address data group can occur more than once. Each occurrence is known as an instance. This allows re-use of data groups and simplifies the data store. List The answers to certain questions within a process can sometimes be limited to a pre-defined choice of several answers. The range of possible answers is defined within a list. For example, the answer to a question regarding your marital status may be limited to the answers “married”, “single”, “divorced” or “other”. User Guide Rules In order to increase the functionality of the process, operations can be performed on the data contained within the data items. These operations are known as rules. The most common rules perform validation and control the flow of the process. Rules can be executed between phases or within a phase when the value of a specific question changes. Presentation Once the questions have been added and the rules defined, the process is complete. A presentation is a way of defining how the process will appear to the end user. More than one presentation can be applied to a single process in order to deliver the business solution to different channels. For example, a different user experience may be required for call centre users compared to that of the general public. Presentations will automatically be applied to all processes. Integration The process can be enhanced further by allowing the data captured to be processed by third party software. Integration, via UXP, allows the data held in the data items to be passed to and from the third party software. A common form of integration is saving the data captured to a database. In our example, if the credit details are captured, an immediate credit check is possible by integrating to a third party to perform the credit check. Project The data store, processes, presentations and any integration definitions together constitute the project. Technical Concepts ifp When a project is saved a file is created which is known as an ifp. The name of the ifp file will be the project name chosen when a new project is created and the file extension will be *.ifp. xml XML stands for eXtensible Markup Language. This is an industry standard language and is the format used to store the structure of the project within the ifp file. Deployment Deployment is the process by which the project is made available to end users. For example, the project may be deployed to a web server enabling users to see the project within a web browser. Design-Time IDE The Design-Time Integrated Development Environment has the ability to separate the presentation (branding, language, behaviour and experience type) from the business process (content of the UI (User Interface), workflow between its elements and validation) and from connectivity/ integration. This separation allows individual users to capitalise on the strength of their knowledge, ensuring ‘right first-time’ delivery. For example: Business users can visualise application screens, process logic and validation. IT/technical users can integrate the developed solution to legacy and third-party systems. Marketing users or designers can add the look-and-feel of the business process. This unique separation ensures that each interested party has the maximum influence on the part of the business process where they have the most knowledge and direct involvement. Temenos UXP creates this true separation of process, integration and presentation in the IDE with three key editors: Presentation Editor It is used to create and manage the look and feel of the UI solution. Multiple presentations can be created and applied to processes without limit. Even though a process might be associated with separate presentations for different brands, audiences or channels, a single change in the process will automatically replicate across all presentations. A separate Theme editor is also provided to create re-usable look and feel designs to achieve consistency throughout all applications without duplicating effort. In addition to supporting multiple presentations for different look and feel, Temenos UXP allows the Bank to deploy each presentation in a chosen presentation type without additional effort. Process Editor It is used to create and visualise business processes. A process is made of multiple phases, which may consist of text, data entry fields, rules, buttons and even online help to guide end users. The IDE's powerful rules engine provides an extensive range of configurable rules to enable the dynamic behaviour (workflow, validation, business service calls) of the UI solution to be specified without writing code. Integration Editor It supports open interfaces for integration to Temenos solutions, in-house systems, 3rd party software or middleware, WebServices, OData, XML, relational databases via JDBC, Microsoft COM or custom connectivity via Java classes as well. Other features: Components : As organisations standardise their user interfaces on browser based technology the sheer scale and number of screens deployed will increase greatly. Components in Temenos UXP allows to create re-usable screens to reduce development effort and create consistency of common screens. These components adopt the applications look and feel so that they blend into applications naturally Components can be complete screens, parts of a screen or just logic or integration so provide great flexibility to maximise re-use. Widgets Framework - Temenos UXP provides a rich palette of advanced controls (widgets) which can be used without scripting. These include AJAX Auto Complete text boxes, transferable lists, and date pickers. However Temenos UXP is not constrained to its own controls and has a powerful “widget framework” that supports the use of 3rd party widget libraries such as Bootstrap, Dojo and JQuery providing limitless capability to utilise rich controls. The framework enables the use of these 3 rd party controls without the need for scripting meaning that non-developers can create highly dynamic rich applications. DataSets - Temenos UXP allows to create test data to drive dynamic behaviour in an application. This is a powerful capability that can greatly improve iterative prototyping and assist in demonstrations of an application when applications data sources are unavailable. Runtime Environment The Run-Time Engine (RTE) is platform, database, and language independent, and provides maximum flexibility with its multi-presentation engine. It requires an application container, which can be any of the following JEE Application Server: Oracle WebLogic IBM WebSphere RedHat JBoss RTE Technical Features: Powerful scalability The RTE supports the development of applications that serve thousands of users simultaneously by employing the following components and techniques: Application server delegation – The RTE delegates session management to the application server. This ensures that the RTE can be installed behind multiple application servers, taking advantage of any resilience built into the application server architecture (e.g. load balancing, clustering and/or multi-processor hardware, fail-over recovery, replicated sessions). This delegated model allows Temenos UXP to scale, perform and persist through proven industry standard platforms. Multi-threading – Because the RTE is multi-threaded, it can be used in conjunction with multi-processor servers. Harnessing the power of these servers allows the operating system of the server to spread workload to optimise performance. This feature, along with the Application Server Delegation, ensures that the RTE can be scaled within a single server or by multiple servers to handle large user volumes. Database pooling – The RTE provides configurable database pooling, allowing controlled access to corporate databases. Simultaneously, it also enables maximum performance for heavy usage. Alternatively Temenos UXP gives you the option of using database pooling provided by the application server. Performance configuration – The RTE allows two methods of operation for performance configuration: Agility – Temenos UXP can be configured at first to make live changes as soon as they are available without having to re-start the RTE. Speed – Once the application is settled, by caching business processes in memory the most optimal performance can be achieved. Delivering an open standards platform Temenos UXP is committed to providing an open standards platform to future-proof Bank’s investment and ensure maximum integration flexibility. It performs on any hardware and operating system that supports a Java runtime and run on JEE application servers. It integrates with OData, Web services, XML interfaces, any SQL database via JDBC, and Java components (classes and EJB). Enabling security Because the RTE is integrated with the JEE Application Server of your choice, standards-based SSL can be leveraged to ensure data is securely delivered. Additionally, the RTE has an open interface with third-party security systems, such as RSA secure-id token keys, LDAP or Active Directory-based authentication. The RTE also has configurable security settings for validating the integrity of data coming back from an application to eliminate hacking threats. A wide range of techniques are deployed including checks for the OWASP top ten security threats. Having these checks in the server removes the risk of developers not incorporating security features into every screen created. Cross Browser Support Temenos UXP renders screen in standard HTML that is cross browser compliant. No additional plug-ins are required which maximises the reach of users on the web and makes deployment simple. Management and Deployment UXP Administrator Temenos UXP provides release management and version control facilities to co-ordinate multi-developer teams through an administrator interface. The UXP Administrator includes: Roles and permissions for development participants to control access to projects. Release cycle definition, to manage releases through a user defined lifecycle, such as develop, test and live. Release management, to manage the promotion/relegation of project files through the lifecycle. A version control server to manage and track changes. This ensures that multi-developer teams do not overwrite one another’s work, and that developers can only modify what they have been given permission for. A complete audit history of who made what changes. UXP Deployer Temenos UXP’s Deployer manages the deployment of releases and associated configuration files, and installs to the RTE. It packages solutions for deployment to an application server. Once a project is complete, a deployment package is generated for the project which can then be installed on a: Web Application Server Target machine (offline) Mobile device (hybrid) The Deployer Manager allows generating a deployment package for a selected project. A project consists of a number of different elements e.g. images, html which together form the completed solution. The deployment process collates these files, along with the RTE libraries, to form a complete package. The package can be generated as a single Web Archive (WAR) file or as a structured directory. The deployed project can then be taken in the appropriate format, and installed on a standard JEE Application Server. The UXP Deployment Manager allows to: Manage configuration settings for projects. Configure “environment” parameters without changing project files (e.g. database sources, which may differ between development, testing and deployment). Package associated libraries, such as JavaScript, HTML and image files. Configure portlets and Web services. Build a deployment package that can be installed on a web application server."
  },
  "design/uxp/reference.html": {
    "href": "design/uxp/reference.html",
    "title": "",
    "keywords": ""
  },
  "design/uxp/uxp-setup.html": {
    "href": "design/uxp/uxp-setup.html",
    "title": "UXP Getting Started Guide",
    "keywords": "This user guide shows how to install Temenos User Experience in order to be able to use Temenos Mobile Banking application. Pre-requisites Download JDK from following link and install the application Installation Steps Create a folder where Temenos UXP should be installed Note 💡 In order to avoid Windows problems, please use short paths. Example : For the purpose of this document, a folder called E6111 is created directly on D partion. Unzip Temenos UXP folder and launch UXP installation (double click on appropriate install.exe file - example: TemenosUXP6_1_1__1_x64Windows) UXP installation starts ( InstallAnywhere is preparing to install... ) Click next to pass through installation steps. On License Agreement, accept Terms and Agreements On Install Set, you can also check 'Hybrid Master' and 'Hybrid Android Slave' if you need it (in this case, Install Set will automatically change to 'Custom') On Install Folder, do not leave default path . Instead, select the folder you created before (for UXP installation) Choose UXP shortcut location: example: \"In a new Program Group\" Choose a JDK version 1.8 (select the path where you previously installed Java Development Kit) Set the address and the port: Hybrid Master address: localhost Hybrid Master port: 9022 See all information in pre-installation summary and press install button Wait for installation to be completed. Note Send license request attaching InstallKey.txt to any of our MarketPlace team members. (InstallKey.txt is in IDE folder). You will receive one or two license files, which must be placed in the same folder (IDE) Install TemenosUpdate.zip file a. Unzip the TemenosUXP6_1_1__1Release_TemenosUpdate.zip archive received. b. Copy the jars from the archive into the lib folder of Temenos UXP ( in current case E6111 - in your case, the folder you created to install Temenos UXP ). c. Update Developer.lax file ( from IDE folder ) in order to add the jars copied in above step. Click right on developer.lax file, go to \"lax.class.path=\" and add the new jars as follows: ;../lib/commons-codec-1.10.jar;../lib/commons-lang3-3.5.jar;../lib/core4j-0.5.jar;../lib/ecTemenos.jar;../lib/jdom2-2.0.6.jar;../lib/joda-time-2.1.jar;../lib/odata4j-core.jar;../lib/odata4j-jersey.jar Note Based on the version you're using, you might have other jars to copy. Install CustomUpdate.zip file a. Unzip the TemenosUXP6_1_1__1Release_CustomUpdate.zip archive received. b. Copy the jars from the archive into the lib folder of Temenos UXP. c. Update Developer.lax file in order to add the jars copied in above step. See information from previous step. ;../lib/ecBuilder.jar;../lib/ecCustom.jar;../lib/org-netbeans-lib-cvsclient.jar;../lib/xpp3_min-1.1.4c.jar;../lib/xstream-1.4.9.jar Update the java extra parameters in Developer.lax: a. LAX.NL.JAVA.OPTION.ADDITIONAL Please add below line: -Dconnect.options.expressionEvaluatorClass=com.acquire.util.js.FESIExpressionEvaluator Please increase memory in order to avoid out of memory error. Add the following: -Xmx8000m b. LAX.NL.CURRENT.VM • Please set JAVA 8 with the correspondent path: Open the Developer.exe Import TCIB2.0 Retail project Copy TCIB2.0 folder into Your Folder > RTE > Projects Copy Retail jars from TCIB2.0\\Solutions\\Retail\\WEB-INF\\lib to lib folder of your Temenos UXP folder Update Developer.lax file in order to add the jars from the Retail\\WEB-INF\\lib: ;../RTE/Projects/TCIB2.0_201710.01/Solutions/Retail/WEB-INF/lib/tcsecurity.jar;../RTE/Projects/TCIB2.0_201710.01/Solutions/Retail/WEB-INF/lib/tcommonjms.jar;../RTE/Projects/TCIB2.0_201710.01/Solutions/Retail/WEB-INF/lib/tcommonjdbc.jar;../RTE/Projects/TCIB2.0_201710.01/Solutions/Retail/WEB-INF/lib/tcommon.jar;../RTE/Projects/TCIB2.0_201710.01/Solutions/Retail/WEB-INF/lib/TC-Logging.jar;../RTE/Projects/TCIB2.0_201710.01/Solutions/Retail/WEB-INF/lib/TC-Hooks.jar;../RTE/Projects/TCIB2.0_201710.01/Solutions/Retail/WEB-INF/lib/TC-Custom.jar;../RTE/Projects/TCIB2.0_201710.01/Solutions/Retail/WEB-INF/lib/tcclient.jar;../RTE/Projects/TCIB2.0_201710.01/Solutions/Retail/WEB-INF/lib/tbrowser.jar;../RTE/Projects/TCIB2.0_201710.01/Solutions/Retail/WEB-INF/lib/ofsml.jar;../RTE/Projects/TCIB2.0_201710.01/Solutions/Retail/WEB-INF/lib/log4j-1.2.9.jar;../RTE/Projects/TCIB2.0_201710.01/Solutions/Retail/WEB-INF/lib/jmimemagic-0.1.4.jar;../RTE/Projects/TCIB2.0_201710.01/Solutions/Retail/WEB-INF/lib/cryptoIntegration.jar;../RTE/Projects/TCIB2.0_201710.01/Solutions/Retail/WEB-INF/lib/channels.jar;../RTE/Projects/TCIB2.0_201710.01/Solutions/Retail/WEB-INF/lib/autoform-search-4.2.0.jar;../RTE/Projects/TCIB2.0_201710.01/Solutions/Retail/WEB-INF/lib/autoform-download-4.2.0.jar;../RTE/Projects/TCIB2.0_201710.01/Solutions/Retail/WEB-INF/lib/apache-jakarta-oro.jar Now go to File > Open Select the location of Retail.ipf file A warning will appear > Accept language setup Open Process Builder: On top bar, click on \"No Perspective\" and select \"Process Builder\" (this will open UXP editors) Set file location and server connection a. On top bar, go to Tools > Options b. Select the appropriate file locations: c. Go and update Retail.dsf file in order to replace \" http://localhost:9089 \" with your own correspondent url. (There are 5 places to be replaced.) d. Select the appropriate server details (Go to Tools > Options > \"Server Connection\" tag): Server Address: your own url Server Port: your port Close and open again the Developer.exe Run TCIB2.0 Retail from IDE: go to Presentation Editor click right on Responsive > Run Login to TCIB Agree to Terms and Conditions and press continue."
  },
  "design/uxp/widget-development.html": {
    "href": "design/uxp/widget-development.html",
    "title": "UXP Widget Development",
    "keywords": "Prerequisites This user guide provides all steps required for a simple widget creation. To develop more complex applications, some knowledge of javascript, jquery and css would be useful. Create a Widget Create a folder on D partition. For this user guide, we defined a folder called 'UXPProjects' We will create a new Project called 'TestProject': Go to File > New > New Solution Project Add Project Name ( TestWgt ) Select Project Location ( D:/UXPProjects ) Click OK > A new project is created Now, in the new screen go to Process Editor > click right on Processes > Add Process Give a Process Name ( Process1 ) and click OK Click right on Process1 > Add Phase Give a Phase Name ( Phase1 ) and click OK Now, go to Presentation Editor > Click right on Presentations > Add Presentation Type Give a Presentation Name ( Presentation1 ) and select Type > Rich HTML > click OK Go to Menu bar > Tools > Edit Widgets for Projects Click right on Widgets > Add > Widget An empty list of attributes is displayed. In this list, only Name and Type are mandatory. You can also add any other attributes Name : *TestWidget (The widget name is used in the drop down list of display types in the Presentation Editor when you select a display type for an element.) Type : *Display Item (The type specifies the type of element the widget can be applied to.) Click save Go to the folder created for this project ( D:/UXPProjects ) and then to Templates folder In Templates folder, create a new folder. The name of this folder is the widget name. Suppose you have a MarketPlace widget, you can name it something like: com.temenos.test Inside this folder, create a head.wgt (optional) and body.wgt (mandatory) file. Create a txt document and change its extension to 'wgt' Go back to Tools > Edit Widgets for Project Now we can add the Head and the Body of the widget Click on Source Template and in Value field, select as source 'body.wgt' from the template location Add another template (this will be automatically recognized as a Header Template) Click right on the Widget ( TestWidget ) > Add > Template Click on Header Template and in Value field, select as header 'header.wgt' from the template location Save Above steps represent the basics for creating a widget. Now learn how to use the widget: Use the Widget Go to Presentation editor, expand the buttons, click on Phase1 > Add > Display Item > TestWidget: Give a name in the Item Name field. (We named this project ' FirstTestWidget ') Click OK. Now we have added a widget which has currently no functionality. To add a functionality to it, go to Tools > Edit Widgets for Project > Click right on Widget (TestWidget) > Add > Custom Attributes Under Custom Attributes > click on Attribute and fill the field Name which is mandatory, then click Save. Note This field is very important and we must be careful when choosing the name of the attribute, because it will be called in the code. For example, if we want a 'Hello World' kind of attribute, we can name it as Message To check what has been created, go to Presentation Editor > Double click on FirstTestWidget [TestWidget] > Go to Widget Details tab In the Message field, you can type 'Hello World' ( any message you want to use ) and click OK. To run the project, go to Presentation Editor > Click right on Presentation Editor > Run The new screen will not display anything related to the widget built before. In order to see the changes, modify Body and Header content: Body Template Content To be able to see 'Hello World' message, go to Templates folder in order to modify body.wgt file. Edit body.wgt with the below HTML command, in order to acces the Custom Attribute previously added: <div> $$ITEM.Message$ </div> Save the change into body.wgt file and run again the Presentation Editor. You will see now displayed 'Hello World' message. Header Template Content Tip You need to include any external javascript libraries/files e.g. jquery and external css files in the header template. You should also add javascipt/css used by the widget. You should try to include any script required by the widget in the header file if possible as each header is only included once in the page regardless of how many times the widget is used in the page. Add jQuery script version on head.wgt Go on http://code.jquery.com/ > jQuery 1.x > minified version > download it on your local machine Copy the script into head.wgt <script src=\"http://code.jquery.com/jquery-1.12.4.min.js\" integrity=\"sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ=\" crossorigin=\"anonymous\"></script> Go back to body.wgt and edited according to the changes you need to make. Here is a small example: <div id=\"testID\"> $$ITEM.Message$ </div> <script> $(\"#testID\").css(\"color\", \"red\"); </script> Now, when you refresh the screen (in our example ), you will see the Hello World message in red. Note For more features regarding Widgets, please check Widgets Developers Guide available in the UXP package."
  },
  "design/uxp/widget-introduction.html": {
    "href": "design/uxp/widget-introduction.html",
    "title": "UXP Widget Introduction",
    "keywords": "What is a Widget? Temenos UXP Widgets are complex, customisable UI controls you can use in your solution. Some commonly used widgets are provided with the UXP installation. However, you can also create your own widgets, use third party widgets or customise existing widgets. They are built using the Widget Editor provided in the UXP IDE (Integrated Development Environment). You can modify them to be configured by the user either at build or runtime. At runtime, the widget source is used to generate HTML which is then inserted into the destination HTML. Type of Widgets A Widget is an add-on User Interface oriented control (such as a new Display Item) that you can add to Presentation Editor and then use to construct your solution. There are three types of Widgets: Layout Widget : A Layout Widget is a Container that groups together other controls (acts as containers for other elements in the page). Data Capture Widget : A Data Capture Widget allows a user to enter data. Navigation Widget : A Navigation Widget allows a user to navigate from Phase to Phase. It controls the movement within the solution. Each widget type has a different function and there are different considerations when creating each of these types, although their general set up and use is similar. Using Widgets You use a widget by specifying it as the display type for the element you wish to apply it to. This can either be an answer or the entire question row. The display type is set in the Presentation Editor of the UXP IDE. You can only use widgets that have already been added to your project and it must be of a display type that is the same as the element you wish to use it for e.g. a slider widget can only be used for data capture not for layout. The Edit Widgets for Project Editor allows you to Add Widgets to your solution and Remove Widgets from your solution. To add/ copy/ delete a Widget, go to: Tools > Edit Widgets for Project > Right click Widgets root node > Add > Widget respectively, instead of 'add' choose 'copy' or 'delete' an existing Widget After installing UXP, you can check here how to build a simple Widget. (basic steps)"
  },
  "design/uxp/widgets-3-hour.html": {
    "href": "design/uxp/widgets-3-hour.html",
    "title": "UXP 3 Hour Guide",
    "keywords": "Introduction To have an overview and familiarize with UXP concepts, please also check this Widgets 3 Minute Guide . To see the installation steps, please check following UXP setup guide . You can see more details related to the steps above in the UXP User Guide that comes in the downloadable package. Create a Business Solution with UXP Typical Business Problem A car part supplier needs to capture client data for billing purposes. If the client wishes to pay by account, the supplier also needs to capture and check the clients’ credit details. This data needs to be collected either by call centre staff or by company representatives on sales visits. The clients themselves may also supply this data via the supplier’s website. Click on Terminology to see what terms are used to describe the business solution constructed within the UXP tool. Terminology - Process - In order to capture the clients’ details, the supplier asks a series of questions and the client provides the answers. This is known as a process within UXP. At its simplest, a process encapsulates a business solution. A process can become morecomplicated in ways which will be described later in this document. - Phase - UXP also allows questions to be grouped into a number of sections. Each section forms a logical group and is known as a phase. A process will consist of one or more phases. In our example, one phase would collect the client’s personal details and another phase their account details. Dividing a solution into phases introduces points in the solution, between phases, where processing based on the information entered by the user can be carried out. This allows more complex business logic to be added to the solution. In more complex solutions, business processing may also be associated with individual questions. In order to move from one phase to the next, the user must click buttons or links which are specified within UXP for each phase. This process is known as navigation between phases. - Data Item In order to make use of the data entered by the user during the process, the answer to each question is stored in a data item. Data items are defined by the UXP user. - Data Type Each data item has a data type. There are pre-defined data types within UXP e.g. decimal, date, text. When a data item is created, a data type must be associated with it. - Data Group Related data items can be organized together as a data group. For example, the client’s address can be organized as a data group called “address” which contains the data items “house number”,” street”, “town” and “postcode”. A data group allows related data items to be manipulated more easily. The complete set of data items and groups are collectively known as the data store.UXP v5.0 User Guide 12. If more than one address needs to be captured, for example the client’s previous addresses, the address data group can occur more than once. Each occurrence is known as an instance. This allows re-use of data groups and simplifies the data store. - List The answers to certain questions within a process can sometimes be limited to a pre-defined choice of several answers. The range of possible answers is defined within a list. For example, the answer to a question regarding your marital status may be limited to the answers “married”, “single”, “divorced” or “other”. - Rules In order to increase the functionality of the process, operations can be performed on the data contained within the data items. These operations are known as rules. The most common rules perform validation and control the flow of the process. Rules can be executed between phases or within a phase when the value of a specific question changes. - Presentation Once the questions have been added and the rules defined, the process is complete. A presentation is a way of defining how the process will appear to the end user. More than one presentation can be applied to a single process in order to deliver the business solution to different channels. For example, a different user experience may be required for call centre users compared to that of the general public. Presentations will automatically be applied to all processes. - Integration The process can be enhanced further by allowing the data captured to be processed by third party software. Integration, via UXP, allows the data held in the data items to be passed to and from the third party software. A common form of integration is saving the data captured to a database. In our example, if the credit details are captured, an immediate credit check is possible by integrating to a third party to perform the credit check. - Project The data store, processes, presentations and any integration definitions together constitute the project. Business Flow This user guide will describe the creation of a simple UXP project which will enable you to capture a client’s details including their name, address and credit card details. The flow diagram below shows the outline of the phases which form the process you will create. You will also create an error phase which will be displayed automatically if an error occurs at any stage. If the client’s age is less than 18 or greater than 65, a specific error page will be displayed to inform the client of that fact and they will be unable to continue further with the application form. The “Previous Address” phase will only be shown if the client has spent less than three years at their current address. A rule will be defined which will test this condition. At the end of the process, an informational phase will be displayed thanking the client for completing the form. Start Creating the Solution Create a Project Go to File > New > New Solution Project Add Project Name ( Business ) Select Project Location ( D:/UXPProjects ) Click OK > A new project is created ( A project folder will be created in the location selected ) The project will act as a repository for the components we will be building that make up the business solution. It is good practice to have a single folder in which to store projects and UXP allows you to set the default file location to this folder. To set the default file location: Click Tools on the standard IDE menu bar Click Options on the drop down menu The Options dialog is displayed Click the Locations tab Click Select to set the location for Projects Click OK When a new project is created, the project location will default to the preferred project location set by the user. If this has not been set, the default location is set to the /RTE/Projects directory of the UXP install location. Create a Process Add a process to a project: Click Window on the standard IDE toolbar Click Process Editor on the drop down menu The Process Editor window is displayed Right click the tree control root icon Select Add Process The Process tab of the Add Process dialog is displayed Enter information about the process you are creating in the appropriate text boxes Process Name: Capture Client Details Click OK The process created will be seen in the Process editor. Create a Phase There will be five phases in our final solution in which we will capture the personal details, address and credit card details of the client. In this section we will create the first phase “Personal Details”. Add a phase to a process: In the Process Editor, right click the process which has just been created Select Add from the dropdown menu displayed Click Phase from the dropdown menu displayed The Add Phase Dialog is displayed. Enter information about the phase in the text box provided Phase Name: Personal Details Click OK The name of the new phase can be seen below the name of the process just created. Add the remaining phases the same as described above: Address Previous Address Credit Card Details Thank You Note Although the phases are shown in the order in which they are added and in this case in which they will appear in the process, this order does in no way affect the order in which the phases will be displayed. This must be specified later. Error Phases If an error occurs at any time during the execution of a solution, an error page is displayed. This is defined as another phase. At least one error phase must be defined so that it can be used as the default error page if no other action has been specified for a particular error. Error phases are created in the same way as all other phases, however they are usually only informational and the user is unable to navigate forwards or backwards from the phase. Add a default error phase to the Client Details process as per the other five phases. In our example, an error occurs if the client’s age is less than 18 or over 65. In this case, a more specific error message is required so that the client is made aware of the error and is unable to continue with the application form. Add a specific error phase to the Client Details process for this error. The seven phases added in this section are listed below the Client Details Process in the Process Editor. Note Expanding the phase will display the items contained within the phase. When a phase is created, a back and forward button are created by default and they are displayed within the Address phase as shown below. Using these navigation buttons will be explained in a later section. Adding Questions to a Phase The questions added to a phase will allow the capture of individual pieces of information about the client’s details e.g. house number, street, postcode, etc. In this section you will add questions to capture the personal details of the client. Go to Process Editor > Click on Personal Details > Add > Questions The Add Question dialog is displayed. Enter the question and any associated help text or hint text in the text boxes provided: Display Text: First Name (Note: you can put here your text ) Help Text: Enter your first given name as it appears on your birthday certificate Hint Text: Your first given name Click OK Note Help text will appear if the user clicks the help icon which is displayed next to the question. Hint text will appear when the mouse moves over the answer text box. The question is added to the phase which had just been created. Repeat this process to add all the questions required to capture the client’s personal details. Each new question is added to the bottom of all the other items in the phase. The questions will appear in the solution in the order they are shown within the phase. The Back and Forward buttons, added by default when the phase is created, can be seen as the first items in the phase. This is not always desirable and the order of the elements within the phase can be changed by: • Right clicking on the question and clicking Move Up or Move Down on the drop down menu. • Holding down the Ctrl button and using the Up or Down arrows on the keyboard. • Clicking the question and dragging it to the appropriate position. • Multiple items can be moved simultaneously by highlighting the desired items to be moved. Adding Headings to a Phase Headings are used to clarify sections within phases or to add small amounts of text. They are purely for display purposes. In this section you will add a heading to the Personal Details phase. In the Process Editor > right click on the Title question in the Personal Details phase > Insert > Heading The Insert Heading dialog is displayed > Enter the heading Personal Details > click OK Larger amounts of text can be added by including a separate html document within the presentation or by using a different header for the phase. This is described within the online help. Adding/ Removing Buttons to a Phase Buttons are used to move from one phase of the process to the next. Buttons are added to a phase in the same way as questions and headings. Forward and Back buttons are added by default when a phase is created. However, the back button is not required in the first phase of a process. To remove the Back button from the Personal Details phase, in the Process editor > right click the back button > Delete Editing a Phase using Quick Edit Double clicking an element within a phase will display the details of that element so that it can be changed. However, it is also possible to view all the elements within a phase at the same time and make any changes using quick edit. To quick edit, in the Process Editor > click right on a Phase (example: on Personal Details phase) The contents of the phase are displayed. New phase elements can be added and exiting ones moved or deleted. The data item associated with a question can be changed and whether it is mandatory or read only can be changed. Specifying the Initial and Error Phase The order in which the phases are to be displayed must be specified. Although they appear within the Process Editor in a particular order, this does not define the order in which the phases are displayed when the solution is executed and so you must specify the order. Two special cases are the first phase to be displayed, the “Initial Phase” and the phase to be displayed should an unexpected error occur, the “default Error Phase”. The Initial Phase is the first phase to be displayed when the process is executed. This needs to be defined within the IDE. - Specify Initial Phase Go to Process Editor > Double Click on \"Capture Client Details\" > Click Start tab > Click Select for Initial Phase The Phase Chooser dialog is displayed. Expand the “Capture Client Details” process Click “Personal Details” phase Click OK - Specify Error Phase The default error phase is displayed when an error occurs in the process and no specific processing has been defined to handle the error. You need to define which phase you wish to be displayed if this should occur. In our case it will be the phase named “Error” which will display a general error message to the user. Open the Process Editor > Double click the process “Capture Client Details” > Click Start tab > Click Select for Error Phase The Phase Chooser dialog is displayed. Expand the “Capture Client Details” process Click “Error” phase Click OK Reviewing the Phase You can see how the phases will appear on screen by reviewing the work you have done so far: In the Process Editor right click the “Personal Details” phase > Select Preview A browser window will appear which gives an idea of how the questions in the phase will appear when the solution is completed. This can be used for more complicated layouts to check how the questions will be displayed. Enabling Session Management So far, you have created an application to capture a client’s personal details. However, in order to do anything useful with the data captured, you will need to store it, manipulate it and make decisions based on it. Learn how to: define a data store create and use lists use the data store to store session data Creating a Data Store To add a data store to a project: Click Window on the IDE standard toolbar > Data Store Editor on the dropdown menu The Data Store Editor window is displayed. Now add a data item to a data store: In the Data Store Editor, click right on Data Store root icon > Add > Data Item The Add Data Item dialog is displayed. Enter the name of the data item (First Name, Last Name, Date of Birth, Sex, Marital Status etc) and leave the type as “Text” Click OK Creating a Data Group In larger processes, a considerable number of data items are added and if added as single data items a large flat structure is created. In order to make the data store more manageable, it is advisable to organize the data items into data groups thereby creating a hierarchical structure. To add a data group to a data store: In the Data Store Editor right click on the root icon > Add > Data Group The Add Data Group dialog is displayed. Enter the name of the data group ( Address ) Maximum Instances: 2 Click OK The number of instances defines the number of times a data group can occur and be stored separately. In current example you may wish to record the client’s current address and their previous address if they’ve lived at their current address for less than 3 years. As both these addresses will have the same data structure, rather than defining them twice you can specify that the Address data group will occur twice. If you do not wish to specify the number of instances, uncheck the Set Maximum Instances checkbox. This will enable dynamic instances, which means the data group can hold an unlimited number of instances. The data group “Address” is added to the data store. To add data items to a data group: In the Data Store Editor right click on the data group “Address” > Add > Data Item Define the data item belonging to the group as described above (for example, everything related to Address: House Number, Street, Town etc) To do any change, you can use Quick edit (Click right on the Data Group that you want to modify) The structure of the data store can be changed at anytime during development. Creating Lists The answers to certain questions within a process can sometimes be limited to a pre-defined choice of several answers. The range of possible answers is defined within a list. Lists form part of the data store. To create a dropdown list: Click Window on the standard IDE toolbar Click Type Editor on the drop down menu The Type Editor window is displayed. Right click Lists > Add > Enter List Name “ Title ” Click List Values tab > Add (add the values as shown below) > OK Add all the lists required and applicable for Personal Details phase (which can be predefined with choices, such as Marital status: single, married, divorced, widowed) Capturing Data Entered In order for the data entered by the user to be stored as each phase is completed, each question is associated with a data item in the data store in which the data entered is held. Associate the questions in the “Personal Details” phase with the appropriate items in the data store: In the Process Editor expand the “Personal Details” phase > Right click on the first question > Properties As an alternative, you can also double click on the question, which will open same screen Click Answer tab > Select The data item chooser is displayed. Click the “Title” data item > OK Associate the remaining questions in the phase with the appropriate data items in the data store. Note A new question can quickly be created by dragging a data item and dropping it on the required phase. The question text will default to the name of the data item. In addition, you can associate a data item with a question by dragging the data item onto the question in the Process Editor. To complete the solution, all the questions in the remaining phases must also be associated with an appropriate data item. Adding Business Logic Create Rules: The following types of validation are available within UXP: • automatic validation associated with the type of data item • validation associated with the definition of a data item • business rules applied to the data captured Data Item Level Validation: When a data item is created a data type must be associated with it. The data type defines what sort of data will be stored in the data item and UXP will automatically validate any data entered into the field such that it conforms to the definition of the data type. There are six data types predefined within UXP: text, number, decimal, date, file and email. To change the data type of a data item: Open the Data Store Editor > Open the Properties dialog for the “Age” data item > Select The Data Type Chooser is displayed Select the Number data type Click OK in Type chooser Click OK in Data Item Properties Continue and change the data types of all required data items. To enter maximum and minimum values for a data item: Open the Data Store Editor > Open the Properties dialog for the “Credit Limit” data item > Click the Validation tab Enter “0” in the Min Value box and “500” in the Max Value box > Click OK Note For a text data type, there will be the maximum and minimum length of the field. Question Level Validation To make an answer to a question optional > Open the Process Editor > Double click the “Email Address” question > Click the Answer tab of the Question Properties dialog > Uncheck the Mandatory checkbox This will prevent an error message being displayed if the user does not answer the question. Phase Level Validation To add a rule to a phase: Open the Process Editor > Right click the Personal Details phase > Add > Click Post Phase Rule > Select Evaluation Rule The Add Post Phase Evaluation Rule dialog is displayed. The Expression tab is automatically displayed. Set as in the images below: Select **OR and do the same steps to specify “greater than 65”** The rule is displayed at the bottom of the questions in the Personal Details phase. Adding Navigation to a Process In order to move from one phase to another we need to add rules which define which phase will be displayed next. These are known as “Goto” rules. By combining Evaluation rules and Goto rules you can vary the route taken by a client through the application. This combination of rules allows “conditional navigation”. Conditional Navigation We have already defined a rule which evaluates whether the client is under 18 or over 65. Now we need to add rules which define what to do when this condition is true or when it is false. When the rule is true we need to display the “Age Error” phase and prevent the client from going any further through the application. To add a navigation rule to an evaluation rule: Open the Process Editor and select the Personal Details phase > Right click the evaluation rule just added > Select Add > Click True Rule > Goto Phase Rule A new screen is open showing \"Phase Details\" Choose Operation Type as: Go Forward to a Named Phase Go to Select button under Phase Name and choose Age Error > following is selected: \"Capture Client Details.Age Error\" > OK The rule is added as the true condition of the evaluation rule. You now need to add a false rule which will define the flow of the application if the user is within the age range for the application. Add a false rule, in the same way as above, which will go to the next phase i.e. the Address phase. Don't forget to give a different name to this rule. You now need to add an evaluation rule for the Address phase which tests whether the client has lived at their current address for less than 3 years. If this is true, then add a goto rule to go to the Previous Address phase otherwise goto the Credit Card Details phase. A goto rule must be added to the Previous Address phases to go to the Credit Card Details phase. This rule can be copied from the one already created for the false condition defined in the Address phase above. Below image is an example is how conditional navigation set-up should look: Go to the final \"Thank you\" phase: A goto rule must be added to the Credit Card Details phase to go to the final \"Thank you\" phase. This is not conditional on anything and will always be displayed. Click right on Credit Card Details phase > Add > Post Phase Rule > Goto Phase Rule > Give a Rule Name (ex: Goto Phase Thank You) > Click on Select button under Phase Name > Double click on \"Thank you\" > OK > OK To review a process: Open the Process Editor > Right click on the Capture Client Details process > Click Run A new window will open up in which the first phase of the process will be displayed. The layout of the phase and the validation can be seen and tested. Clicking the navigation buttons on the phase will display the next phase in the process. In this way you can move through the process and check that it appears how you intended. The application form will appear in its most basic form as no presentation will be applied to it. In order to review the presentation, run must be selected from the Presentation Editor . Presentation The Presentation applied to a process will alter how the data capture elements of the solution appear when it is running. Different presentations will alter the look and feel of a process without any change to the data capture elements. In this way branding can rapidly be applied to a solution. Following steps show how to: Define how the solution will look Change fonts, messages and buttons Add branding Change the page layout Personalise the solution Creating a Presentation In order to deploy the solution you must provide details of how the solution will be displayed. In order to do this you must define a Presentation. To create a Presentation: Click Window on the IDE standard toolbar Select Presentation Editor from the dropdown menu The Presentation Editor is displayed. Right click the tree control root icon Click Add Presentation Type The Add Presentation Type dialog is displayed. Enter the name of the presentation Select Rich HTML presentation type Click OK The presentation appears in the presentation editor. Expanding the presentation’s node displays the processes and phases within the project. Presentation Types Five presentation types exist within UXP: Rich HTML, Pure HTML, Accesibility Compliant, Offline, Portlet. If no restrictions exist within the browser environment in which the solution is to be deployed, it is recommended that the Rich HTML presentation type is used. Alternative presentation types and their application for more restrictive browser environments are listed below. Channels The use of different Presentations allows the same business solution to be delivered via several different channels without re-work of the data capture element of the process. The limitations of each channel are handled by defining a different presentation type for each channel. For example, the same set of questions can be used to deliver an application to a web browser or a mobile phone, but the limitations of the mobile phone display can be handled by defining a different, simpler presentation for this channel. Layout and Appearance There are two aspects to the look and feel of an UXP solution - layout and appearance. Layout encompasses where the data capture elements (e.g. questions, textboxes, lists) of the solution appear on the screen and the relationship between the elements e.g. are the elements contained within columns, on separate tabs. Appearance is concerned with what the actual elements look like e.g. the size and colour of the question font, the appearance of buttons, how a menu is displayed. The Presentation and Theme Editors are used to control the look and feel of the solution by controlling different aspects of the layout and appearance of the UXP elements included in the solution. In most cases, the layout of elements is defined within the Presentation Editor and the appearance of elements is defined within the Theme Editor. However, the Presentation Editor can also be used for ad hoc appearance changes to individual elements where you wish them to differ from the current Theme settings. We would recommend maximising the use of the Theme Editor as it promotes consistency of look & feel, and provides rapid presentation development through re-use. Layout It is useful to think of the UXP data capture elements as fitting within a virtual grid. The position of the elements changes depending on which elements are present or absent within a question and what other questions are included within the section. Different grid layouts can be applied to different areas of the page by splitting it into Sections and/or Columns. Go to Presentation Editor > Click right on Personal Details > Add > you can choose between Column, Section, Page, Spacing etc. Add a Section A Section is part of a phase and its extent can be specified within the Presentation Editor. Sections allow a single phase to be broken up and different look and feel to be applied to each part of the phase. Open the Presentation Editor and expand the appropriate phase Select all the elements you wish to include in the section > Right click the selected items > Move into New > Section > OK A Section has been added and the highlighted questions are now part of the section. The section is shown as expanded, however it can be collapsed to simplify the Presentation if required. Because of the default layout options, it is necessary to specify the width of the columns. In this case, there are two columns and we can specify that each column takes up 50% of the available space. By defining the column width in this way, the columns widths will always be equal regardless of the size of the browser window. Columns Open the Presentation Editor and expand the appropriate phase Select all the elements you wish to include in the section > Right click the selected items > Move into New > Column > OK Click right on Column > Properties > Appearance > Layout > choose Specify as percentage (%) > Enter 50 in Section Width > OK To preview : Open the Presentation Editor > select the appropriate Phase > Right click on the Phase > Preview Appearance The appearance of an UXP element is controlled by the use of Themes and Designs. To display the default Designs used by the Theme: Go to Window > Theme Editor > right click Default > Properties > Default Designs The default designs used by the default Theme for each element are listed. To create a new Design Create a new design for a question which requires a currency prefix for the answer: Open the Theme Editor and expand the Theme you wish to add the Design to Expand Item Designs and within this expand Answer Right click Numeric Answer Click Add Design Enter the Name of the Design as Currency Numeric Select Short Numeric from the Based On drop down list This is the design our new design is most similar to and this allows us to quickly specify certain characteristics as they will default to those specified in the “based on” design. Click the Answer tab, then Display tab Enter $ in the Answer Prefix field Click OK The new design is added to the Theme. (Under Numeric Answer > Currency Numeric) Applying Designs to a Solution If you wish to alter the look and feel of an element in the solution from the default design, you need override the design to use within the Presentation Editor. If you were to change the default design for that element to what you require, that would change the appearance of all elements in the solution which used that design and that may not be appropriate. To apply a different Design to a question Open the Presentation Editor and expand the Personal Details Phase which contains the Annual Income question Double click the Annual Income question > Click on Answer tab > Click on Display tab below > Enter $ into Answer Prefix > OK Go to Capture Client Details Phase > Run > The answer to this question will now be displayed with a “$” prefix as previously defined Changing Designs To change an existing Design: We will make the Heading 2 (H2) design italic. In order to do this we need to add the italic attribute as defined in the stylesheet to the existing H2 design. Open the Theme Editor and expand the Theme containing the design you wish to amend Expand Item Designs and within this expand Heading Double click H2 Click Appearance tab > The Heading Design Properties dialog is displayed, showing the current design for H2. Click the “more” (\"..\") icon > The Style Chooser is displayed Expand Default.css and click Italic > Under Appearance tab, you will notice that Heading has changed to \"LargeFont Color2 Bold Italic\" Click OK After checking the Preview (Presentation Editor > Capture Client Detail Phase > Run), you will see that the title related to H2 (level two of heading) will appear in italic. Changing Stylesheets A default stylesheet is provided by UXP which contains many common styles you may require. This stylesheet is used to define the Designs used in the Default Theme. It is possible to change the characteristics of the styles by changing the Style Properties using the Theme Editor. To change the Default Font: Open the Theme Editor Expand Default.css Double click GlobalFont The Style Properties dialog is displayed Type Courier as the first item in the list of Font Family and separate it from the next font name with a comma The font is specified as a comma separated list as it is recommended to list several alternatives in case the specified font does not exist on the user’s machine. Click Save > The font used for all text within the solution will now be changed to Courier. If the Courier font is not available the alternative fonts will be used in the list order. Using the Process Analyser The UXP Process Analyser is part of UXP Developer. When your process is not acting as expected, it allows you to step through the process to determine what is causing the difference. In order to step through a process you must set a breakpoint. A breakpoint will stop a process executing just before the point at which it is set. You are then able to step through the process, rule by rule, from the breakpoint. Whilst stepping through the process you are able to see the values contained in the data store and other runtime values which provide useful information about how the process is working. The following features are available within the Process Analyser: • step indicator: a red line indicates which process/rule will be executed next • breakpoint setting: a red dot indicates where a breakpoint has been set • debug and error log output • viewing and editing of data values during process execution Setting and Removing Breakpoints In order to step through a process, you must first set a breakpoint. The process will run through as normal up to this point and then stop at the rule where the breakpoint is set. From this point, you will be able to step forward through the process or opt to continue to execute normally until the next breakpoint or the end of the process is reached. It is usual to set a breakpoint at a stage in the process where it deviates from the expected behaviour. Breakpoints can only be set on rules. - To set a breakpoint in a Process Right click the rule at which you wish to set a breakpoint (example: Go Forward to a Named Phase...) and click Toggle Breakpoint. A red circle on the rule, shown in the Process Editor, will indicate that a breakpoint has been set. In the example below, a breakpoint has been set on the “go forward to a named phase” rule. The Process Analyser will stop at this breakpoint once the process has been started and it will be possible to step, view data store values or stack information from this point. (To remove it, click right on the rule and select again Toggle Breakpoint > you will see it dissapear) You can set a breakpoint at any stage while you are executing a process and execution will stop at this breakpoint once it is reached. To view breakpoints in a process Open the Process Analyser by clicking the Process Analyser icon in the standard toolbar Click the Break Points tab The breakpoints which have been set are listed within the Process Analyser which shows the rule description and the phase in which they occur. All breakpoints set within all processes within the project will be shown. To remove a breakpoint from the process or all of them, check Remove/ Remove all button Starting and Stopping the Process Analyser Right click the process you wish to debug, select Run with, then click Analyser on the drop down menu. Alternatively, open the Process Analyser from the icon on the toolbar and click theRun/Continue icon on the Analyser toolbar. Note This icon will only be available if you have selected a process that can be executed within the Process Editor. The first phase of the process will be displayed in a browser window. Additionally, a Process Analyser window will be displayed automatically (if not already open) in the Developer IDE, providing further information regarding the project as it runs. Note If there are rules executed before the first phase, these will be highlighted first within the Process Editor. Only after these rules have been executed will the first phase of the process be displayed. The current phase or rule which is about to be executed will be highlighted in red in the Process Editor window. Click the Stop icon in the Process Analyser toolbar to stop debuging. Stepping through a Process In order to step through a process, you must have set at least one breakpoint in the process and be running the process using the Process Analyser. Once the process has stopped at the breakpoint, you can step forward from this point. Click Step In icon to execute this rule and stop at the next child rule or Click the Step Over Icon to execute the rule and any child rules in one step Data Store Values In order to view datastore values you must be running the process using the Process Analyser and have stopped at a breakpoint. Open the Data Store Editor The values contained within the datastore are displayed in bold. To change datastore values During execution of the process, you may wish to change certain datastore values to test certain scenarios. This is possible via the datastore editor while executing the process through the Process Analyser. Open the Data Store Editor Select the data item you wish to change Press PF2 The value of the data item can now be changed to the desired value (as long as this is a valid value for the data item type). For example you can modify the Last Name. To view datastore values Values within the datastore can also be viewed within the Process Analyser. Only data items which have been selected can be viewed and this may be useful if it is important to see when these values change. Open the Process Analyser Select the Watch tab within the Process Analyser Click Select This opens the Data Item Chooser from which you can select the item you wish to Watch. Click the data item you wish to watch Click Select The chosen data item appears in the list of watched items. The values of datastore items within the Watch tab can be changed by clicking on the item and typing in the new value. Any change to the value will be reflected in the Data Store after tabbing away from the field or clicking enter. List Values Data store items of the list data type are defined as a series of key/value pairs. The values are displayed to the user within the application as a list of predefined choices. When the user selects a value, the key corresponding to the list value chosen is stored in the data store. Within the Data Store Editor, the key values chosen by the user from a list are shown within brackets. If no value is shown, then a list value has not been selected by the user. Multiple Instances When a data group is added, it can be defined as occurring multiple times. The number of instances defines the number of times a data group can occur and be stored separately. For example you may wish to record the client’s current address and their previous address, if they’ve lived at their current address for less than 3 years. As both these addresses will have the same data structure, rather than defining them twice you can specify that the Address data group will occur twice. You are therefore able to store each address in a different instance of the address data group. As the process is executed, the instance number of the data group is incremented as appropriate. The current instance (C) number is shown in square brackets. The maximum number of instances is shown in round brackets next to the data item. In the case shown below, there are 2 instances of Address and the current instance is the first address group. In order to see values contained within other instances of the data group, it is possible to select the instance you require by selecting the instance number in the drop down list. Clicking on the data store editor window after you have selected the instance will display the values contained within that instance. It is then possible to edit these values if required. As the process is executed, the current instance will change as the user adds new instance values, removes instance values and rules are executed which parse through instances. The analyzer will always show the values of the instance number selected in the drop down list and this may or may not be the current instance. In order to see the values in the current instance, the number in the drop down list must be the same as the instance number in the square brackets. Process Analyser Editor The Process Analyser Editor contains a number of tabs which allow you to view the process output logs, produced as the process is executed, as described below, the current phase stack for the process and the current breakpoints which have been set. Breakpoints and Watch Tabs This tab displays all the breakpoints which have been set and all the data items being watched within a project. Both these functions have been described previously. Phase Stack Tab The Phase Stack tab displays the phases which have been displayed and the phases which have been added to the stack and will be displayed. The phases are displayed in the order in which they are shown in the stack. It also displays the phase in which it was added to the stack. The phase shown in bold is the current phase which is displayed in the browser window. If you navigate backwards in the process, phases are only removed from the stack when you navigate back to the phase in which they were added. Intelligent Process Queuing uses data gathered early on in the process to define all the phases which will be shown to the client during the process i.e. all the possible phases are added at the beginning of the process. If you navigate backwards in a process designed in this way, all the phases will remain on the phase stack, the current phase being shown in bold. The phases will only be removed from the phase stack if you navigate back to the phase in which they were added. The Phase Stack is cleared down when the Process Analyser is started. Runtime Error Tab The Runtime Error tab displays unexpected and serious errors which have occurred e.g. when no “next phase” has been specified or when a connection to the database has failed. These messages are normally displayed in the syserr.log file in the logs folder of the project. While the Process Analyser is running, the output to the system error log is redirected to the Process Analyser and displayed in the Runtime Error tab. Runtime Security Tab The Runtime Security tab displays any security violations that the Security Layer has detected. Runtime Debug Tab This tab displays all debug messages which are output as the process executes. While the Process Analyser is running, the output to the debug log is redirected to the Process Analyser and displayed in the Runtime Debug tab. When you have stopped the Process Analyser, the debug messages will continue to be output to the debug log when the process is executed. The level of debug messages is set to 1 by default and can be altered when the project is deployed. For more information about setting the debug log level, see “Configure Your Deployment” section in the UXP Deployment Guide. Runtime Output Tab The Runtime Output tab displays internal UXP messages used for information only by UXP IDE developers. These messages will be set within any custom java classes which may be used by the process. In most cases, this window will be blank. Rules Reference Rules allow more complex business logic to be carried out within the solution. They are grouped into four types which have roughly similar characteristics and are described in the table below. Rule Type Description Action Allows you to manipulate or use the data stored within the data items Evaluation Allows data items to be compared or evaluated and allows rules to be grouped Custom Allows values in the data store to be passed to legacy systems or 3rd party software and for values from these systems to be returned to be used within the UXP business solution Integration Allows data items to be mapped to a database, XML or Polaris for storage or use in further processing Execution Point When you wish to add a rule, you must first decide at what point you wish the rule to be executed. Rules can be added to processes, phases or questions. Process rules Process rules are run for every phase in the process. They can run before or after the pre-phase rules of a phase, or before or after the post-phase rules of a phase. For example, you may wish to use them for recording audit information that is required for every phase. Phase rules Phase rules can be executed prior to the phase being displayed (pre-phase rules) or after the phase has been displayed and the user has entered the values requested in that phase (post-phase rules). When a phase rule is executed, it uses the values stored in the data store at that particular point. Therefore, it is important to consider what the user has entered up to the point of the rule execution and also what other rules have been executed and what effect they will have had on the values in the data store. To add a post-phase rule: Open the Process Editor Right click the process to which the phase will be added > Add > Post Phase Rule > Other Enter the name of the rule Select the Rule Type and Class you wish to add Additional tabs will appear which are appropriate to the type of rule you wish to add. An explanation of the values to enter in these fields is given in the online help for the appropriate rule. Click OK The process for adding a pre-phase rule is the same as that for a post phase rule, only the execution point will differ. Usually, the rules specified for a process or phase are run one after another in the order in which they are specified. However, it is possible to “break out” of the specified order to do something else and then return to execute the remaining rules. For example, you may wish to show a confirmation message and continue running the rest of the rules depending on the result of the confirmation. This is achieved using the Goto Rule. The Goto Rule allows you to specify what phase will be displayed next within a process. It has several different operation types through which you can control when the remaining rules in the phase are run. Question rules Question rules are run after the value for a particular question is entered. For example, you may wish to transfer the data entered to a summary area and therefore copy the value entered to another data item. Care must be taken when using question level rules as they are run again when the phase is completed. When defining question level rules, it must therefore have no detrimental effect on the process if the rule is run twice. Action Rules Rule Class Description Audit Adds the appropriate information to the audit log Create Multi List Value Saves the values chosen from a multi-selection list to a single data item Compare Multi List value Used to compare different sets of choices from a multi-selection list Diagnostic Outputs session information to debug log Directory Browser Allows you to list all files found in a directory on the file system End Component Ends the processing of an UXP component and returns control immediately to the caller Expression Allows complex evaluation expressions to be defined Goto Phase Adds the specified phase to the list of phases which will be displayed as part of the solution Import Offline Data Gets data stored by an offline application into an online session Invalidate Data Store Invalidates all the data in the data store, except for specified data items. Invalid data items will not be saved to a database Question in Error Sets specific questions to Error Status Reset Session Data Clears any session specific data from data store Set Process Item Status Switch an answer(s) to be ready only or editable dynamically Set Value Sets a data item, data group instance or variable to either a fixed value or the value of another data item or variable Switch Presentation Changes to a different Presentation which has already been defined Text Modifier Extracts part of the text of an answer Track Changes Identify modified user values Translate QAS Result Defines how to allocate parts of an address returned from QAS Evaluation Rules Rule Class Description Add to List Adds values entered at run time to a list Call Component Calls an UXP Component Container Groups rules together under a single rule Evaluation Evaluates a logical expression and returns true if the expression is true, false if the expression is false Generate Document Generates a document which can be viewed via the presentation channel e.g. HTML, pdf Incrementor Increments values in the data store or instance pointer of a data group and returns true if the increment succeeds, false if the increment fails Repeat Runs all the true rules until a false rule is returned, the runs the false rules Custom Rules Rule Class Description Browse Class Allows a custom written java class containing business logic to be executed Integration Rules Rule Class Description Open Source Connector Specifies when to connect with a COM object, database, java class or XML during a process Pre-built Connectors Specifies when to communicate with email, Experian Vehicle Search, QAS, Credit Card Payment (SolveSE) Configurable Connectors Specifies when to communicate with Polaris Integration rule during a process"
  },
  "faq/get-xml-file-generated.html": {
    "href": "faq/get-xml-file-generated.html",
    "title": "FAQ",
    "keywords": "How to get the XML file generated? 1. Login to BrowserWeb and put the TSM service to STOP a. Type TS, TSM b. Select STOP and press commit button 2. Delete the F.TSA.STATUS table using DBTools a. Please login to DBTools and clear the content of TSA.STATUS table by typing the JQL command: “CLEAR-FILE F.TSA.STATUS” 3. Go back to BrowserWeb and put the TSM to START a. Type TS, TSM b. Select START and press Commit button 4. Now go to TAFJEE and start the TSM a. From your organization, click on MONITOR APPLICATION, then click on Execute Servlet and them start TSM as showed below:"
  },
  "faq/how-to-join.html": {
    "href": "faq/how-to-join.html",
    "title": "Contact Us",
    "keywords": "How can I join MarketPlace? To join MarketPlace, please click here to complete the registration form and a member of our team will be in touch with you."
  },
  "faq/index.html": {
    "href": "faq/index.html",
    "title": "FAQ",
    "keywords": "Frequently Asked Questions Here you can see a list of the top five most frequently asked questions: Top Five Frequently Asked MarketPlace Questions: How can I join MarketPlace? What content can I display on my MarketPlace Product page? What should I connect to the MarketPlace Provider Sandbox? What is the MarketPlace Provider Sandbox? What should I show in my MarketPlace Product Demo? Top Five Frequently Asked Sandbox Questions: What is the MarketPlace Provider Sandbox? How do I access my Sandbox? Can I use the Sandbox for commercial/ demonstration/ production use? Can I get a local copy of T24 to download? How can my Product interact with the Sandbox? Top Five Frequently Asked T24 Questions: Can I change the version of T24 the Sandbox is running? How do I get the T24 account list? How do I get the T24 Payment Order list? How to open a Till? How to get the XML file generated? To find out more about MarketPlace, please get in touch via marketplace@temenos.com or to register as a MarketPlace Provider, click here to complete the registration form and a member of the team will be in touch."
  },
  "faq/join.html": {
    "href": "faq/join.html",
    "title": "Provider Registration",
    "keywords": "<!-- ---------------------------------------------------------------------- --> <!-- Already registered? Sign in **here**. --> Developed as a self-service, on-line digital store, Temenos MarketPlace provides a showcase platform for both Temenos and its wider community of fintech providers to help financial institutions: experience the latest innovations in financial services technology through its ever-growing range of products deploy them directly into their business solutions quickly and securely The products available include widgets, apps, integrations and solutions, all of which can add increased functionality and significant business value to existing solutions based on Temenos products . Apply to become a MarketPlace Provider Fill in the form below and a member of the MarketPlace team will be in touch. <!-- ---------------------------------------------------------------------- --> <!-- NOTE: Please add the following <META> element to your page <HEAD>. --> <!-- If necessary, please modify the charset parameter to specify the --> <!-- character set of your HTML page. --> <!-- ---------------------------------------------------------------------- --> <!-- ---------------------------------------------------------------------- --> <!-- NOTE: Please add the following <FORM> element to your page. --> <!-- ---------------------------------------------------------------------- --> <!-- ---------------------------------------------------------------------- --> <!-- NOTE: These fields are optional debugging elements. Please uncomment --> <!-- these lines if you wish to test in debug mode. --> <!-- <input type=\"hidden\" name=\"debug\" value=1> --> <!-- <input type=\"hidden\" name=\"debugEmail\" value=\"ineagoe@temenos.com\"> --> <!-- ---------------------------------------------------------------------- --> First Name Last Name Job Title e.g. Developer Contact Number Business Phone Number Address Street Please insert company's address City Please insert company's address State/ Province Please insert company's address Zip Please insert company's address Country Select Afghanistan Aland Islands Albania Algeria American Samoa Andorra Angola Anguilla Antarctica Antigua and Barbuda Argentina Armenia Aruba Australia Austria Azerbaijan Bahamas Bahrain Bangladesh Barbados Belarus Belgium Belize Benin Bermuda Bhutan Bolivia Bonaire Bosnia and Herzegovina Botswana Bouvet Island Brazil British Indian Ocean Territory Brunei Darussalam Bulgaria Burkina Faso Burundi Cambodia Cameroon Canada Cape Verde Cayman Islands Central African Republic Chad Chile China Christmas Island Cocos (keeling) Islands Colombia Comoros Congo Congo, The Democratic Republic of The Cook Islands Costa Rica Cote D'ivoire Croatia Cuba Curacao Cyprus Czech Republic Denmark Djibouti Dominica Dominican Republic Ecuador Egypt El Salvador Equatorial Guinea Eritrea Estonia Ethiopia Falkland Islands (malvinas) Faroe Islands Fiji Finland France French Guiana French Polynesia French Southern Territories Gabon Gambia Georgia Germany Ghana Gibraltar Greece Greenland Grenada Guadeloupe Guam Guatemala Guernsey Guinea Guinea-Bissau Guyana Haiti Heard Island and Mcdonald Islands Holy See (vatican City State) Honduras Hong Kong Hungary Iceland India Indonesia Iran Iraq Ireland Isle of Man Israel Italy Jamaica Japan Jersey Jordan Kazakhstan Kenya Kiribati Korea, Democratic People's Republic of Korea, Republic of Kosovo Kuwait Kyrgyzstan Lao People's Democratic Republic Latvia Lebanon Lesotho Liberia Libya Liechtenstein Lithuania Luxembourg Macao Macedonia, The Former Yugoslav Republic of Madagascar Malawi Malaysia Maldives Mali Malta Marshall Islands Martinique Mauritania Mauritius Mayotte Mexico Micronesia, Federated States of Moldova, Republic of Monaco Mongolia Montenegro Montserrat Morocco Mozambique Myanmar Namibia Nauru Nepal Netherlands Netherlands Antilles New Caledonia New Zealand Nicaragua Niger Nigeria Niue Norfolk Island Northern Mariana Islands Norway Oman Pakistan Palau Palestine Panama Papua New Guinea Paraguay Peru Philippines Pitcairn Poland Portugal Puerto Rico Qatar Reunion Romania Russian Federation Rwanda Saint Barthélemy Saint Helena Saint Kitts and Nevis Saint Lucia Saint Martin (French Part) Saint Pierre and Miquelon Saint Vincent and The Grenadines Samoa San Marino Sao Tome and Principe Saudi Arabia Senegal Serbia Seychelles Sierra Leone Singapore Sint Maartin (Dutch Part) Slovakia Slovenia Solomon Islands Somalia South Africa South Georgia and The South Sandwich Islands South Sudan Spain Sri Lanka Sudan Suriname Svalbard and Jan Mayen Swaziland Sweden Switzerland Syrian Arab Republic Taiwan Tajikistan Tanzania, United Republic of Thailand Timor-Leste Togo Tokelau Tonga Trinidad and Tobago Tunisia Turkey Turkmenistan Turks and Caicos Islands Tuvalu Uganda Ukraine United Arab Emirates United Kingdom United States Minor Outlying Islands United States of America Uruguay Uzbekistan Vanuatu Venezuela Vietnam Virgin Islands, British Virgin Islands, U.S. Wallis and Futuna Western Sahara Yemen Zambia Zimbabwe Email address Your Business Email Address Business Email Address Company's Email Address Company Info Full Corporate Name Country of Incorporation Company's Headquarter Company and Apps Please tell us about your company and the type of widgets, components, APIs or integrations you might submit to the MarketPlace Business Function Business Development Compliance Finance Marketing Operations Technology Legal To select/ deselect multiple items, keep pressed CTRL key Business Function - Other Primary Market Retail Corporate Insurance Islamic Finance Microfinance & Community Private Wealth Universal Credit Unions Treasury & Capital Market Transaction & Payments To select/ deselect multiple items, keep pressed CTRL key Primary Market - Other What is the solution value proposition? What differentiates this solution? Is there a compelling reason to buy the product now or in a specific time frame? What is the average selling price and average sales cycle? Which banks use your solution today? I have been referred to join the MarketPlace by: Select Temenos employee Temenos customer Not applicable Please specify the name of the person/ organization that you've been referred by: If this is not applicable, please mark as N/A I accept the Temenos MarketPlace Terms and Conditions of use </form> <!-- ---------------------------------------------------------------------- --> <!-- <div class=\"checkbox\"> <label><input type=\"checkbox\">Please keep me up-to-date with an occasional email form Temenos MarketPlace ONLY.</label> </div> --> <!-- ---------------------------------------------------------------------- -->"
  },
  "faq/lock-sandbox.html": {
    "href": "faq/lock-sandbox.html",
    "title": "FAQ",
    "keywords": "How can I lock the Sandbox with my original authentication solution? If your product/solution needs to lock the Sandbox, please contact marketplace@temenos.com"
  },
  "faq/marketplace-provider-sandbox.html": {
    "href": "faq/marketplace-provider-sandbox.html",
    "title": "FAQ",
    "keywords": "What is the MarketPlace Provider Sandbox? As a MarketPlace Provider, you have access to the MarketPlace Provider Sandbox, to help build, test and demonstrate your product's T24-integration. The MarketPlace Provider Sandbox is a live instance of T24, containing model bank data running on a secure virtual machine. This means you can connect your product to a working T24 instance to show how it works for Temenos Customers and Temenos Sales, right from your Product Page on the Temenos MarketPlace."
  },
  "faq/multiple-sandboxes.html": {
    "href": "faq/multiple-sandboxes.html",
    "title": "FAQ",
    "keywords": "Can I have multiple Sandboxes? Multiple Sandboxes are available, but not included in your MarketPlace Membership. For more information on this, please contact marketplace@temenos.com"
  },
  "faq/open-a-till.html": {
    "href": "faq/open-a-till.html",
    "title": "FAQ",
    "keywords": "How to open a Till? Go to User Menu > Retail Operation > Account Transactions > Teller > Head Teller Operations > Till Administration > Create New Till Check first the list of open tills and make sure you choose a different ID than the ones listed here. Insert a 4 digit number for the new teller in New Till Creation box and then press enter. In the new screen, Till Status should be checked as open and Teller should be your user Id , which you can select from the dropdown list. Press commit button > Your till is now open and you are able to deposit funds for your customer."
  },
  "faq/payment-order-list.html": {
    "href": "faq/payment-order-list.html",
    "title": "FAQ",
    "keywords": "How do I get the T24 Payment Order list? Login to T24 BrowserWeb Go to USER menu > Payment Order Menu > Payment Order Enquiries Click on \"Payment Order Enquiries\". A new window is open Go to \"Payment Order List\" to see the entire list of payment orders"
  },
  "faq/product-demo.html": {
    "href": "faq/product-demo.html",
    "title": "FAQ",
    "keywords": "What should I show in my MarketPlace Product Demo? As a MarketPlace Developer, you have access to the MarketPlace Provider Sandbox to show how your product engages with T24 and begin the customer onboarding experience. The best demonstrations present no-risk novelty in a familiar setting, which can be easily converted into a sale once the customer is comfortable using your product. Tell the customer that you understand their needs. You know what problems your customers need to fix and you know how your product can help. The Features and Benefits section of your MarketPlace product page can explain what makes your product rise above the competition. Why not add a public YouTube or Vimeo video link, press articles and current customer icons to help strengthen your case? Show a vision of the future, where your product is integrated with theirs. Connect a MarketPlace Provider Sandbox linked web-frontend or downloadable plug-in, to allow a user to familiarise themselves with your product during the free trial demo. Why not speak to your sales team to see which demo use-cases result in 'aha' moments for their prospective customers? Do let the customer experience the product, your way. You can customise the demo with your best use cases to ensure the right experience is delivered. Different trial lengths are available, but a 30-day trial allows a customer to get used to using your product, increasing the odds of long-term adoption once the trial expires."
  },
  "faq/product-integration-type.html": {
    "href": "faq/product-integration-type.html",
    "title": "FAQ",
    "keywords": "Whats my Product integration type? Temenos will not publish 'Referral Only' product pages, so please select Full Integration ."
  },
  "faq/product-interaction-with-sandbox.html": {
    "href": "faq/product-interaction-with-sandbox.html",
    "title": "FAQ",
    "keywords": "How can my Product interact with the Sandbox? Your product/service can invoke our public REST APIs, in order to create, read and/or update the records in the T24 instance. Some of the available API functionalities are: • retrieve available balance, transaction history, etc. • create/retrieve payment information • create/retrieve fund transfer payments/SEPA payments information"
  },
  "faq/product-page-types.html": {
    "href": "faq/product-page-types.html",
    "title": "FAQ",
    "keywords": "Product page types There are two main product page types available; The Web App will deliver a URL, via a short-cut created in the customers 'My Apps' page The Download product type will immediately offer a downloadable file (.zip) The Web App has two variant modes; a. The Web App instantly delivers a user to a URL of your choice via a MyApps shortcut. This product page type allows automated distribution of your demo and therefore has the lowest associated admin overhead, although you need to make sure the front-end is ready to receive customers and that any demo use-cases are documented either on MarketPlace or your web front-end. b. The Web App (Manual set up) delivers the same shortcut as above, but this is only accessible following your manual approval."
  },
  "faq/product-page-url.html": {
    "href": "faq/product-page-url.html",
    "title": "FAQ",
    "keywords": "What is my Product Page URL? Product pages under construction will have a different URL once published. It is advisable to wait until the product page is fully live, before executing any promotion."
  },
  "faq/register-confirmation.html": {
    "href": "faq/register-confirmation.html",
    "title": "Join MarketPlace form confirmation",
    "keywords": "THANK YOU FOR FILLING OUT THE MARKETPLACE FORM! One of our team members will contact you shortly."
  },
  "faq/retain-data.html": {
    "href": "faq/retain-data.html",
    "title": "FAQ",
    "keywords": "Will the Sandbox retain my data? The Provider Sandbox is a shared resource, so we cannot guarantee data persistence. If you need to be sure your data will be there when you need it, please contact marketplace@temenos.com"
  },
  "integration/events_flow_designer.html": {
    "href": "integration/events_flow_designer.html",
    "title": "Events & Flow Designer",
    "keywords": "Events & Flow Designer Note Integration Framework Service handles the following the high-level operations: Transformations Event Delivery through middleware Highlights: Integration Event per Company Allows the events specific to a company to be stored in a specific file of IF.EVENTS.INTERFACE.TABLE. Benefits: • Provide confidentiality to the company specific data • Have reduced number of records per table • Improve the performance T24 IIB (IBM Integration Bus) Custom Adapter allows the user to select the list of lead companies from which the event need to be polled. If no company is selected, by default the polling will happen for all companies. Integration service optional transformation XSLT prior to message delivery If the integration framework is not used with an ESB, an additional step may be performed prior to events being written to the output queue: transformation of outgoing Integration Framework messages to a user-defined format through the use of locally defined XSLT. Conditional event generation The event/data flow allows to specify at design time, which criteria need to be met in order to have the integration event saved. The criteria can only be based on fields already present in the data flow. There are no rules checked concerning the complexity of the filters implemented, however it is advisable to design the filter so that the majority of the superfluous events are not generated and perform a second step fine-tuning in the ESB. A good rule may be to use 80% - 20% (80% needless events are eliminated in the first pass and 20% are left and may be filtered out using ESB specific processing). Selective event retrieval and delivery for multiple destinations (queues) The integration service allows additional parameters to be set to manage the selection of events according to event types and (optional) delivery to a specific queue. Integration Adapters – batching of events and multiple event types retrieval by one adapter (IIB) The IBM Integration Bus (IIB) custom adapters for T24 gives the possibility to reduce the number of inbound adapters running in parallel in large scale diversified implementations. In the case of the selection of lists of integration event types with a batching attribute and size set, the delivery will be performed in messages containing homogeneous event sets with a maximum number of events pointed by the maximum batch size. Integration publisher - publication per exit point The integration publisher will allow a fine grained publication of the exit points and related data flows. Previously the publication of the entire project was the only possibility. It is now possible to proceed to a fine-grained publication from the integration exit point definition. Only the data flows defined for the exit point or exit points selected will be published. Integration publisher – event packager and command line deployment Packages can be built in the T24 Integration Project using Design Studio for a set of selected exit points and data flows. From the integration project, using “Run configurations” you can now select the maven build configuration for the project and create the artefacts (.jar for TAFJ). These artefacts will be deployed e.g. on another running T24 compatible instance using the T24 package installer and packageDataInstaller. PackageDataInstaller allows to either install event definitions or update existing ones: • Install checks whether the exit point and flow in the package already exists in T24. If exists then the Install option deletes the exit point and flow if exists and creates new exit points and flows. If not then the new exit point and flow gets created. • Update checks whether the exit point and flow in the package already exists in T24. If exists, instead of deleting the existing exit point and flow record, it modifies the existing records. If not then the new exit point and flow gets created. The packageDataInstaller also allows us to install only a subset of integration event definitions."
  },
  "integration/faq.html": {
    "href": "integration/faq.html",
    "title": "My Question",
    "keywords": "My Question"
  },
  "integration/flows.html": {
    "href": "integration/flows.html",
    "title": "Integration Framework Flows",
    "keywords": "Flows What is a Flow A flow defines the layout of an XML message which will leave T24 when a business event occurs. What are the Benefits of Flows The flow is referenced at run-time in order for an enriched message to be constructed and dispatched. (The Run-Time Engine -RTE = system platform, database, and language independent, which provides maximum flexibility with its multi-presentation engine. It supports the development of applications that serve thousands of users simultaneously). Define or Create a Flow Under Customer.event, click Flow tab Enter the flow name (Customer) Click update the Event fields to be added and select the overrides. Click 'Edit' button to launch the Flow editor. In the next screen, select from 'Field' all the strings required (of interest). Double click a selection of fields (top right) to add them to the Flow Enrichments as in the picture below. Application should already be set to CUSTOMER (if not, select it now) and the Field control prefilled with all fields available from this application (as available in the connected T24 instance). (Include for example some name and address fields) Additional information: Fields selected may be reordered or removed. Field control is prefilled with all fields available from this application (as available in the connected T24 instance). Attach only valid flows to the integrator. For example, attaching a FundsTransfer flow to a Teller version will result in a publish error, as the fields in FundsTransfer are not available in Teller. On Customer.flow tab, check below Source, where you can view the ‘source code’ for the exit point and data flow definitions in the respective source tabs. Both (.event and .flow) are xml and can be integrated to a source control system and versioned. The option Event Priority is introduced to set the priority for event delivery of the event type that is under design when using integration service. The default priority is 0 and can be edited to a positive integer. This value gets stored in the EVENT.PRIORITY field of IF.INTEGRATION.FLOW.CATALOG application. The Include before image option adds the existing transaction data to the generated event. The Process updates only option includes only the changed field value for the current transaction to the event and ignores all other fields while generating the event. The Include Digital Signature option publishes the flow with a new attribute “Include Digital Signature” to the flow. This enables the event messages to be digitally signed. The implementation for digitally signing the message need to be implemented by the user and the details are available in the Inbound Security Service User Guide. The Display Name column in the Flow Enrichments section is an editable column. Once a T24 field is added to the schema, this column allows to specify a different name to the field only in the flow to make the names more meaningful. This does not change the field name in the underlying application. Note The options “Include Before Image” and “Process Updates Only” are applicable only for Application, Version and TSA.SERVICE exit points. Flow Wizard Join (Optional) It is possible to add join field in the flow. A join field is a field that is used to retrieve the related information. To build a join field: Example: • Select the field through which the join has to be defined. (Here 'ACCOUNT.OFFICER') • Click on 'Add Join' button and a popup window as shown below appears. • Supply an XML-friendly Display Name (Here 'AccountOfficerName') • Select the application from 'Application' drop down box from which the join retrieves the data. (Here 'DEPT.ACCT.OFFICER') • Select the field from the 'Field Name' drop down box. This is the field from where the join field gets the value. (Here 'NAME') • Click 'Add' button to add to the join definition. You can see Join Definition: e.g. CUSTOMER>ACCOUNT.OFFICER>DEPT.ACCT.OFFICER>NAME Repeat step 3-6 till the join field is completed in the 'Join Definition' field. Click Finish Observe the new Flow Enrichment: Save all the changes: CTRL + S"
  },
  "integration/generate-events.html": {
    "href": "integration/generate-events.html",
    "title": "Integration Framework Generate Events",
    "keywords": "Generate Events To see more about what is an event and what are the benefits of it, please check this user guide . Note Any change of records will generate an EVENT. Change a record to generate an event Below example shows a few changes into a customer record: Login to T24 Browser and type CUSTOMER, in command line (Use comma to create an authorized record) Type a customer ID and press enter or edit button Make some changes or add information in the fields displayed and commit the deal (validate by left corner button) These modifications are generating an event record. Next, check View Events section to learn how to identify them."
  },
  "interaction/3-hours.html": {
    "href": "interaction/3-hours.html",
    "title": "",
    "keywords": ""
  },
  "interaction/3-minutes.html": {
    "href": "interaction/3-minutes.html",
    "title": "Temenos API short guide",
    "keywords": "Temenos API In next three minutes you'll learn how to access the Temenos Banking API using REST client Prerequisites To access an IRIS data service, you need: Data service URI from Temenos Sandbox Credentials (user name and password) Google Chrome browser: You can download Chrome Browser Postman Chrome extension or search for Postman REST client using Google You can also type chrome://apps/ in Chrome address bar Tip You can use any standard ReST client to work with Temenos API Note First, Prospect-iris.war file should be deployed into the jboss. Access Temenos API To access the data service: Launch Google Chrome browser and go to apps If you cannot find My Apps, then type chrome://apps/ in Chrome address bar To launch Postman from Apps , click the Postman icon The Postman user interface opens After Postman user interface opens, enter the URL containing you sandbox address and the enquiry that you need to call, provide the authorization detail and click Update request Set the Headers as follows, the method type to GET and then click Send to run the request To retrieve an individual resource, type the resource name and click Send . Example: enqPctCurrencys() which is returned in XML format Note To find out how this type of APIs can be filtered please check the information mentioned here . Next Step Learn how to create new banking API by using Temenos Design Studio. Click here for 30 minutes guide to create new banking API by Temenos Design Studio in easy steps."
  },
  "interaction/30-minutes.html": {
    "href": "interaction/30-minutes.html",
    "title": "Temenos Interaction Framework - 30 Minutes",
    "keywords": "Create Temenos API By using Temenos Sandbox and Developer package, you can create your new APIs and publish them on the MarketPlace web site. This document will guide you step-by-step to create an API in 30 minutes. Introduction IRIS is an open source GitHub project and provides Interaction, Reporting and Information Services. This project is developed and maintained by Temenos. Prerequisites To build an IRIS data service, you need to meet the following requirements: Knowledge of Web technologies Knowledge of OData & RESTful services Temenos MarketPlace Products Temenos Sandbox Temenos Design Studio Microsoft Windows operating system (Windows 7 or higher) & Internet connection Access to GitHub platform Also, please follow this 3 minutes user guide . Environment Setup Download Temenos Design Studio from My Apps section of Temenos MarketPlace and extract files from the Temenos Design Studio (or your current version) to a directory on your computer. Make sure your path does not contain any spaces or special character. Download Prospect-IRIS project You need to have GitHub account in order to download the default Prospect project. Click here Join GitHub , if you don't have GitHub account Install Git on your local machine - Git After installation of Git, fork the Prospect-iris, to fork the project go to https://github.com/temenostech/Prospect-IRIS . There are 2 options: either fork or download Prospect-IRIS Go to clone or download button and choose download Create a folder inside GitHub folder. In current example is named: Prospect-IRISc. Copy the downloaded and extracted ZIP into the newly created folder. Now you have This is what the folder contains: Note Please use Prospect-IRIS only if you have DesignStudio 201711 , with any other version the build will fail. In case you have a different version of DesignStudio then, instead of using Prospect-IRIS project you should create an IRIS Data Service Project , remove whatever is coming by default and follow the other instructions present on this page. Design Studio environment Open Design Studio and provide the workspace name Go to File - Import - than choose Existing Maven Projects Now select the root directory as the path where your Prospec-IRIS folder was created and press Finish Wait until the project is completely updated. Note Don't forget to save each change (CTRL+S) After updating all 4 projects, click right on Package explorer and choose Maven > Update Project . In the new window, uncheck Offline button and choose Force Update of Snapshots/ Releases Import Prospect-server Prospect server is responsible to communicate with Temenos Sandbox Go to File > Import > then select Existing Projects into Workspace Click Next and then select the root directory (Insert the path where your Prospect server folder is located). Then click finish Prospect-server will appear updated now under Package Explorer, along with the other existing projects. Build the Prospect-IRIS project Go to Prospect-dataService , right click on Package.launch and choose Run as package Wait for the build to be completed. In the Console tab, you should get [INFO] BUILD SUCCESS Prospect-iris.war file will be generated that can be taken and deployed Connect Prospect with the Sandbox In order to establish the connection with Temenos Sandbox: Expand the *-server project and double click the server.properties file. Enter the user name, password, host name and port number. You can get these details from your Temenos Sandbox. Start the server: click the Servers tab, right-click T24 Connection and click Start (or Restart ) State will change into Active Import enquiries or versions On the top menu, click File > Import A new window appears. Here, expand Design Studio, click Import T24 Enquiries and then click Next Select the enquiry you want to add to your project. Save this enquiry in the enquiry folder of the -models project. Click **Finish * A success message is displayed. Click OK to close this message. The enquiry is your *-models project. Create a RIM file To create a RIM file: Right-click the imported enquiry. In the context menu, click Design Studio and then click Generate Code . Result: The enqCURRENCY-LIST.rim file has been generated in the following directory: *-models\\rim\\gen\\T24\\enqCURRENCY-LIST.rim Add the enquiry to the Service Document The last step in creating your API is to add the RIM definition to the service document. The service document is in the following directory: *-models project\\rim\\project_name\\project_name.rim Double click the rim file with your project name, for example Prospect.rim. The contents of the file are displayed in the right pane. Add the newly created RIM reference in the Service Document resource. Make sure you follow the correct sequence: Domain Name > RIM Name > Resource Name (Collection) Example: T24.enqPctCurrency.enqPctCurrency Verifying the new link in the Service Document Make sure that you are able to navigate from the Service Document to the newly added rim file. To test the link, control-click the new resource definition. You should be able to go the enqPctCurrency resource. Rebuild your data service. Go to Prospect-dataService > Package.launch > Run As > Package"
  },
  "interaction/access-channels-APIs.html": {
    "href": "interaction/access-channels-APIs.html",
    "title": "Access Channels APIs",
    "keywords": "How to access Channels APIs using ReST client Temenos Channels data service built on top of IRIS. IRIS is an open source runtime framework for Interaction, Reporting & Information Services. Prerequisites Temenos Sandbox Credentials (username and password) Google Chrome browser – Download from here POSTMAN chrome extension Either search POSTMAN ReST client on Google OR click this link Access Data service Enter the URI of your data service Provide the authorization details. You need to select basic authentication, enter the username and password and click on Update request Set Accept header to application/atom+xml If you want to get json format, then set application/hal+json Set method type to GET Set URL: https://your sandbox address/Channels-iris/Channels.svc/GB0010001/ Click SEND . You must get status 200 OK The available Channels APIs list can be found here See example bellow - accessing API enqTcNofAccounts for a specific account If everything is OK, you will get status 200 OK and the response in XML format"
  },
  "interaction/architecture.html": {
    "href": "interaction/architecture.html",
    "title": "REST",
    "keywords": "The Interaction Framework is designed to make creating and using web services - the messages that are sent over the Internet to retrieve resources - as easy as possible for developers. The framework is built according to RESTful constraints, the architectural style of the web, and uses OData , the web standard for communication, to make talking to the framework straightforward for user agents. REST REpresentational State Transfer (REST) is the architectural style behind how the web works. It consists of a set of architectural constraints applied to a hypermedia system. A hypermedia system provides navigational information to the system's REST interfaces dynamically by including hypertext links with its responses to messages. Note REST was first defined by Roy Fielding in his 2000 PhD paper. To learn more, see https://en.wikipedia.org/wiki/Roy_Fielding RESTful constraints The Interaction Framework is RESTful because it conforms to the following constraints. Client-Server The Client-Server constraint enforces a distributed architecture, where the roles for each part of the architecture are clear. A service - like the Interaction Framework - has to provide one or more capabilities, such as a way to access resources. When a user agent asks the Interaction Framework for a resource the framework either has to carry out or reject the request before sending a response.| Stateless Communication between the user agent and the Interaction Framework has to be stateless. The requests sent by the user agent must include everything the Interaction Framework needs to carry out the request. And when the Interaction Framework has dealt with the request, it returns all the session data to the user agent. Making the user agent responsible for state data frees up memory in the framework, making it easier to deal with large numbers of concurrent requests. Cache The Cache constraint means that responses from the Interaction framework must be labelled as either cacheable or non-cacheable. And requests from user agents go through a cache component, which allows the framework to reuse some previous responses. This leads to a faster, more efficient system. Interface The Interface constraint means that the Interaction Framework and the user agents share a single technical interface, to make communication easier. The interface is applied through resource identifiers, and the methods and media types of HTTP. Layered System The Layered System constraint means that a RESTful service is made up of layers, none of which can 'see past' the other. Layers can be swapped in or out without harm to the other layers. The Interaction Framework is a layer inserted in a transparent, consistent way between the user agents and the resource providers. And because the framework doesn't need to know what other services the user agents are using, it reduces the level of dependency - or 'tight coupling' - between the user agent and the service. HATEOAS The Interaction Framework uses a Hypertext As The Engine Of Application State (HATEOAS) based REST architecture. That means that the user agent finds their way through the framework API using hypertext links. OData OData is an OASIS open data protocol that allows for the exchange of data between user agents and resource providers. The protocol is HTTP based - so it supports the GET, POST, PUT and DELETE methods described in the REST section - and was designed with REST in mind. User agents consume the OData produced by server-side applications, like the Interaction Framework. And server-side applications expose the data to the user agent through web services. Communicating with the framework Key to diagram A The user agents are all REST clients - they are built to consume the OData that the RESTful Interaction Framework produces.Whether the user agent is a web browser, a mobile phone or a specialist interface, they share the same HTTP technical interface and obey REST constraints. B The user agent sends a request for a resource to the Interaction Framework. The message uses the generic URI syntax and HTTP methods that the framework's OData layer also uses. C The Interaction Framework uses the Resource Interaction Model (RIM) language to define what resources are available to the request and help relay commands to the resource provider (or providers). D The resource providers and third-party services connect to the framework through TCP/IP in a way that best serves the provider - T24 uses its own proprietary T24 connector, but another resource provider could use SOAP or OData. E The resource providers and third-party services respond to the commands from the Interaction Framework and return the requested resources. F The framework extends generic OData commands through provider-specific commands, for example T24 commands or Solr commands."
  },
  "interaction/basics.html": {
    "href": "interaction/basics.html",
    "title": "Banking API",
    "keywords": "Banking API Temenos provides two types of API products Core Banking API Internet & Mobile Banking API Core Banking These APIs are for bank employees, where they can: View and create USERS View and create ACCOUNT View and create CUSTOMER Funds Transfer Cash Deposit & Withdrawal And many banking day to day activities Internet & Mobile Banking These APIs are for bank customers where they can: See their account balance Transfer the funds from one account to another account Domestic transfer International Funds Transfer Pay a bill Direct debit Create a standing order API Interface The Temenos Sandbox provides a default data service where you can try all of the above operations Retail Banking Prospect-iris is the default open source project, that contains most of the basic banking APIs. Customize this project according to your needs or deploy directly to your sandbox to access the APIs The default URL of this service is > http(s)//127.0.0.1/Prospect-iris/Prospect.svc/GB0010001 Temenos APIs support BASIC authentication and these details are already available inside your products. Channels This product already deployed into your sandbox and you need to follow the getting started guide to work on this The default URL of this service is > http(s)//127.0.0.1/Channels-iris/Channels.svc/GB0010001 API Basics Before starting the integration here is some basic information that is required to develop and integrate your solution with Temenos Digital Banking Suites Request Headers These headers are sent by the client in a HTTP protocol transaction. All headers are RFC822 format headers. Authentication Temenos API supports BASIC authentication only where you need to provide the Username & Password of the data service. e.g. [{\"key\":\"Authorization\",\"value\":\"Basic Uk9MRkdFUkxJTkdUQzoxMjM0NTY=\"}] Accept This header is for representation schemes (Content-Type meta information values) which will be accepted in the response to this request. Temenos API supports only following Accept headers application/atom+xml e.g. [{\"key\":\"Accept\",\"value\":\"application/atom+xml\"}] application/hal+json e.g. [{\"key\":\"Accept\",\"value\":\"application/hal+json\"}] If-Match The If-Match request-header field is used with a method to make it conditional. A client that has one or more entities previously obtained from the resource can verify whether that entity is modified or not. If the entity has been modified, then it'll return a etag mismatch error. If not, it will return a success message. e.g. [{\"key\":\"If-Match\",\"value\":\"Uk9MRkdFUkxJTkdUQzoxMjM0NTY\"}] Response Headers These headers are sent by the server with additional information in a HTTP protocol transaction. All headers are RFC822 format headers. Content-Type The Content-Type header field indicates the media type of the entity-body sent to the recipient. Temenos API supports only the following Accept headers application/atom+xml e.g. [{\"key\":\"Content-Type\",\"value\":\"application/atom+xml\"}] application/hal+json e.g. [{\"key\":\"Content-Type\",\"value\":\"application/hal+json\"}] ETag The ETag HTTP response header is an identifier for a specific version of a resource. This header can also be used to check whether a resource has been modified. If a resource has been modified, the etag value will change. e.g. [{\"key\":\"ETag\",\"value\":\"<<etag value>>\"}] Response Body This is the response received from the server, which could be in either json or XML format according to the Accept request header. Request Body This is the request body sent by the client or user agent to server over HTTP transaction. Status Code For each HTTP transaction, the server will return a status response of either success or failure. Here are the status codes Temenos APIs can return. Code Message Description 200 OK SUCCESS 201 CREATED Record created 400 Bad Input Wrong data or invalid body contents 401 Unauthorised Unable to authorise user 404 Resource Not Found Requested resource not available in service 405 Method Not Found Incorrect HTTP method 412 Precondition Failed Some of the condition not met the criteria 415 Unsupported Media Type content-type is wrong or not supported Next Steps Learn how to access these APIs using any standard POSTMAN ReST client or user agents with our 3 minutes guide ."
  },
  "interaction/channels.html": {
    "href": "interaction/channels.html",
    "title": "Temenos Channels API Listing",
    "keywords": "List of Channels API Category API Name Description Accounts enqTcAccounts Gets the online actual balance and real balance for accounts. The Account Id (e.g. 77607) or the Arrangement Id (e.g. AA16082HV490) are valid inputs into the search selection, alternatively not entering anything into the selection fields will return a list of all active accounts. enqTcNofAccounts Gets product condition information for AA accounts, lending and deposit products. The information retrieved relates to the following: Details about when product was opened – date and balance; Limit information – available and approved overdraft, limit expiry date, shared limit accounts; Tax Rate; Interest Details – interest type, interest rate(s); Payment Details – payment frequency, payment type and method, payment schedule; Balance information – available funds, outstanding overdraft limit\" Adverts enqTcNofCrOpportunitys Gets the list of opportunities available for customers and the related details of opportunities/campaigns that have been specifically targeted towards the needs of the customers. verCrOpportunity_Tcs A campaign generator to determine which product specific opportunities/adverts to display to a customer (external user). The service allows users to create inbound and outbound campaigns for various product types towards target customers. Alerts enqTcEbAlertRequests Gets the list of alerts request and their details for a given account/customer. enqTcNofGetEligibleEvents Service allows subscription to an alert as well as being able to unsubscribe from an alert. verEbAlertRequest_Tcs Used to create, update and retrieve details of an alert request. verDeCustomerPreferences_Tcs Used to record the customer’s preferred option for receiving notifications or alerts from the Bank. Typical examples may include email, sms, secure message. Arrangements enqTcAaProducts Gets details of all products that the customer satisfies the eligibility rules for. Each product will have eligibility rules that the customer will need to satisfy in order to qualify to take the product out. Where the customer satisfies the criteria for the product then all product information will be displayed. enqTcPeriodicInterests Gets the periodic interest rates for each currency for any time period as defined by the user. These time periods can be defined either in months e.g. 3 months or in days e.g. 7 days. verAaPrdCatInterest_Tcs This service reads Interest Condition at Product level for a dated arrangement. A product defined and processed in AA can have multiple interest properties defined (e.g. principal interest, penalty interest, commission, etc.).The number of interest properties is determined by the users defining the products. verAaArrangementActivity_Tcs Used to create, update and retrieve details of an Arrangement Activity. Beneficiary enqTcNofBeneficiarys Gets the list of beneficiaries(payees) and their details for a given customer. verBeneficiary_Tcs The service allows a user to create and maintain Beneficiary information for automated payment services which can then be defaulted into funds transfer and standing order, thus avoiding having to enter the same information each time a payment is created. This information will be used by the payment order application to enable a financial institution to make a payment or series of payments to a third party. Two types of Beneficiaries can be entered: Customer defined and Bank defined. The customer provides relevant debit i.e. transaction type, customer number and credit details i.e. beneficiary account number and sort code. enqTcBeneficiaryUtilitys Gets the list of utility beneficiaries for a given customer. The customer needs to be passed in as a valid Customer Id. Not providing a Customer Id will return an error message. Cards enqTcCardIssues Gets the details of the cards owned by a given account. verCardIssue_Tcs Used to create, update and retrieve details of a card. Cheques enqTcChequeRegisterSupplements The Cheque register holds details of the cheque holdings of all accounts on the system. The service gets details from the cheque register of cheques that have been issued, stopped, cleared and cancelled. verPaymentStop_Tcs This service is used to record a stopped cheque for an account. Common enqTcNofUserRights Gets the licensed products availability and TC Operation values from AA user rights property of Internet Services Line. Results are only displayed for the External User logged in as. enqTcCurrencys Gets details of each individual currency set up in the system. The following details are retrieved: the currency name, code and market, together with information for the buy and sell rates. enqTcDates A date record exists for each company. This service gets the Company Id and contains the run dates for the previous, current and the next working day. enqTcEbLookups Gets the EB Lookup records based on the specific look up type. enqTcCountrys Retrieves Country information set up in the system – the Country Code e.g. GB and the Country name e.g. Great Britain Customer Profile enqTcCustomers Gets the contact details of the Customer who logged in. In addition, the following profile information is also returned: date of birth, Customer status and description, Customer Id. enqTcNofProductsBalances Gets the total sum of balances for the available products of the customer with respect to AA product lines like Accounts, Deposits & Loans. verCustomer_Tcs This service is used to create a New Customer Profile, make amendments or update, validate and authorise the same. Deposits enqTcAaDeposits This Service returns the List of deposits that have been opened. The Id needs to be passed in as a valid T24 Arrangement Id. Not providing a filter Id will return all the deposits from T24.The application will be secured via the standard mechanisms of the Temenos Core Banking System. enqTcNofAaDeposits This Service returns an arrangement overview of the deposit for the given Arrangement Id. The Arrangement Id needs to be passed in as a valid T24 Arrangement Id. By not providing a valid Arrangement Id, the system will return an error message. Direct Debits enqTcDirectDebitss This service returns the list of direct debits maintained by external customer. Valid account number needs to be passed in as Id. Not providing a filter Id will return all the direct debits from T24. verDdDdi_Tcs This service is used to cancel or amend an existing direct debit or capture a new direct debit mandate where information such as Customer Bank sort code, Customer Account name, Account number, clearing reference, mandate status etc. is populated into the form. The Claim can be \"Outward\" i.e. Claim is sent to the Customer's Bank or Inward Claim i.e. another Bank submit their claim. Currently the Outward claim processing is supported through the Direct Debit module & the Inward claim has to be handled through a local interface. The account number is entered into the input field and this will either retrieve an existing record or create a new record for a new direct debit. Images enqTcImDocumentImages Gets all uploaded images across all applications. Users can search using the ImageReference that was used to upload the image. Examples of references vary from customer or account number to a funds transfer reference. verImDocumentImage_Tcs This service is used to define and store individual images (create / remove / amend the Im document image record). It allows great flexibility in defining images as there is no restriction on the type of application or field to which the stored image is related. verImDocumentUpload_Tcs This service allows a user to take a chosen image or document (i.e. signature, photo etc.) and upload it so that it can be displayed with a specific application such as CUSTOMER, ACCOUNT etc. which the system will then store. Loans enqTcAaLoans Gets the list of Loans and its details. enqTcNofAaLoanOverviews Gets the loan arrangement data using the following 4 mandatory fields: the Arrangement Id of the loan, the DateFrom, the DateTo and the Balance Type used to get the overdue details (e.g. TOTALDUE). enqTcNofAaPaymentSchedules Gets the list of scheduled payments of a loan The arrangement id of the loan is mandatory. Login enqTcEbExternalUsers This Service returns the details of the external user logged in. There is no filter needed to be passed in as it is defined within the API to take the logged in external user using common variable in T24. verEbExternalUser_Tcs This service allows users to create a new record or update an existing record for access to internet services. The External User Id is required to be passed along with user status which is mandatory input. Messages enqTcEbSecureMessage Gets the list of messages from the Bank to the Customer. Customer number needs to be passed in as a valid Customer Id. Not providing a filter Id will return all the messages from the system. enqTcEbSecureMessageRead This service returns the list of messages sent from external user. Customer number needs to be passed in as a valid Customer Id. Not providing a filter Id will return all the messages from the system. verEbSecureMessage_Tcs This service is used to compose a new message, validate and authorise a record. verEbSecureMessage_TcReply This service is used to reply to a received message, validate and authorise a record. Payment Order enqTcDeBics Gets details such as bank, branch, city, country, name of national code for Bank Identifier Codes. enqTcInIbanPluss Gets details on the IBAN Id for a financial institution. enqTcInIbanStructures Gets details of the IBAN Country Code. enqTcPaymentOrderCountryRuless Gets the respective country rules for payment order. The country code can be input into the Id selection field to retrieve the specific country rules for payment order, alternatively no input will return all country rules. enqTcPaymentOrders Gets the list of payment orders that have been entered into the system. enqTcPaymentOrderProducts Gets details on Payment Order products. enqTcPaymentPurposeCodes Gets list of Transaction Codes and descriptions for the purpose of the payment transaction. verPaymentOrder_Tcs This service captures payment orders from their respective source and puts the order information into a structured and recognised format based on ISO 20022 (XML) and delivers the orders to a payment engine for onward processing. Standing Order enqTcStandingOrders This service returns the list of standing orders for an external customer. Customer number needs to be passed in as a valid customer Id. Not providing a filter Id will return all the standing orders. verStandingOrder_Tc This service is used to compose a new, validate, authorise, amend and delete STO record. Transaction List enqTcNofTxnsLists This Service returns the details of the transactions list for any particular account or recent transactions. The service is used to list completed transactions / pending transactions and search transactions. There are various optional filters and a mandatory filter being ListType for the API. enqTcNofTxnsOverviews Gets a statement or transaction overview for a customer’s account."
  },
  "interaction/create-new-customer-in-t24-using-postman.html": {
    "href": "interaction/create-new-customer-in-t24-using-postman.html",
    "title": "Create T24 Customer Using Postman",
    "keywords": "Create Customer with Prospect Iris Headers definitions in Postman: Make sure you have set the following headers presets: Http Request Headers: Accept: 'Application/atom+xml' OR Accept: 'Application/hal+json' Http Response Headers: Content-Type: 'Application/atom+xml' OR Content-Type: 'Application/hal+json' Get customer collection Type the following URL request in order to see the list of available customers: https://your sandbox address/Prospect-iris/Prospect.svc/GB0010001/verCustomer_Inputs() Make sure you have following parameters (input your sandbox username and password): Create new customer in memory (generate Id) Type the following URL request to create a customer and press SEND : https://your sandbox address/Prospect-iris/Prospect.svc/GB0010001/verCustomer_Inputs()/new Make sure you have the following parameters (input your sandbox username and password): Note Keep in mind the customer Id number generated ( 190245 ) Validate new customer record Follow below steps (see also image): Copy the content from body XML Paste it into Body (raw) In Body (raw) input mandatory data - see next point and example: \"Mandatory data details\" Change the request into verCustomer_Inputs(190245)/validate Press SEND Mandatory data details Into the body (raw option) input following mandatory data parameters: Example: MNEMONIC: SHORT NAME: NAME1: SECTOR: GENDER: TITLE: GIVENNAMES: Create new customer record in database After sending the validate request (from above), if the result is OK (status 200), you need to do again a POST : https://your sandbox address/Prospect-iris/Prospect.svc/GB0010001/verCustomer_Inputs('190245') Authorize new customer record Go to Headers tag (on the same menu with Cookies ) and copy the etag: Into Headers, add the key ‘If-Match’ and copy paste the ‘etag’ as below. Change the request, from POST into PUT, and in order to authorize the record use the 'authorise' command. In Authorization, change the Username (you need a different user to authorize the deal) https://your sandbox address/Prospect-iris/Prospect.svc/GB0010001/verCustomer_Inputs('190245')/authorise Status should be 200 OK Check created customer record To check the record created in the database, go to BrowserWeb: https://your sandbox address/BrowserWeb/servlet/BrowserServlet Type CUSTOMER in the menu bar, press enter and in the new screen insert the customer ID created:"
  },
  "interaction/data_service_designer.html": {
    "href": "interaction/data_service_designer.html",
    "title": "Design Studio",
    "keywords": "IRIS is designed to make it easier for financial organizations to create web services with access to multiple resource providers. Temenos provides IRIS to organizations as part of a design package called Data Services Designer (DSD) . Data Services Designer comprises the following components. Design Studio Design Studio is an Eclipse-based, Temenos built Integrated Development Environment (IDE) . It provides a graphical environment that makes it easier for developers to explore the resources of T24 - and other resource providers - and expose them in a RESTful way for consumption by user agents. Design Studio for APIs provides an intuitive graphical environment that commodity specialists in the bank can use to easily configure what data and functionality their Core Banking system should make available via APIs to selected third parties, providing the foundation for an open banking platform. Design Studio for Webservices provides an intuitive graphical environment that commodity specialists can use to easily build and deploy web services. It maintains a clear separation of the service definition within the bank's Core Banking system and the technical tooling used to publish services to the enterprise. Entity Data Model The Entity Data Model is a subset of common T24 resources that developers can expose to one or more user agents, using Design Studio. IRIS IRIS is the hypermedia API behind the Interaction framework that runs the RIM language. .RIM files RIM files are based on the RIM language. These design-time files show the possible state changes in the representation of the resources. When their design-time work is completed, RIM files are converted by Design Studio into the Java applications that form the 'live' (runtime) web services. Java web application The runtime application generated in Design Studio from the RIM files. Java application server The standard container for both the application and the technical resources needed to run them. API management platform A third-party platform that allows developers to manage the applications / web services they have created, once they go live."
  },
  "interaction/episode1.html": {
    "href": "interaction/episode1.html",
    "title": "Creating the service & Media Types",
    "keywords": "Creating the service & Media Types"
  },
  "interaction/episode2.html": {
    "href": "interaction/episode2.html",
    "title": "API Design",
    "keywords": "API Design"
  },
  "interaction/episode3.html": {
    "href": "interaction/episode3.html",
    "title": "API Management",
    "keywords": "API Management"
  },
  "main/dedicated_sandbox.html": {
    "href": "main/dedicated_sandbox.html",
    "title": "Dedicated Sandbox",
    "keywords": "MarketPlace Dedicated Sandbox As a MarketPlace Premium Member, you have access to a MarketPlace Dedicated Sandbox, to help build, test and demonstrate your product's T24-integration via the Temenos MarketPlace. The Dedicated Sandbox is a live instance of T24, containing model bank data running on a secure virtual machine that will be available only for you and where you can complete following operations: Create design studio package and upload to T24 using GitLab Create new API package and upload to T24 using GitLab Deploying other localjars using Gitlab Accessing the Dedicated Sandbox You can access the MarketPlace Dedicated Sandbox by going to your MyApps page in MarketPlace. Clicking on the sandbox product in MarketPlace will redirect you to your organization link address. You will be sent an email with the user and password required to connect. Here you will have access to one T24 dedicated sandbox running the Retail Suite Application. Note The sandbox is not currently available via MarketPlace, so you will receive all the details you need to access it via your Temenos MarketPlace Welcome email. The Environment Information page contains 3 important sections: T24 Release section that gives access to the T24 area through browser. Database section that indicates the status of the database. Repository section that gives access to the gitlab repository that allows users to deploy their packages, plugins, localjar files, etc. T24 Release section - available actions By selecting “ GO TO APPLICATION ”, a new tab containing the T24 BrowserWeb URL will open in a new browser window. The username and password to be used here, will have been sent via email. By selecting “ MONITOR APPLICATION ” the TAFJEE Servlets page will open in a new browser tab and from here you can check the following sections: Diagnostic section: provides details about your TAFJ environment, get routine compilation details, etc. Execution section: run services, etc. Troubleshooting section: access log files, commo files, etc. The Increase instances button allows a user to increase the number of T24 VMs in cloud in order to improve performance. The Decrease instances button allows a user to decrease the number of T24 VMs in cloud. The Rebuild application button allows a user to recreate the environment. This action will re-build the environment based on packages deployed in the gitlab repository. If the repository is empty the environment will be as new. If the repository contains a package, the environment will be re-built with that package included in the build. The Start environment button allows a user to start the VM where T24 is installed and to start the jboss of the T24 area. The Stop environment button allows a user to stop the jboss and then to stop also the VM where this jboss is running. Database section - available actions By clicking the \" Export database \" button a zip file will be generated in the sftp.cloud.temenos portal which will contain the current database of the sandbox. Note: This database can be used as a backup that can be deployed later on into the sandbox as a duplicate for testing/development or for local development before deploying to the cloud. Repository section This section displays the git repository correspondent to your T24 sandbox. In order to be able to deploy changes into the sandbox please: Generate a SSH key and save it. Clone the gitlab repository. Commit changes into the gitlab repository. Trigger Deployment of the changes committed into the gitlab repository. For guidance in how to investigate if whatever was committed in gitlab was done correctly please check instructions mentioned here ."
  },
  "main/events-notifications.html": {
    "href": "main/events-notifications.html",
    "title": "Events",
    "keywords": "Events What is an Event A generic term for the notification which T24 emits when a business event occurs. Example: The Events are generated when a transaction happens and for that transaction an Integration Flow is attached. From the transaction and associated applications, the data enrichments are built as defined in the Flow and an XML representation of the Event is generated. This XML is confirmed to the schema representation (XSD) of the Flow and stored in a T24 events table called IF.EVENTS.INTERFACE.TABLE. Bellow steps will show how to create Integration Framework (IF) events in order to package them in a T24 development environment. What are the Benefits of Events Events enable messages generated by an application to be managed following a publish model. When events are generated, they are passed through system as XML files and registered event listeners receive the event information as XML. Each application view uses an XML schema as metadata to describe the XML data for events. This metadata enables the users to understand the data requirements of any application view event or service. Preparing Integration Project In a workspace created in your Design Studio, set-up Integration Studio Perspective: On top menu bar, go to Window > Perspective > Open Perspective > Other From the list, click on Integration Studio > OK In order to create a new T24 Integration Project go to File > New > T24 Integration Project: Choose a name for your project Check 'Enable project specific settings' Choose Connection Method as Web Service Insert IF Service URL : http:// localhost:9089 /axis2/ (replace 'localhost:9089' with your sandbox address or use your localhost, then '/axis2/') Insert valid T24 User Name Insert valid Password for the above T24 user The connection with T24 server is validated. Result: You are now connected to T24 and will be able to create events and flows. How to Create Events To create a new event, right click the events folder under the Integration Studio project. Specify the name of the event. Ensure that the event name has .event extension. Select 'Events' folder under Integration Studio project (called Sample) created before. Then choose New > T24 Event Wizard And set a file name When setting the file name, do not change the extension ‘.event’ With a T24 Connection available, Integration Designer retrieves the T24 data like: Version, Application, Exit Points, Application Fields etc, and populates the relevant drop down boxes. RESULT: New event created and exit point updated. Exit point is when an T24 event is emitted and triggered. Define the exit point in the new event. Exit point can be an input or authorization routine of a Version, an Application, or Component Service operation. A new option TSA.SERVICE is also added to define events for CoB or Service. Currently, the exit point is to inform at which stage the event will be triggered. On selecting the exit point type, the respective section is enabled, such that the exit point and the application/version name can be specified. (INPUT.ROUTINE is selected because we want to see the event data when user inputs something). Save the exit point: CTRL + S Create Overrides Overrides can be specified using the Overrides tab. This helps in implementing DISPO.PROCESSING, such that a particular user can authorize the record. Only Overrides with DISPO.PROCESSING set to FORCE are available. Overrides tab is enabled only for INPUT.ROUTINE exit point, as override is inappropriate during Authorized stage. Note Override option is supported only for INPUT.ROUTINE type of exit point for Version and Application. Example: Go to Customer.event tab screen Select Overrides Add overrides: To save the event changes press CTRL + S."
  },
  "main/external-user.html": {
    "href": "main/external-user.html",
    "title": "User Retail Banking",
    "keywords": "External User Note Each External User is related to: a customer (i.e., the person who enters the system through an External User) an internet service arrangement The external user creation process involves the following steps: Create a Customer in T24 Create accounts for this new Customer Create and authorise an Internet Service Arrangement Create and authorise the External User Activate External User Create a Customer in T24 Please follow this user guide to know how to create one. Create Accounts Please follow this user guide to know how to create one. Create and authorise an Internet Service Arrangement An Internet Service Arrangement is an instance of a certain product that is linked to a specific customer. This arrangement is a personalized instance of a Internet Banking product that defines what the user gets to view when they access the system. When creating the arrangement, some default settings are included. To create the Internet Service Arrangement: Go to User Menu > Product Catalog From Category list (under Product Groups) select > Online Services > Retail Online Services > Retail Internet Banking , which will create a new arrangement: A new window is displayed > Insert the** Customer Id** (for the client you want to provide Internet access) and click Validate button > An internet service arrangement is created with default settings Note down the arrangement Id To authorise the Internet Service Arrangement (you must authorise the record before it can be live into the database): Log out and log in again with a different user (the second user id you have received in your Welcome email) In the command line type AA.ARRANGEMENT.ACTIVITY A AAACT1810700G80F78 (AA.ARRANGEMENT.ACTIVITY A + the arrangement id ) Press enter and then authorize the transaction (double tick button) Transaction is complete. Create the External User Under Admin Menu > click External User Administration > Create/ Manage Online Banking Access > Create External User In the new screen displayed, type the following: External User Creation ( RETAIL5 ): type a name that the customer will use to login Channel is defaulted with specific value ( INTERNET - to be used for access to Internet banking; TCMOBILE to be used for access to Mobile banking) Arrangement ( AA181078RQL3 ): the generated value while creating an Internet Service Arrangement Start Date ( 29 MAY 2018 ): use calendar and choose today's date End Date ( 31 DEC 2018 ): use calendar and choose user's availability date Authentication Type ( External ): make sure 'External' is checked To authorise the created external user record (you must authorise the record before it can be live into the database): Logout and login with a different user Go to Admin Menu > External User Administration > Authorise Online Banking Access > Authorise Channel User and click on the authorise button At this moment Record status appears as 'INAU' = unauthorised > Commit the record. Activate External User You can log back with previous user Go to Admin Menu > External User Administration > Create/Manage Online Banking Access > Manage External Users a search screen is displayed > enter Customer Id or ExternalUser Id and click Find button from scroll button on the right, select Modify Channel User > press Enter button change status from ' Initiated ' into ' Active ' Commit the deal Authorize the External User as mentioned above External user is activated You can now insert User ID and password 123456 to login to Retail application ."
  },
  "main/uxp-setup.html": {
    "href": "main/uxp-setup.html",
    "title": "UXP Getting Started Guide",
    "keywords": "Install User Experience Platform Please download from your MyApps section the Temenos User Experience Platform product. Create a folder where Temenos UXP should be installed on your computer. Note 💡 In order to avoid Windows problems, please use short paths. Example : For the purpose of this document and a better understanding, a folder called E6210 is created directly on D partition. Unzip Temenos UXP folder and launch UXP installation by double clicking on appropriate installation file. Example: TemenosUXP6_2_1__0_x64Windows.exe UXP installation starts ( InstallAnywhere is preparing to install... ) Click next to pass through installation steps. On License Agreement, accept Terms and Agreements. On Install Set, you can also check 'Hybrid Master' and 'Hybrid Android Slave' if you need it (in this case, Install Set will automatically change to 'Custom') On Install Folder, do not leave default path . Instead, select the folder you created before for UXP installation ( Example: E6210 ) Choose UXP shortcut location. ( Example: \"In a new Program Group\" ) Choose a JDK version (select appropriate path where Java Development Kit is installed) Set the address and the port: Hybrid Master address: localhost Hybrid Master port: 9022 See all information in pre-installation summary and press install button. Wait for installation to be completed. Note Please send license email request, attaching InstallKey.txt present in IDE folder, to marketplace@temenos.com . You will receive one license file, which must be placed in the same folder (IDE). Install TemenosUpdate.zip file a. Unzip the TemenosUXP6_2_1__0Release_TemenosUpdate.zip archive. b. Copy the jars from the above archive into the lib folder of Temenos UXP ( in current case E6210 - in your case, the folder you created to install Temenos UXP ). c. Update Developer.lax file ( from IDE folder ) in order to add the jars copied in above step. Click right on developer.lax file, go to \"LAX.CLASS.PATH=\" and add at the end the new jars as follows: ;../lib/cal10n-api-0.7.4.jar;../lib/commons-codec-1.10.jar;../lib/commons-lang3-3.5.jar;../lib/core4j-0.5.jar;../lib/ecTemenos.jar;../lib/ecTemenosIncubator.jar;../lib/jackson-dataformat-yaml-2.8.9.jar;../lib/jdom2-2.0.6.jar;../lib/joda-time-2.1.jar;../lib/odata4j-core.jar;../lib/odata4j-jersey.jar;../lib/slf4j-ext-1.6.3.jar;../lib/snakeyaml-1.17.jar;../lib/swagger-annotations-1.5.17.jar;../lib/swagger-core-1.5.17.jar;../lib/swagger-models-1.5.17.jar;../lib/swagger-parser-1.0.33.jar Note Based on the version you're using, you might have other jars to copy. Install CustomUpdate.zip file a. Unzip the TemenosUXP6_2_1__0Release_CustomUpdate.zip archive. b. Copy the jars from the above archive into the lib folder of Temenos UXP. c. Update Developer.lax file ( from IDE folder ) in order to add the jars copied in above step. See information from previous step. ;../lib/ecBuilder.jar;../lib/ecConnectIncubator.jar;../lib/ecCustom.jar;../lib/org-netbeans-lib-cvsclient.jar;../lib/xpp3_min-1.1.4c.jar;../lib/xstream-1.4.9.jar Note Based on the version you're using, you might have other jars to copy. Update the java extra parameters in Developer.lax file ( from IDE folder ): LAX.NL.JAVA.OPTION.ADDITIONAL Please add below line: -Dconnect.options.expressionEvaluatorClass=com.acquire.util.js.FESIExpressionEvaluator In case out of memory issues are encoutered ensure you increase the memory value as per your needs. Import Retail package in UXP Please download from your MyApps section the Temenos UXP Retail Developer Package product. Unzip the Retail_Developer_Package_xx.zip package, unzip the TCIB2.0_Retail_Developer_Release_xx.zip file and then copy the TCIB folder somewhere on your machine. ( Example: Your Folder > RTE > Projects ) Go and update Retail.dsf file (which is found in \\TCIB\\Solutions\\Retail\\ location) in order to replace \" http://localhost:9089 \" with your own correspondent url. (There are 5 places to be replaced.) Open the Developer.exe file ( from IDE folder ) Go to File > Open Select the location of Retail.ipf file (it should be something like \\TCIB\\Solutions\\Retail\\ ) A warning will appear > Accept language setup Open Process Builder : On top bar, click on \"No Perspective\" and select \"Process Builder\" (this will open UXP editors) Set file location and server connection On top bar, go to Tools > Options Select the appropriate file locations: Select the appropriate server details: Server Address: your own url Server Port: your port Close and open again the Developer.exe file ( from IDE folder ). Note The TCMB installation should be done in the same manner explained above."
  },
  "marketplace/business.html": {
    "href": "marketplace/business.html",
    "title": "",
    "keywords": ""
  },
  "marketplace/certification.html": {
    "href": "marketplace/certification.html",
    "title": "Temenos MarketPlace Certification Guide",
    "keywords": "Product Certification The submission of a Product is governed by the Temenos Marketplace Certification and Provider Agreement, this document is intended to assist with gaining certification for a product and does not amend or vary the terms of the Temenos Marketplace Certification and Provider Agreement. Submission and review process Temenos only publishes products and solutions developed by its Temenos members onto the Temenos MarketPlace (the “Products”) which Temenos has certified in accordance with these Guidelines. The aim is to certify that the Product can be demonstrated with the Temenos core banking system ‘sandbox’ and is suitable for the publication. Certification Flow Certification tiers During the course of your submission to the Temenos MarketPlace, you will be asked to choose a certification tier based on the Product or software service to be certified. You will need choose tier 1 - 4 in the certification and provider order form - covering subscription based software services (SaaS), Widgets, Business Apps, Fintech products or Enterprise product. At Temenos, we tailor the certification process to the type of Product submitted to make allowances for the functional and non-functional characteristics of each Product type. Temenos requests all Temenos MarketPlace providers to review their Product against the following guidance to help choose the correct Product type and determine any applicable Certification fees. The Temenos MarketPlace does not accept, publish or certify non-software based services. Tier 1 Software as a Service A Software as a Service item is a software offering that runs standalone from the Temenos platform. This item is not reviewed against any of the non-functional criteria i.e. Security, performance, data sharing, or supported interfaces. Widgets A ‘widget’ is a user interface component that interacts with the User experience platform design and runtime environment. The Product conforms to the widget interface and packaging. See Supported interfaces -> User Experience Platform Widget Some examples of this kind of products: Login widget Feed widget Social media widget Tier 2 Business Apps A ‘business app’ includes simple web applications accessed over http via a web browser, mobile phone applications, add-on apps for professional users, productised APIs and integration flows, and in general terms any software product designed for a single purpose that do not require any other resources besides the Temenos Sandbox. Some examples of this kind of products : Chatbot Accessing of banking API - i.e. Customer Information Account Balance Funds Transfer BrowserWeb Toolbar Tier 3 Fintech product A ‘fintech product’ integrates with the Temenos platform through messages and APIs to provide a comprehensive solution to financial services institutions. This integration will often utilise more than one endpoint or message type and in general terms will require resources in addition to those provided by the Temenos Sandbox. Some examples of this kind of products : Banking API developed or modified by provider and needs to deploy in Temenos Sandbox. Events & Message Driven Beans packages needs to deploy in Temenos Sandbox. Tier 4 Enterprise product An ‘enterprise product’ integrates with the Temenos platform through Versions, Enquiries, or other Temenos Core Banking configuration to provide a comprehensive solution to financial services institutions. This integration will often utilise design studio packages and customise the Temenos Sandbox. Some examples of this kind of products : Plugins that deploy new Temenos APIs. Add-ons such as an those that modify the class path Design Studio packages installation in Temenos Sandbox. Preparing your Product for review During the review, process the Products are put through a series of manual and automated checks. Temenos advises all Temenos MarketPlace product providers to review their Products against the following criteria before submission. Criteria Notes Software Licensing The Products MUST include a license notice and MUST NOT make any attempt to circumvent Temenos software licensing restrictions – see Assignment and reporting of the MarketPlace Provider Product ID section Open Source Software Products that make use of open source or freeware libraries MUST adhere to all applicable license restrictions. Security and standards The Products SHOULD be secure against common vulnerabilities and SHOULD adopt appropriate Software Standards – see Software Coding Standards section. The Product must not contain any malware or viruses. Performance Products SHOULD adopt an architecture that ensures the solution will scale – see Temenos Performance Recommendations section Upgradable The Products MUST only use supported Temenos interfaces – see supported interfaces section Content The Products MUST NOT include any profanities or otherwise offensive or illegal content. The Product must not suggest or infer that Temenos is the source of supplier of the Product. The Product must not use protected third party content such as trademarks, copyrights or patents, without express written approval. Data collection The Products MUST NOT be used to collect or share any user data to the software publisher – see Data sharing section Documentation The Products SHOULD include appropriate implementation and configuration guides. Certification results Temenos will generally return a result to the MarketPlace provider within 15 working days and no longer than 90 days. A product could of course fail the review and whilst we aim to work with you to see your product approved and explain the reasons, we reserve the right to reject submissions if the product is not fit for publication. Once approved, the product marketing plan can be executed together and Temenos will be responsible for the final publishing action of the Product and supporting marketing material to the Temenos MarketPlace. The MarketPlace provider can then submit edits and modifications to the marketing material to be reviewed and re-published by Temenos."
  },
  "marketplace/dedicated_sandbox.html": {
    "href": "marketplace/dedicated_sandbox.html",
    "title": "Dedicated Sandbox",
    "keywords": "Dedicated Sandbox A dedicated Sandbox is a Temenos Sandbox that will be available only for a single provider and where the provider can do following operations: Create design studio package and upload to T24 using GitLab Create new API package and upload to T24 using GitLab Deploying other localjars using Gitlab Each provider will be able to access his dedicated sandbox by going to his MyApps page in MarketPlace. When he will click on the sandbox product in MarketPlace he will be redirected to his organization link address. The provider will receive an email with the user and password required to connect to this organization link. Here the provider will have access to one T24 dedicated sandbox. The Environment page contains 3 important sections: T24 Release section that gives access to the T24 area through browser. Database section that indicates the status of the database and gives access to a copy of the database of the T24 area. Repository section that gives access to the gitlab repository that allows providers to deploy their packages, plugins, localjar files, etc. T24 Release section - available actions By clicking on “ GO TO APPLICATION ”, a new tab containing the T24 BrowserWeb URL is opened in browser. Users and passwords to be used here will be received on email. By clicking on “ MONITOR APPLICATION ” the TAFJEE Servlets page will be opened in a new browser tab and from here: Diagnostic section: get details about your TAFJ environment, get routine compilation details, etc. Execution section: run services, etc. Troubleshooting section: access log files, commo files, etc. By clicking on \" Export Environment \" button a zip file will be generated on the sftp.temenos.cloud portal and this zip file will contain information about: the content of the default folder of T24; what are all jar files deployed in T24 sandbox and the correspondent module.xml file; what are the war file deployed in T24 sandbox and the jboss server log. Increase instances button allows provider to increase the number of T24 VMs in cloud in order to improve performance. Decrease instances button allows provider to decrease the number of T24 VMs in cloud that were previously increased. Rebuild application button allows providers to recreate their environment. In case a provider deploys something into the gitlab (a package or a plugin or anything else) and he decides that he wants to undo that particular package it will not be enough just to remove it from gitlab. The package remains installed into the T24 area until a rebuild is done that is actually deleting current environment, creating a new one and installing there whatever is present at that time into the gitlab repository. Start application button allows provider to start the jboss. Stop application button allows provider to stop the jboss. Database section - available actions By clicking on \" Export database \" button a zip file will be generated in the sftp.cloud.temenos portal and this zip file will contain the database of the sandbox. Note: This database can be used as a backup that can be deployed later on into the sandbox or that can be given to other users to deploy it into their own area and do some testing/development or it can be used to do some changes into it and then to deploy it into the sandbox, etc. Repository section This section displays the gitlab repository correspondent to your T24 sandbox. In order to be able to deploy changes into the sandbox please: Generate a SSH key and save it Clone the gitlab repository Useful information Core Banking available APIs that can be easily accessed by using link address https://[your sandbox address]/Prospect-iris/Prospect.svc/GB0010001/ and the users and passwords that where communicated via email for accessing the T24 BrowserWeb. Internet & Mobile Banking available APIs that can be easily accessed by using link address: https://[your sandbox address]/Channels-iris/Channels.svc/GB0010001/ and the users and passwords that where communicated via email for accessing Retail. For guidance in how to investigate if whatever was committed in gitlab was done correctly please check instructions mentioned here ."
  },
  "marketplace/faq.html": {
    "href": "marketplace/faq.html",
    "title": "FAQ",
    "keywords": "General What is MarketPlace? Developed as a self-service, online digital store, MarketPlace is a platform that connects fintech providers with some of the worlds largest financial institutions focused on innovation. MarketPlace presents an unprecedented business opportunity to distribute integrated third-party products and services to the Temenos customer base. What sort of solutions are available on MarketPlace? The products available include widgets, apps, integrations and solutions, all of which can add increased functionality and significant business value to existing solutions based on Temenos products. How will MarketPlace help me as a FinTech? It gives you the opportunity to become a world leading FinTech solution provider by bringing innovations to market, showcasing your solutions worldwide, connecting with financial institutions and generating additional revenue. How can I access MarketPlace? Simply signup here , for free, as a MarketPlace user. How can I log in to MarketPlace? Once you have activated your account and set up your password, click on login from the MarketPlace website and enter your email and password. How can I become a MarketPlace provider? Simply fill out this form to join MarketPlace as a fintech solutions provider. Can I share my MarketPlace account with colleagues? When your colleagues sign up under the same email domain name, they will be added to your organisation, or invite them to join once you are a member. How do I obtain my username and password information once I’ve joined? You will receive an email in the inbox of the email address you have provided. This email contains a link to activate your account. At this stage, you will be able to set up your password (your username is your email address). Support How can I get in touch with technical/ non-technical support? Get in touch with us via email at marketplace@temenos.com . Pricing Is MarketPlace free? It is free to join as a MarketPlace user . To become a MarketPlace as a fintech solutions provider, you need to provide some registration information. Technical How do I start developing my Product? All development is done in the expected way, via the UXP IDE. There is an option in the IDE to mark your project as a “Hybrid Project”. Once setup, deploying iterations of your product is done through a Jenkins master and slave, which is included as an option during the installation of UXP. The actual build process is kicked off through the UXP deployment IDE, where you can set up profiles for the different devices you want to target. The Chrome browser is great for this, as you can view the site on Chrome on your phone using the computer’s i.p. address and if it is hooked up to your computer, you can use the Chrome developer tool on your computer to analyse/debug the page. For more information, visit our Quickstart page"
  },
  "marketplace/gotomarket.html": {
    "href": "marketplace/gotomarket.html",
    "title": "Go to Market",
    "keywords": "THIS PAGE IS COMING SOON!"
  },
  "marketplace/index.html": {
    "href": "marketplace/index.html",
    "title": "How does it help?",
    "keywords": "Developed as a self-service, online digital store, MarketPlace provides a showcase platform for both Temenos and its wider community of fintech providers to help financial institutions: Experience the latest innovations in financial services technology through its ever-growing range of products. Deploy them directly into their business solutions quickly and securely. The products available include widgets, apps, integrations and solutions, all of which can add increased functionality and significant business value to existing solutions based on Temenos products. How does it help? By connecting fintech providers and financial institutions MarketPlace helps: financial institutions explore ways in which they can differentiate themselves from their competitors, demonstrate innovation, increase customer insight, improve execution and provide added value at each stage of the customer lifecycle through the user experience and in the quality and relevance of products and services provided gives fintech providers the opportunity to become world leading fintech solution providers by bringing innovations to market, showcasing their solutions worldwide, connecting with financial institutions and generating additional revenue. Who can join? Anyone can join MarketPlace as a user to learn more about the available solutions, watch demo videos and engage with the products. To join MarketPlace as a provider, either as an individual, a company or an existing Temenos partner you will need to register . The solutions available include UI widgets and components, API bundles, integration packages and packaged apps, all of which can add increased functionality and significant business value to existing solutions based on Temenos products. All products published are thoroughly checked and tested by Temenos and once approved, are accessible to all MarketPlace users, depending on the fulfilment criteria or product editions available. What are the benefits of becoming a MarketPlace Provider? Work hand-in-hand with the market leading software provider Temenos partners with over 2,000 banks and other financial institutions, serving more than 500 million banking users in 150 countries worldwide, to transform their businesses and stay ahead of a changing marketplace. Access a dedicated support environment Your developers will get access to a complete set of online documentation to build the Apps as well as a cloud sandbox environment for development and testing prior to publishing. Connect with other FinTech innovators MarketPlace is a community where its providers and customers can meet, give feedback on the Apps and exchange ideas to develop the latest innovations in financial services technology. Generate additional revenue Receive a dividend every time a financial organisation purchases one of your Apps from MarketPlace. Scale your business We help market your products: your Products, all searchable by Google, are promoted through our virtual shop window and through marketing and sales activities to existing customers and prospects."
  },
  "marketplace/innovation-jams.html": {
    "href": "marketplace/innovation-jams.html",
    "title": "Innovation Jams",
    "keywords": "Temenos Innovation Jam The 2017 Innovation Jam was a great success. Now we are launching a series of global jams in 2018 to find the best fintech solutions available and help make banking better by cutting development costs and speed up the pace of innovation. Banks’ main challenge today is not the innovative fintechs, but innovation itself. Never has technology played a more important role in banking. It is transforming the way services and products are developed and delivered. It is knocking down barriers to entry, increasing the competition and putting margins under pressure. It is opening up new opportunities and important new revenue streams. While fintechs are enjoying plenty of publicity, they in fact still make up only a tiny proportion of the total banking sector. With banks focusing on innovation, and increasing their budgets for innovation, we are seeing a rise in banks investing in fintech – either by financing incubators, creating their own fintech start-ups, partnering with fintechs, launching their own subsidiaries or by acquisition. Fintech companies can certainly benefit from the investment – there is no doubt that there is a lot of gain for both sides, from collaborating together. A big hurdle is the cost of coming up with workable ideas. But perhaps the biggest problem is speed. Being first to market is critical but development and implementation is notoriously tough and reaping the benefits at the end also needs a certain amount of good fortune: even experienced venture capitalists typically expect only three out of 10 investments to succeed. There are plenty of good ideas, but before any can be successful, they need refinement. They need real customers operating a real banking experience. Any technology provider can apply to participate, size doesn’t matter. In particular, we are looking for technology that enhances the customer experience; that facilitates digital marketing; that automates transactions and improves efficiency; as well as innovative new products. The jams will give everyone the opportunity to experiment with real data, real systems and real problems. Potential customers will be able to see the latest developments that will get them ahead of the competition, see how it interacts with their existing IT and how it addresses their problems, while providers will get to see how their software shapes up in real life. Ultimately, we hope the Innovation Jams will help banks and fintechs build collaborative relationships to identify winning solutions, cut procurement, implementation and development times and shorten what is an extremely long sales process for technology providers. That has got to be good for the fintechs, and it’s got to be good for banking."
  },
  "marketplace/interface.html": {
    "href": "marketplace/interface.html",
    "title": "Temenos Supported Interface",
    "keywords": "Interfaces Temenos provide following interfaces to integrate the Fintech products with Temenos Digital Banking Suites . Integration Services Note Temenos' Integration offering makes banks more agile, by enabling them to integrate systems much faster and more cost-efficiently, and to become more competitive by enabling near real-time, highly scalable, self-assisted and multi-channel banking 24/7. Use this interface for the T24 integration catalog, asynchronous transactions and runtime polling for events Event Designer – Publish per exit point Event Designer Project allows all the exit points to get published at once. This leads to an issue of republishing all the exit points that does not needs any republishing and updates the flow, leading to flows getting republished to T24 that need not to be republished. Allowing per exit point publish, provides the flexibility of publishing the selected and required exit points. Event Packager This event packager allows the flow and exit points to be packaged and use in automated packaging or integration solutions. It’s only possible to publish integration flows from the event designer which is not useful in an automated packaging or integration solutions. It’s required to be able to sync the integration projects from the source control and package the integration flows to be installable in a T24 environment. Integration Service Integration service deliver the event to the specific queue if configured otherwise events will be delivered to default queue. Message Transformation Integration Framework allows custom style sheet to be applied to generate a event XML in a custom format when using Integration Service. Interaction Services Note Open up your banking platform to accelerate the pace of innovation around your services. Temenos' Interaction offering accelerates the pace of innovation around banks' services, by enabling them to easily expose their services to innovation partners and to any user-interface (UI). It also lets the bank create innovative combined services and efficiently manage UIs across multiple channels/devices/roles/languages. Use this interface to develop and integrate your solution with Core Banking and Mobile & Internet Banking APIs. Interaction Framework provides a unique platform for creating and consuming banking/non-banking services. These services sits in between user agents & banking/non banking services. Mashup capability & OData resources. Generate metadata from Temenos Developer Tools Widgets Widgets are interaction element in graphical user interface. It could be media element, social media plug-ins, feed reader, stock alert ticker, exchange rate and other financial widgets. These widgets must be developed by using Temenos User Experience Platform (Temenos UXP) ."
  },
  "marketplace/join.html": {
    "href": "marketplace/join.html",
    "title": "Provider Registration",
    "keywords": "<!-- ---------------------------------------------------------------------- --> <!-- Already registered? Sign in **here**. --> <!-- ---------------------------------------------------------------------- --> <!-- NOTE: Please add the following <META> element to your page <HEAD>. --> <!-- If necessary, please modify the charset parameter to specify the --> <!-- character set of your HTML page. --> <!-- ---------------------------------------------------------------------- --> <!-- ---------------------------------------------------------------------- --> <!-- NOTE: Please add the following <FORM> element to your page. --> <!-- ---------------------------------------------------------------------- --> <!-- ---------------------------------------------------------------------- --> <!-- NOTE: These fields are optional debugging elements. Please uncomment --> <!-- these lines if you wish to test in debug mode. --> <!-- <input type=\"hidden\" name=\"debug\" value=1> --> <!-- <input type=\"hidden\" name=\"debugEmail\" value=\"ineagoe@temenos.com\"> --> <!-- ---------------------------------------------------------------------- --> First Name Last Name Job Title e.g. Developer Contact Number Business Phone Number Address Street Please insert company's address City Please insert company's address State/ Province Please insert company's address Zip Please insert company's address Country Afghanistan Aland Islands Albania Algeria American Samoa Andorra Angola Anguilla Antarctica Antigua and Barbuda Argentina Armenia Aruba Australia Austria Azerbaijan Bahamas Bahrain Bangladesh Barbados Belarus Belgium Belize Benin Bermuda Bhutan Bolivia Bonaire Bosnia and Herzegovina Botswana Bouvet Island Brazil British Indian Ocean Territory Brunei Darussalam Bulgaria Burkina Faso Burundi Cambodia Cameroon Canada Cape Verde Cayman Islands Central African Republic Chad Chile China Christmas Island Cocos (keeling) Islands Colombia Comoros Congo Congo, The Democratic Republic of The Cook Islands Costa Rica Cote D'ivoire Croatia Cuba Curacao Cyprus Czech Republic Denmark Djibouti Dominica Dominican Republic Ecuador Egypt El Salvador Equatorial Guinea Eritrea Estonia Ethiopia Falkland Islands (malvinas) Faroe Islands Fiji Finland France French Guiana French Polynesia French Southern Territories Gabon Gambia Georgia Germany Ghana Gibraltar Greece Greenland Grenada Guadeloupe Guam Guatemala Guernsey Guinea Guinea-Bissau Guyana Haiti Heard Island and Mcdonald Islands Holy See (vatican City State) Honduras Hong Kong Hungary Iceland India Indonesia Iran Iraq Ireland Isle of Man Israel Italy Jamaica Japan Jersey Jordan Kazakhstan Kenya Kiribati Korea, Democratic People's Republic of Korea, Republic of Kosovo Kuwait Kyrgyzstan Lao People's Democratic Republic Latvia Lebanon Lesotho Liberia Libya Liechtenstein Lithuania Luxembourg Macao Macedonia, The Former Yugoslav Republic of Madagascar Malawi Malaysia Maldives Mali Malta Marshall Islands Martinique Mauritania Mauritius Mayotte Mexico Micronesia, Federated States of Moldova, Republic of Monaco Mongolia Montenegro Montserrat Morocco Mozambique Myanmar Namibia Nauru Nepal Netherlands Netherlands Antilles New Caledonia New Zealand Nicaragua Niger Nigeria Niue Norfolk Island Northern Mariana Islands Norway Oman Pakistan Palau Palestine Panama Papua New Guinea Paraguay Peru Philippines Pitcairn Poland Portugal Puerto Rico Qatar Reunion Romania Russian Federation Rwanda Saint Barthélemy Saint Helena Saint Kitts and Nevis Saint Lucia Saint Martin (French Part) Saint Pierre and Miquelon Saint Vincent and The Grenadines Samoa San Marino Sao Tome and Principe Saudi Arabia Senegal Serbia Seychelles Sierra Leone Singapore Sint Maartin (Dutch Part) Slovakia Slovenia Solomon Islands Somalia South Africa South Georgia and The South Sandwich Islands South Sudan Spain Sri Lanka Sudan Suriname Svalbard and Jan Mayen Swaziland Sweden Switzerland Syrian Arab Republic Taiwan Tajikistan Tanzania, United Republic of Thailand Timor-Leste Togo Tokelau Tonga Trinidad and Tobago Tunisia Turkey Turkmenistan Turks and Caicos Islands Tuvalu Uganda Ukraine United Arab Emirates United Kingdom United States Minor Outlying Islands United States of America Uruguay Uzbekistan Vanuatu Venezuela Vietnam Virgin Islands, British Virgin Islands, U.S. Wallis and Futuna Western Sahara Yemen Zambia Zimbabwe Email address Your Business Email Address Business Email Address Company's Email Address Company Info Full Corporate Name Country of Incorporation Company's Headquarter Company and Apps Please tell us about your company and the type of widgets, components, APIs or integrations you might submit to the MarketPlace Business Function Business Development Compliance Finance Marketing Operations Technology Legal To select/ deselect multiple items, keep pressed CTRL key Business Function - Other Primary Market Retail Corporate Insurance Islamic Finance Microfinance & Community Private Wealth Universal Credit Unions Treasury & Capital Market Transaction & Payments To select/ deselect multiple items, keep pressed CTRL key Primary Market - Other What is the solution value proposition? What differentiates this solution? Is there a compelling reason to buy the product now or in a specific time frame? What is the average selling price and average sales cycle? Which banks use your solution today? I have been referred to join the MarketPlace by: Select Temenos employee Temenos customer Not applicable Please specify the name of the person/ organization that you've been referred by: If this is not applicable, please mark as N/A I accept the Temenos MarketPlace Terms and Conditions of use </form> <!-- ---------------------------------------------------------------------- --> <!-- <div class=\"checkbox\"> <label><input type=\"checkbox\">Please keep me up-to-date with an occasional email form Temenos MarketPlace ONLY.</label> </div> --> <!-- ---------------------------------------------------------------------- -->"
  },
  "marketplace/marketing.html": {
    "href": "marketplace/marketing.html",
    "title": "",
    "keywords": ""
  },
  "marketplace/marketplace-product-setup-guide.html": {
    "href": "marketplace/marketplace-product-setup-guide.html",
    "title": "MarketPlace Product Setup Guide",
    "keywords": "Where will your product be featured? To showcase your product or service as effectively as possible, you should visualise your MarketPlace product page as an extension of your existing product marketing. Your product will be highly visible to our customers and prospects as it will appear on a number of public pages: Homepage: The \"All Applications\" listing page: On its own product profile page: Building a Product Page Received your welcome email? To start developing your own product page, you will need to have been granted Developer access by the MarketPlace Team. This is carried out within 24hrs of the contract being signed, with the named contact receiving a welcome email containing a selection of useful tools and links. Log into MarketPlace: Log in to Temenos MarketPlace by either clicking the link in the email or with the username (email address) and password you selected when you signed up. Creating your first product: Process: Create your product on the MarketPlace Configure your product page (adding features, benefits and other sales collateral) When 100% complete, click the Publish button and send it to the MarketPlace team for review. Await the results and coordinate your go to market activities with Temenos Your product page is live on the MarketPlace Clicking on the + Add Products button will take you to the Create New Product screen. Defining your product What type of user experience does your product or service offer? Do you offer an individually licensed downloadable Temenos core plug-in, or public access to an on-line dashboard containing model data? Your product page can handle multiple product types. Product Page Types: There are two types of product page available. The Web App will point a user to a web link, via a shortcut created in the customer 'My Apps' page. The Download Product Type will immediately offer a downloadable file, which a user can run when on their local machine. The 'Web App (manual set up)' product also offers access to a web link, but access is given via a manual process you administer. We recommend using a 'Web App (manual set up)' product page if you are planning to launch with a simple product page for lead generation activities, as the 'Free Trial' functionality can be switched off at publication stage. Integration Type: The Integration type effects how customers can interact with your product on the page. Temenos will not publish 'Referral Only' product pages, so we recommend selecting the Full Integration. Note With a 'Web App (manual set up)' product page, selecting 'Full Integration' will create a series of Integration Tests you will need to complete to move your product page from 0 - 100% completion - we will explain these below in the Integration Test section. Usage Model: More than one MarketPlace customer request a trial of your product from the same organisation, with a Single User licence the first customer will need to re-assign the licence to the next product owner (customer). We recommend selecting Multiple Users to ensure your product can have multiple consumers at the same organisation. Revenue Model: MarketPlace offers a range of Revenue Models to choose from. We recommend selecting 'Free' as both our Enterprise level sales are completed offline and to keep the product page build as simple as possible. Adding Collateral: Web App/Web App (manual set up) products: There are 2 configuration component steps (see image above): Create Marketing Profile Create Editions and Pricing To get the Product Page ready for publishing, you need to populate the various sections and sub-sections indicated in the box on the left-hand side of your product dashboard. These are split on 3 main sections: Profile & Branding Editions and Pricing Settings Note You may be wondering why Step 2 (Create Editions and Pricing) is complete. This is because we selected 'Free' as the Revenue Model in when creating the Product Page. This can be updated through self-service configuration at any stage. Warning Before getting started, please note after every change made to your product profile, you will need to navigate to the bottom of the page to select Save or Save and Preview to have your changes reflected. Profile & Branding: a) Listing info: The following screenshot gives you an overview of where the information you add to the Manage Listing Info page will appear on your product page and on the homepage/all applications pages so that you have a better understanding of the various sections. Homepage/all applications pages: Note For each number indicated, please check below \"How to complete the Product Listing Info page?\" Product page (Overview and Policies & Support tab): How to complete the Product Listing Info page? From the Product Dashboard , click on the Listing Info tab on the left-hand side. Please note that not all fields are mandatory but the more information you provide, the easier it is for banks and financial institutions to understand your solutions and decide to purchase it. The mandatory fields are indicated by a red asterix *. 1. Company name – Name of the product/application’s company. The Company name is displayed as the ‘Provider’ of the application, as seen in the ‘Details’ section of the product profile page. 2. Product name – Name of the product/application being sold, which will be displayed on the application listing page and the product profile page. 3. Command line Name - A command line friendly name that can be associated with your product. This command line is not visible in the UI but is visible via product APIs. It can be the same as your 5 word description/tagline but it will be displayed on the product profile page only. 4. 5 word description - A brief description/tagline of your product which is made visible on the application listing page of the marketplace. This does not have a word count restriction but a 50 character limit. We suggest you make this a call to action e.g. “Engage with your customers through video”. 5. Brief overview - A short description of your product (~250 Characters or two sentences) that will be displayed below the 5 word description on the applications listing page. The “Learn More” link will take the user to the Product Profile page. 6. Link to your product’s website – This is the link customers will be taken to when they click “Buy” from the Temenos MarketPlace. 7. Starting Price - Configure what price will be displayed on the /listing page of the marketplace. If ‘Automatic’ is selected, the price of the Edition that is marked “Show as Primary Pricing Plan” will be selected. If ‘Manual’ is selected, you will need to enter the Recurring Price per unit/user/etc. as well as the frequency of this cost in the additional fields that will appear. 8. Language - The default language for the product profile. 9. Link to Privacy Policy - URL for the product’s privacy policy. Displayed on the ‘Policies & Support’ tab of the product profile page. If enabled, this will be what the customer must read and agree to before purchasing. 10. Link to Terms & Conditions - URL for the product’s Terms & Conditions. Displayed on the ‘Policies & Support’ tab of the product profile page. If enabled, this will be what the customer must read and agree to before purchasing. 11. App Listing Logo – The product logo will be displayed next to the Product Name, 5 word description and Brief overview on the applications listing page. 12. App Profile Page – The product logo will be displayed next to the Product Name and Command line name on the product profile page. 13. Category – There are currently 5 categories you can select (and subsequent sub-categories) - Business intelligence; Digital engagement; Infrastructure and operations; Security and fraud; Technology – which will be used by financial institutions to restrict their search. You can add multiple categories to your product by clicking on the + Add another category button. We suggest you set two categories – Technology -> [your type of product] and the most appropriate other category (e.g. Digital Engagement -> User experience). If you need a new category or sub-category created, your Channel Administrator can do so in a few simple steps: Click Manage > Channel Click Products from the navigation Click Product Groups on the left hand navigation From the Product Groups page, you can add Categories and Attributes as options for your developers and Channel Admin's to select If you have any questions, please let us know: marketplace@temenos.com. Warning Please make sure that you click on Save to save your listing info details. b) Profile: The following screenshot gives you an overview of where the information you add to the Profile page will appear on your product page so that you have a better understanding of the various sections. How to complete the Profile page? 1. Splash Title - Similar to the 5-word Description field on the listing page, this field is designed to be a compact sentence that sells the product. 2. Splash Description - Short paragraph used to explain what the product is. 3. Overview Image - This is the largest image on the Product’s homepage (350x315px). It can be an image representing the concept of the product or a screenshot of the product itself. 4. Embedded Video URL - A Vimeo or Youtube URL that will open an embedded player when a marketplace user clicks on “Watch Demo”. 5. Documentation Link - If a URL is added, the “Read Documentation” link will appear on the right hand side of the product page and forward the customer to the URL. 6. Screenshot – It allows you to upload screenshots of the product that will be viewable by clicking the “View Screenshots” link on the right hand side of the product profile. If no screenshots are uploaded, the link will not appear. 7. Benefits - These will appear on the Product Profile’s homepage and appear at the top of the Features & Benefits section. Benefits differ from features in that benefits should highlight how this product will affect the customer. Example: A security program could highlight a benefit for their program as 247 security without slowing down your computer. A feature would be their proprietary Active Threat Detection technology. You need to indicate a short title and a brief description of each benefit. You can add several benefits to your product by clicking on the + Add another benefit button. 8. Features - See Product Profile - Features Page. Please make sure that you click on Save to save your profile details. Features The following screenshot gives you an overview of where the information you add to the Features page will appear on your product page so that you have a better understanding of the various sections. Some information about the features of your product will appear on the Overview tab of your product page. More detailed information will appear on the dedicated Features tab of your product page. Product page (Overview): Note If no features are added, the Features tab will not appear on the product page. Adding Features is optional, but recommended. Caution When creating new feature, selecting “Save and Preview” does not save feature and pushes to blank page. Select ‘Save and Add Another’ to save feature. Under review by AppDirect Product Team. How to complete the Feature page? 1. Title - Serves as the title for your feature and as a navigation and search item. The title should describe the feature completely without any supporting text, i.e. \"Invoice Creation\" 2. Slogan - Provides a high level catchy description of your feature. 3. Description - Appears under the feature slogan in the feature page and provides a deeper description of your feature. On the Overview tab of your product page, users will only be able to see the beginning of the description. A Learn More link will allow them to see the full description of the Features tab. 4. Position - Allows you to order your features in the left navigation bar. A. Hide on Overview tab - Allows you to either include or exclude features in the \"Features & Benefits\" section of the overview page. 5. Image or screenshot – Enables you to give a more precise view of a particular feature. B. Characteristic position - Allows you to order how your characteristics appear. 6. Characteristic title – Lets you describe a characteristic of your feature. 7. Characteristic highlight - Allows you to share highlights on a feature characteristic. You can add several characteristics to your product by clicking on the + Add another characteristic button. Please make sure that you click on Save to save each feature details. If at any point, you want to get rid of one of the features, simply click on Delete Feature . c) Customers & Media: How to complete the Customers and Media page? Note Please let the Temenos GTM Team know any Customers you would like to feature in this section by sending a HQ logo and the FI name to your Temenos Account Manager. 1. Companies Using Your App - Add your customers’ logos (up to 10) in the product profile. 2. Articles & Reviews - Include links to articles or reviews of your product that have appeared in top publications. You can add several articles and reviews to your product by clicking on the + Add another media source button. Please make sure that you click on Save to save your customers and media page details. d) Support: The following screenshot gives you an overview of where the information you add to the Support page will appear on your product page so that you have a better understanding of the various sections. How to complete the Manage Support Information page? The support information will appear on the Policies & Support tab of your product page. 1. Support phone number – You can provide a phone number that a customer can use to reach you for support needs. 2. Support email address – You need to provide an email address that a customer can use to reach you for support needs. 3. Knowledge base/Help center URL – You can provide a knowledge base URL that a customer can use to find answers for their support questions. 4. Support details - You can provide any other details around support for your application such as support hours. Please make sure that you click on Save to save your support information details. e) Resources: Upload training or informational resources to be made available to the end-customer through the Product Profile Resources tab. How to complete the Resources page? 1. Name – Name of the PDF document you are presenting. 2. Document Link – You can either upload your PDF on to the store or include a link to where the PDF is hosted. 3. Visibility – PDF only visible to resellers. You can add several PDF documents of your product by clicking on the + Add PDF Document button. Please note that you can upload your company profile as a PDF document in this section. 4. Scribd Documents – Link documents from your Scribd account. Documents from Scribd will be embedded directly into your product profile. You can find the Scribd Document ID and Key in your Scribd embed code or in the \"WordPress\" embed option in the Scribd embed dialog. All three fields below are required for embedding a Scribd document. You can add several Scribd documents of your product by clicking on the + Add Scribd Document button. 5. Name – Name of the YouTube or Vimeo video of your product. 6. YouTube or Vimeo link – Link of the YouTube or Vimeo video of your product. 7. Description – Brief description of the YouTube or Vimeo video of your product. 8. Visibility - Video only visible to resellers. You can add several videos of your product by clicking on the + Add another video button. Please make sure that you click on Save to save your resources information details. 2) Editions and Pricing: Please liaise with Temenos over this section - marketplace@temenos.com. 3) Settings: Please liaise with Temenos over this section - marketplace@temenos.com. ii) Download products: Once you’ve clicked on Create Product to create your Download product, you will be brought straight away to the to the Manage Listing Info page. (1) Listing Info: The following screenshot gives you an overview of where the information you add to the Manage Listing Info page will appear on your product page and on the homepage/all applications pages so that you have a better understanding of the various sections. Homepage/all applications pages: Product page: How to complete the Manage Listing Info page? Please note that not all fields are mandatory but the more information you provide, the easier it is for banks and financial institutions to understand your solutions and decide to purchase it. The mandatory fields are indicated by a red asterix *. 1. Company name – Name of the product/application’s company. The Company name is displayed as the ‘Provider’ of the application, as seen in the ‘Details’ section of the product profile page. 2. Product name – This is the name of the product/application being sold, which will be displayed on the application listing page and the product profile page. 3. 5 word description - A brief description/tagline of your product which is made visible on the application listing page of the marketplace. This does not have a word count restriction but a 50 character limit. We suggest you make this a call to action e.g. “Engage with your customers through video” 4. Brief overview - A short description of your product (~250 Characters or two sentences) that will be displayed below the 5 word description on the applications listing page. The “Learn More” link will take the user to the Product Profile page. 5. Starting Price - Configure what price will be displayed on the /listing page of the marketplace. If ‘Automatic’ is selected, the price of the Edition that is marked “Show as Primary Pricing Plan” will be selected. If ‘Manual’ is selected, you will need to enter the Recurring Price per unit/user/etc. as well as the frequency of this cost in the additional fields that will appear. 6. Language - The default language for the product profile. 7. Link to Privacy Policy - URL for the product’s privacy policy. Displayed on the ‘Policies & Support’ tab of the product profile page. If enabled, this will be what the customer must read and agree to before purchasing. 8. Link to Terms & Conditions - URL for the product’s Terms & Conditions. Displayed on the ‘Policies & Support’ tab of the product profile page. If enabled, this will be what the customer must read and agree to before purchasing. 9. App Listing Logo – The product logo will be displayed next to the Product Name, 5 word description and Brief overview on the applications listing page. 10. App Profile Page – The product logo will be displayed next to the Product Name and Command line name on the product profile page. 11. Category – There are currently 5 categories you can select (and subsequent sub-categories) - Business intelligence; Digital engagement; Infrastructure and operations; Security and fraud; Technology – which will be used by financial institutions to restrict their search. You can add multiple categories to your product by clicking on the + Add another category button. We suggest you set two categories – Technology -> [your type of product] and the most appropriate other category (e.g. Digital Engagement -> User experience). If you need a new category or sub-category created, your Channel Administrator can do so in a few simple steps: Click Manage>Channel Click Products from the navigation Click Product Groups on the left hand navigation From the Product Groups page, you can add Categories and Attributes as options for your developers and Channel Admin's to select If you have any questions, please let us know: marketplace@temenos.com. Please make sure that you click on Save and Next to save your listing info details. This will take you to the Upload page. Upload: How to complete the Upload Product page? 1. Upload your product – This is the file of your product. It can be any file size or type. Please note that files over 150mb may experience upload delays. 2. Your Product’s GUID – GUID (or UUID) is an acronym for 'Globally Unique Identifier' (or 'Universally Unique Identifier'). It is a 128-bit integer number used to identify resources. Temenos MarketPlace will provide this for you, along with the certified product. 3. Your Product Version – This is a way to identify which version of your product is on Temenos MarketPlace. The version can be a simple number or a date. 4. Upload documentation - This is the file of your product documentation. It can be any file size or type. Please note that files over 150mb may experience upload delays. Please make sure that you click on Save and Next to save your listing info details. This will take you to the Profile page. Profile: The following screenshot gives you an overview of where the information you add to the Profile page will appear on your product page so that you have a better understanding of the various sections. How to complete the Profile page? 1. Overview Image - This is the largest image on the Product’s page (350x315px). It can be an image representing the concept of the product or a screenshot of the product itself. 2. Embedded Video URL - A Vimeo or Youtube URL that will open an embedded player when a marketplace user clicks on “Watch Demo”. 3. Screenshot – This allows you to upload screenshots of the product that will be viewable by clicking the “View Screenshots” link on the right hand side of the product profile. If no screenshots are uploaded, the link will not appear. You can add a caption for each screenshot. 4. Benefits - These will appear on the Product Profile’s homepage and appear at the top of the Features & Benefits section. Benefits differ from features in that benefits should highlight how this product will affect the customer. Example: A security program could highlight a benefit for their program as 24/7 security without slowing down your computer. A feature would be their proprietary Active Threat Detection technology. You need to indicate a short title and a brief description of each benefit. You can add several benefits to your product by clicking on the + Add another benefit button. Please make sure that you click on Save and Next to save your profile details. This will take you to the Support page. Support: The following screenshot gives you an overview of where the information you add to the Support page will appear on your product page so that you have a better understanding of the various sections. How to complete the Manage Support Information page? 1. Support phone number – Provide a phone number that a customer can use to reach you for support needs. 2. Support email address – Provide an email address that a customer can use to reach you for support needs. 3. Knowledge base/Help center URL – Provide a knowledge base URL that a customer can use to find answers for their support questions. 4. Support details - Provide any other details around support for your application such as support hours. Please make sure that you click on Save and Next to save your support information details. This will take you to the Pricing page. Pricing: How to complete the Pricing page? Please liaise with Temenos over this section - marketplace@temenos.com. 1. Revenue model – Select the revenue model for your product: Free, One time or Recurring. If you select Free , simply click on Save Plan to save your pricing details. If you select One Time or Recurring , you will need to insert further information - i.e. whether you are offering a free trial or not (and if you do, how long is the trial for), what is the price. Please make sure that you click on Save Plan to save your pricing details. Getting your products published: Once you have created and configured your product, whether Download, Web App or Web App (manual setting), click on Publish on the left-hand side of your product page. We will receive notification that you have set up your product on Temenos MarketPlace. Once we have checked it, we will publish it and it will be live on the store."
  },
  "marketplace/register-confirmation.html": {
    "href": "marketplace/register-confirmation.html",
    "title": "Join MarketPlace form confirmation",
    "keywords": "THANK YOU FOR FILLING OUT THE MARKETPLACE FORM! One of our team members will contact you shortly."
  },
  "integration/integration.html": {
    "href": "integration/integration.html",
    "title": "",
    "keywords": "Note Temenos' Integration offering makes banks more agile, by enabling them to integrate systems much faster and more cost-efficiently, and to become more competitive by enabling near real-time, highly scalable, self-assisted and multi-channel banking 24/7."
  },
  "integration/manage-events.html": {
    "href": "integration/manage-events.html",
    "title": "Manage Events",
    "keywords": "Event Delivery with Jboss Integration Service provides the asynchronous Event delivery functionality through a store and forward interface table and a TSA Service. The Events are generated, for example, when a transaction happens for which an Integration Flow is attached. Performing a transaction triggers an event in integration framework and this event will be consumed by JMS queue or by a middleware, eventually. From the transaction and associated applications, the data enrichments are built as defined in the Flow and an XML representation of the Event is generated. This XML would be confirming to the schema representation of the Flow and stored in the IF.EVENTS.INTERFACE.TABLE within T24 into the EVENT.DATA field. The transaction continues and gets completed normally. A dedicated TSA Service called INTEGRATION.SERVICE needs to be executed to deliver the events through CALLJEE method. When the event delivery happens this data will be transformed to XML value and delivered to JMS Queue. Consuming Events IF Event messages are delivered always in XML format. By running the INTEGRATION.SERVICE, the XML message is delivered to the application server JMS Queue by having the configurations in Parameter record and JMS queue configurations in the application server. Default parameter record containing the queue name is given below. And the application server side configurations are already handled for the above default queue. With this above configuration XML Message can be delivered to the JMS Queue, later this has to be consumed by a listener program. The custom listener program can be built in Java run in the same application server and then the message has to be translated to understandable format for the outside application that will receive them. Before consuming the event, the listener program should check for the JMS message header in order to identify if that event is indeed supposed to be consumed by it or not. For this to happen it must be set the MSG.PROP.NAME field (for example taskId) into the Parameter record and that field to be also defined into the event as a custom field (taskId equal with a value that will be used by listener to search for it into the JMS header). Note The MSG.PROP.NAME is a multi value field that defines the list of names to be used to create properties to set in the JMS message header. For each value in this field, a property would be added to the JMS message header with the value obtained from an equivalent field in the event record. We need to consider the following: Message data can be retrieved by implementing MessageListener class and through the method onMessage(Message msg); Retrieved XML message can be parsed and redirected to the outside application by having supporting jar files like json-simple.jar, jdom.jar, etc.; Dependent jars to be mentioned in Maven dependency and Maven build can help us building the classes to a Jar file; Jar has to be deployed in the Application Server. Note Please refer to next IntegrationFrameworkEventMDB template project. This is a sample MDB for consuming events from Integration Framework Events Queue. This MDB is configured to consume messages from queue/eventQueue and will echo event XML."
  },
  "integration/reference.html": {
    "href": "integration/reference.html",
    "title": "",
    "keywords": ""
  },
  "integration/view-events.html": {
    "href": "integration/view-events.html",
    "title": "Integration Framework View Events",
    "keywords": "View Events To see what triggers an event , please check first Generate Events section from above. View Event Record Any change (create/ amend) of a record can be observed as an event record in IF.EVENTS.INTERFACE.TABLE. The event created in previous example from Generate Events section can be seen as follows: Type IF.EVENTS.INTERFACE.TABLE in the command line On the new screen, go to List Live File and press validate Go to the Selection Screen button (search). Below is an example of one of the options to search the event created before: To display the event data details, click on the magnifier button:"
  },
  "main/faq.html": {
    "href": "main/faq.html",
    "title": "FAQ",
    "keywords": "Publishing your MarketPlace product What is MarketPlace? Developed as a self-service, online digital store, MarketPlace is a platform that connects fintech providers with some of the worlds largest financial institutions focused on sourcing innovation. MarketPlace presents an unprecedented business opportunity to distribute integrated third-party products and services to Temenos customers. What is a MarketPlace Product? MarketPlace Product is a page describing your application. All MarketPlace Providers have the ability to create a page on the MarketPlace to advertise their product to Temenos customers. See below answers about content and product pages types. What content can I display on my MarketPlace Product page? Your product page should deliver a high-quality overview of your organisation and a demo experience that will get potential customers hooked and wanting more. The MarketPlace is capable of delivering video, whitepapers and other sales collateral, but crucially can offer users a walk-through of your product via a Downloadable or WebApp product type free trial demo. Product page types There are two main product page types available; 1. The Web App will deliver a URL, via a short-cut created in the customers 'My Apps' page 2. The Download product type will immediately offer a downloadable file (.zip) The Web App has two variant modes; a. The Web App instantly delivers a user to a URL of your choice via a MyApps shortcut. This product page type allows automated distribution of your demo and therefore has the lowest associated admin overhead, although you need to make sure the front-end is ready to receive customers and that any demo use-cases are documented either on MarketPlace or your web front-end. b. The Web App (Manual set up) delivers the same shortcut as above, but this is only accessible following your manual approval. Whats my Product integration type? Temenos will not publish 'Referral Only' product pages, so please select Full Integration . Whats my usage model? We recommend selecting Multiple Users to ensure your product can have multiple consumers from the same prospect organisation. Whats my revenue model? As our Enterprise level sales are completed off-line, we currently recommend selecting 'Free' for this section. What should I show in my MarketPlace Product Demo? As a MarketPlace Developer, you have access to the MarketPlace Provider Sandbox to show how your product engages with T24 and begin the customer onboarding experience. The best demonstrations present no-risk novelty in a familiar setting, which can be easily converted into a sale once the customer is comfortable using your product. Tell the customer that you understand their needs. You know what problems your customers need to fix and you know how your product can help. The Features and Benefits section of your MarketPlace product page can explain what makes your product rise above the competition. Why not add a public YouTube or Vimeo video link, press articles and current customer icons to help strengthen your case? Show a vision of the future, where your product is integrated with theirs. Connect a MarketPlace Provider Sandbox linked web-frontend or downloadable plug-in, to allow a user to familiarise themselves with your product during the free trial demo. Why not speak to your sales team to see which demo use-cases result in 'aha' moments for their prospective customers? Do let the customer experience the product, your way. You can customise the demo with your best use cases to ensure the right experience is delivered. Different trial lengths are available, but a 30-day trial allows a customer to get used to using your product, increasing the odds of long-term adoption once the trial expires. What should I connect to the MarketPlace Provider Sandbox? We recommend a web-frontend that allows a user to experience your product while leveraging T24 model bank data. - Describe your use-case(s) on the MarketPlace product page - Connect your web-frontend to the MarketPlace Provider Sandbox - Connect the product to the MarketPlace product page - Run through any required integration tests so you can capture demo user data - Publish the product page and follow-up on activated trials How do I create my MarketPlace product page? You need to be set-up as a Developer on your organisational profile. To check if you have Developer rights, login to the Temenos MarketPlace , click Manage , Account , Users . What is my Product Page URL? Product pages under construction will have a different URL once published. It is advisable to wait until the product page is fully live, before executing any promotion. T24 General Questions How do I get the T24 account list? Login to T24 BrowserWeb Go to USER menu > Account > Open Current Account In this screen, go up to More Actions button and select \"List Live File\" from drop down button Press Go button > entire account list with live records is displayed How to open a Till? Go to User Menu > Retail Operation > Account Transactions > Teller > Head Teller Operations > Till Administration > Create New Till Check first the list of open tills and make sure you choose a different ID than the ones listed here. Insert a 4 digit number for the new teller in New Till Creation box and then press enter. In the new screen, Till Status should be checked as open and Teller should be your user Id , which you can select from the dropdown list. Press commit button > Your till is now open and you are able to deposit funds for your customer. How to get the XML file generated? 1. Login to BrowserWeb and put the TSM service to STOP a. Type TS, TSM b. Select STOP and press commit button 2. Delete the F.TSA.STATUS table using DBTools a. Please login to DBTools and clear the content of TSA.STATUS table by typing the JQL command: “CLEAR-FILE F.TSA.STATUS” 3. Go back to BrowserWeb and put the TSM to START a. Type TS, TSM b. Select START and press Commit button 4. Now go to TAFJEE and start the TSM a. From your organization, click on MONITOR APPLICATION, then click on Execute Servlet and them start TSM as showed below:"
  },
  "main/fundstransfer.html": {
    "href": "main/fundstransfer.html",
    "title": "Create a Funds Transfer",
    "keywords": "Funds Transfer Funds Transfer is used to effect payments from one account to another account either internally or externally and is related to CUSTOMER and ACCOUNT applications. Initiate a Fund Transfer Type FT I F3 or FUNDS.TRANSFER I F3 . ( FT is shortname of FUNDS.TRANSFER ) Enter the required details of Fund Transfer and click on Validate button: If you don’t provide the required (mandatory) information, then an error message will display on the window. If all the information is correct, then you’ll get successful message of Funds Transfer with transaction reference number. Transaction reference number is necessary to authorise the Fund Transfer. (Response example: Txn Complete: FT16113L60X5 17:58:08 13 DEC 2017 FUNDS.TRANSFER I ) Note You can avoid authorising a transaction by using comma version of Funds Transfer. e.g. use FT, I F3 or FUNDS.TRANSFER, I F3 instead of FT I F3 or FUNDS.TRANSFER I F3 Authorise the Funds Transfer Login to T24 with a different user to authorise the above Funds Transfer. Inputter is not allowed to authorise any transaction. In T24 you can configure how many authorisers are required for a transaction. Enter this command in command window FT A FT16113L60X5 or FUNDS.TRANSFER A FT16113L60X5 Click on the Authorise a deal button You will see a success message for successful transaction ( Txn Complete: FT16113L60X5 18:12:51 13 DEC 2017 FUNDS.TRANSFER A ) Now this transaction is LIVE in T24"
  },
  "main/index.html": {
    "href": "main/index.html",
    "title": "",
    "keywords": "Connect Your App"
  },
  "main/login-retail.html": {
    "href": "main/login-retail.html",
    "title": "Login to Retail",
    "keywords": "Login to Internet Banking In order to be able to login to the Retail Internet Banking application you will need to launch the Retail application from UXP tool. The UXP tool and Retail package are available into your MyApps section in MarketPlace. They must be downloaded and installed as per the steps mentioned here . Open the Developer.exe file from UXP folder Go to Presentation Editor Click right on Responsive > Run A web page is opening where the Retail internet banking credentials must be inserted. Type required credentials (either the ones communicated separately into the Welcome email or the External User that you have created by yourself) Press Sign In button If you are logging in for the first time with the user then you will also need to agree to Terms and Conditions and then to press Continue button. The accounts list of the customer logged in should be displayed on the screen."
  },
  "main/login-t24.html": {
    "href": "main/login-t24.html",
    "title": "Login to T24",
    "keywords": "Login to T24 BrowserWeb If you are MarketPlace Provider, check your Temenos Sandbox product (or your Welcome email) and get the BrowserWeb URL and required credentials to login in T24. *Example*: https://<sandboxId>.temenos.cloud/BrowserWeb Type the credentials and then click on Sign in Note The first time you login with the credentials shared in the Welcome email you will be asked to set your own password."
  },
  "main/teller.html": {
    "href": "main/teller.html",
    "title": "Teller Operations",
    "keywords": "Cash Deposits In order to deposit funds to a new account, you can choose to do a Cash deposit operation through Teller application. Please keep in mind that you will need to have an opened Till in order to be able to deposit funds. Login to T24 BrowserWeb Go to User Menu > Retail Operation > Account Transactions > Teller > Teller Operations > Teller Cash > Cash Deposit Local ( **Note : if you want to credit an account which has a different currency than local one, choose Cash Deposit Foreign ) Insert the Deposit Amount and the Credit Account Under Cash denom ination table, make sure you choose correct number of units related to the amount inserted Press Commit button> Transaction is completed. You can now check the customer's account balance: Go to User Menu > Account > Account Entries > Entries for Today Insert the Account Number and click Find button"
  },
  "main/users.html": {
    "href": "main/users.html",
    "title": "User Retail Banking",
    "keywords": "Users There are two types of users in T24: Internal user = Bank stuff External user = Bank customer Please see below more details about internal user and what is the process of creation of an external user. Internal Users There are different types of internal users with different capabilities and admin rights based on their roles such as: Customer Service Agent, Account Office, Customer Relation Manager, Supervisor etc. Usually, for testing and demo purposes, you will need two simple users. You can have one user to create, modify records, effect transactions, inquire the database and other operations and a second user to authorize any changes that you do. Note Once you have been provided access to Temenos Sandbox, you will automatically receive two specific users along with a standard password, which you can change first time when you login. External Users Note Each External User is related to: a customer (i.e., the person who enters the system through an External User) an internet service arrangement channel permissions The external user creation process involves the following steps: Create a Customer in T24 Create an Internet Service Arrangement Authorise the Internet Service Arrangement Create a Channel Permission Create the External User Authorise the Channel User Activate External User Create a Customer in T24 Please follow this user guide to see more details about a T24 customer and how to create one. Create an Internet Service Arrangement An Internet Service Arrangement is an instance of a certain product that is linked to a specific customer. This arrangement is a personalized instance of a Internet Banking product that defines what the user gets to view when they access the system. When creating the arrangement, some default settings are included. Go to User Menu > Product Catalog > Create Online Banking Arrangement From Category list (under Product Groups) select > Internet Services > Temenos Connect Retail > TCIB Personal Internet Banking, which will create a new arrangement: A new window is displayed > Insert the Customer ID (for the client you want to provide Internet access) and click validate button > An internet service arrangement is created with default settings Note down the arrangement Id Authorise the Internet Service Arrangement Log out and login again with a different user in order to authorise the arrangement In the command line type AA.ARRANGEMENT.ACTIVITY A AAACT171073FPYW1YK (AA.ARRANGEMENT.ACTIVITY A + the arrangement id ) Press enter and then authorize the transaction (double tick button) Transaction is complete Create a Channel Permission Under Admin Menu > click External User Administration > Create/Manage Online Banking Access > Manage Permissions Click Create New Permission > Insert your customer Id > Give a Group Name (at your choice), for example IB (Internet Banking) > Click Find Window expands > Click Create Group Permission Window expands with Channel Permission: insert Description (at your choice) select Type (click on the field, if you want to see its definition and rules) from Dropdown List, select the types of Products you want to give permission for select the Permission type (for example, if you want to allow the external user to do transactions, choose 'Transact', if you want to give him only view rights, select 'See' etc) click Commit button transaction is complete > there is no need to authorise this phase Note Important! When creating the Group Permission, the products created previously (for example current accounts) will not show up in this menu and will NOT be available in the Internet Banking application. In order to create an account for which you want to give Internet access to the customer, please follow this section of Accounts user guide. After creating the account arrangement, the new account will be automatically available into Products list from Group Permission (see below example, image 3) and also into the Internet Banking application. Create the External User Under Admin Menu > click External User Administration > Create/ Manage Online Banking Access > Create External User In the new screen displayed, type the following: External User Creation ( RETAIL ): type a name that the customer will use to login Name ( Cersei Baratheon ): customer's system name Channel ( INTERNET ): click scroll down button Arrangement ( AA171077M827 ): click scroll down button Allowed Customer ( 190207 ): click scroll down button Channel Permission ( 190207-TC ): click scroll down button Start Date ( 26 JAN 2018 ): use calendar and choose today's date End Date ( 26 JUN 2018 ): use calendar and choose user's availability date Authentication Type ( External ): make sure 'External' is checked Authorise the Channel User Logout and login with a different user Go to Admin Menu > External User Administration > Authorise Online Banking Access > Authorise Channel User At this moment Record status appears as 'INAU' = unauthorised > Commit the record Activate External User You can log back with previous user Go to Admin Menu > External User Administration > Create/Manage Online Banking Access > Manage External Users - a search screen is displayed > enter customer id and click find from scroll button on the right, select Modify Channel User > press enter change status from 'Initiated' into 'Active' Commit the deal (no need for authorization at this step) External user is created You can now insert User ID and password 123456 to login to TCIB application"
  },
  "marketplace/shared_sandbox.html": {
    "href": "marketplace/shared_sandbox.html",
    "title": "Shared Sandbox",
    "keywords": "Shared Sandbox A shared sandbox is a Temenos Sandbox that will be available for multiple providers. The providers will have limited functionalities on this sandbox. Each provider will have dedicated user credentials to login into T24 BrowserWeb . Each provider will have to create the external user to connect to Retail (Internet & Mobile Banking applications). Each provider must be aware that the data can be easily lost in this sandbox. The providers can do C reate R ead U pdate & D elete the data from T24 either via API or BrowserWeb . Core Banking available APIs can be easily accessed by using link address https:// {your sandbox address}/Prospect-iris/Prospect.svc/GB0010001/ and the users and passwords that where communicated via email for accessing the T24 BrowserWeb. These APIs will give access to handle customers, accounts, external users, teller transactions. Internet & Mobile Banking available APIs can be easily accessed by using link address: https:// {your sandbox address}/Channels-iris/Channels.svc/GB0010001/ and the users and passwords that where communicated via email for accessing Retail. These APIs will provide internet services to the user agent application including Direct Debits , Deposits , Cheques , Cards , Loans , Payment Orders , Standing Orders and Messages . Most of the APIs are available in Prospect-IRIS, if any of the provider asks for another API then MarketPlace team will add new API in the package and provide the access. Useful information Getting start guide How to create an external user to connect to Retail (Internet & Mobile Banking applications): Create a new customer Create accounts Effect a cash deposit Effect a funds transfer Assign external user"
  },
  "marketplace/technical.html": {
    "href": "marketplace/technical.html",
    "title": "",
    "keywords": ""
  },
  "marketplace/what-do-you-get.html": {
    "href": "marketplace/what-do-you-get.html",
    "title": "What Do You Get",
    "keywords": "We work closely and collaboratively with our providers and partners to deliver innovative solutions that meet evolving customer needs. Your MarketPlace provider fee includes: • a T24 sandbox environment in the cloud for the development and testing of the products, prior to publishing • access to the documentation and development tools such as the user experience environment Edge IDE and the Temenos design studio • access to the developer forum • access to the MarketPlace community platform for product searching and market research • the ability to publish products onto MarketPlace • the promotion of your products on the MarketPlace webstore, all searchable by Google • the promotion of your products by Temenos – Sales and marketing activities – to existing customers and prospects Full Provider Terms and Conditions can be found here ."
  },
  "apis/psd2/funds-transfer-v1.html": {
    "href": "apis/psd2/funds-transfer-v1.html",
    "title": "Funds Transfer Provider APIs",
    "keywords": "Funds Transfer Provider APIs"
  },
  "apis/psd2/accounts-v1.html": {
    "href": "apis/psd2/accounts-v1.html",
    "title": "Accounts Provider APIs",
    "keywords": "Accounts Provider APIs"
  },
  "apis/psd2/payments-v1.html": {
    "href": "apis/psd2/payments-v1.html",
    "title": "Payments Provider APIs",
    "keywords": "Payments Provider APIs"
  },
  "apis/psd2/funds-transfer-v1/createPayment.html": {
    "href": "apis/psd2/funds-transfer-v1/createPayment.html",
    "title": "createPayment",
    "keywords": "createPayment Used to create Funds Transfer record. createPayment Used to create Funds Transfer record. Request POST /order/PSD2/payments/[?validate_only] Parameters Name Type Value Notes *payload Used to create Funds Transfer record. validate_only boolean Used to create Funds Transfer record. Responses Status Code Description Samples 200 createPaymentExampleResponse default createPaymentErrorResponse"
  },
  "apis/psd2/funds-transfer-v1/createSEPAPayment.html": {
    "href": "apis/psd2/funds-transfer-v1/createSEPAPayment.html",
    "title": "createSEPAPayment",
    "keywords": "createSEPAPayment Used to create SEPA Funds Transfer record. createSEPAPayment Used to create SEPA Funds Transfer record. Request POST /order/PSD2/payments/SEPA[?validate_only] Parameters Name Type Value Notes *payload Used to create SEPA Funds Transfer record. validate_only boolean Used to create SEPA Funds Transfer record. Responses Status Code Description Samples 200 createSEPAPaymentExampleResponse default createSEPAPaymentErrorResponse"
  },
  "apis/psd2/funds-transfer-v1/getPayment.html": {
    "href": "apis/psd2/funds-transfer-v1/getPayment.html",
    "title": "getPayment",
    "keywords": "getPayment Used to get the Funds Transfer record. getPayment Used to get the Funds Transfer record. Request GET /order/PSD2/payments/{paymentId}/ Parameters Name Type Value Notes *paymentId string Identifies uniquely each Funds Transfer transaction. 12 character standard id. Explanation of Reference Number format: FTYYDDDNNNNN where FT-Application indicator - FT for the Funds Transfer Application, YY-Last two digits of year when transaction is processed, DDD-Julian day number within year when the F.T. is processed, NNNNN-Sequence number. Responses Status Code Description Samples 200 getPaymentExampleResponse default getPaymentErrorResponse"
  },
  "apis/psd2/funds-transfer-v1/updatePaymentTransfer.html": {
    "href": "apis/psd2/funds-transfer-v1/updatePaymentTransfer.html",
    "title": "updatePaymentTransfer",
    "keywords": "updatePaymentTransfer Used to update or submit the Funds Transfer record. updatePaymentTransfer Used to update or submit the Funds Transfer record. Request PUT /order/PSD2/payments/{paymentId}/ Parameters Name Type Value Notes *paymentId string Identifies uniquely each Funds Transfer transaction. 12 character standard id. Explanation of Reference Number format: FTYYDDDNNNNN where FT-Application indicator - FT for the Funds Transfer Application, YY-Last two digits of year when transaction is processed, DDD-Julian day number within year when the F.T. is processed, NNNNN-Sequence number. Responses Status Code Description Samples 200 updatePaymentTransfer Response default updatePaymentTransfer error response"
  },
  "apis/psd2/funds-transfer-v1/getSEPAPayment.html": {
    "href": "apis/psd2/funds-transfer-v1/getSEPAPayment.html",
    "title": "getSEPAPayment",
    "keywords": "getSEPAPayment Used to get SEPA Funds Transfer record. getSEPAPayment Used to get SEPA Funds Transfer record. Request GET /order/PSD2/payments/{paymentId}/SEPA Parameters Name Type Value Notes *paymentId string Identifies uniquely each Funds Transfer transaction. 12 character standard id. Explanation of Reference Number format: FTYYDDDNNNNN where FT-Application indicator - FT for the Funds Transfer Application, YY-Last two digits of year when transaction is processed, DDD-Julian day number within year when the F.T. is processed, NNNNN-Sequence number. Responses Status Code Description Samples 200 getSEPAPaymentExampleResponse default getSEPAPaymentErrorResponse"
  },
  "apis/psd2/funds-transfer-v1/updateSEPAPaymentTransfer.html": {
    "href": "apis/psd2/funds-transfer-v1/updateSEPAPaymentTransfer.html",
    "title": "updateSEPAPaymentTransfer",
    "keywords": "updateSEPAPaymentTransfer Used to update or submit SEPA Funds Transfer record. updateSEPAPaymentTransfer Used to update or submit SEPA Funds Transfer record. Request PUT /order/PSD2/payments/{paymentId}/SEPA Parameters Name Type Value Notes *paymentId string Identifies uniquely each Funds Transfer transaction. 12 character standard id. Explanation of Reference Number format: FTYYDDDNNNNN where FT-Application indicator - FT for the Funds Transfer Application, YY-Last two digits of year when transaction is processed, DDD-Julian day number within year when the F.T. is processed, NNNNN-Sequence number. Responses Status Code Description Samples 200 updateSEPAPaymentTransfer Response default updateSEPAPaymentTransfer error response"
  },
  "apis/psd2/funds-transfer-v1/getPaymentTransferList.html": {
    "href": "apis/psd2/funds-transfer-v1/getPaymentTransferList.html",
    "title": "getPaymentTransferList",
    "keywords": "getPaymentTransferList Used to get the Funds Transfer records list of a particular account. getPaymentTransferList Used to get the Funds Transfer records list of a particular account. Request GET /order/PSD2/payments/account/{accountId}/list[?startDate&endDate&page_size&viewType&page_start&page_token] Parameters Name Type Value Notes *accountId string The field holds the reference of the underlying ACCOUNT application. This should just be the same as trying a new input on ACCOUNT application. startDate string The start date from which records in response should be displayed. endDate string The end date upto which records in response should be displayed. page_size number The total number of records per page viewType string Indicates the summary or detail of account. S-Summary, D-Detail. page_start number The record no from which the response should be displayed page_token string Random and unique string for each page. Used for security purpose Responses Status Code Description Samples 200 getPaymentTransferListResponse default getPaymentTransferListErrorResponse"
  },
  "apis/psd2/funds-transfer-v1/getPaymentTransferStatus.html": {
    "href": "apis/psd2/funds-transfer-v1/getPaymentTransferStatus.html",
    "title": "getPaymentTransferStatus",
    "keywords": "getPaymentTransferStatus Used to get the status of Funds Transfer record. getPaymentTransferStatus Used to get the status of Funds Transfer record. Request GET /order/PSD2/payments/{paymentId}/status[?page_size&page_start&page_token] Parameters Name Type Value Notes *paymentId string Identifies uniquely each Funds Transfer transaction. 12 character standard id. Explanation of Reference Number format: FTYYDDDNNNNN where FT-Application indicator - FT for the Funds Transfer Application, YY-Last two digits of year when transaction is processed, DDD-Julian day number within year when the F.T. is processed, NNNNN-Sequence number. page_size number The total number of records per page page_start number The record no from which the response should be displayed page_token string Random and unique string for each page. Used for security purpose Responses Status Code Description Samples 200 getPaymentTransferStatusResponse default getPaymentTransferStatusErrorResponse"
  },
  "apis/psd2/accounts-v1/getTransactionHistory.html": {
    "href": "apis/psd2/accounts-v1/getTransactionHistory.html",
    "title": "getTransactionHistory",
    "keywords": "getTransactionHistory Used to get the transactions of a particular account. getTransactionHistory Used to get the transactions of a particular account. Request GET /holdings/PSD2/accounts/{accountId}/transactions[?fromDate&toDate&viewType&toTime&page_size&page_start&page_token] Parameters Name Type Value Notes *accountId string The field holds the reference of the underlying ACCOUNT application. This should just be the same as trying a new input on ACCOUNT application. fromDate string The start date from which records in response should be displayed. toDate string The end date upto which records in response should be displayed. viewType string Indicates the summary or detail of account. S-Summary, D-Detail. toTime string Indicates the time upto which records in response should be displayed. page_size number The total number of records per page page_start number The record from which the response should be displayed page_token string Random and unique string for each page. Used for security purpose Responses Status Code Description Samples 200 getTransactionHistoryResponse default getTransactionHistoryErrorResponse"
  },
  "apis/psd2/accounts-v1/getAccountBalance.html": {
    "href": "apis/psd2/accounts-v1/getAccountBalance.html",
    "title": "getAccountBalance",
    "keywords": "getAccountBalance Used to get the balance of a particular account. getAccountBalance Used to get the balance of a particular account. Request GET /holdings/PSD2/accounts/{accountId}/balance[?page_size&page_start&page_token] Parameters Name Type Value Notes *accountId string The field holds the reference of the underlying ACCOUNT application. This should just be the same as trying a new input on ACCOUNT application. page_size number The total number of records per page page_start number The record from which the response should be displayed page_token string Random and unique string for each page. Used for security purpose Responses Status Code Description Samples 200 getAccountBalanceResponse default getAccountBalanceErrorResponse"
  },
  "apis/psd2/accounts-v1/getAccountStatus.html": {
    "href": "apis/psd2/accounts-v1/getAccountStatus.html",
    "title": "getAccountStatus",
    "keywords": "getAccountStatus Used to get the status of a particular account. getAccountStatus Used to get the status of a particular account. Request GET /holdings/PSD2/accounts/{accountId}/status[?page_size&page_start&page_token] Parameters Name Type Value Notes *accountId string The field holds the reference of the underlying ACCOUNT application. This should just be the same as trying a new input on ACCOUNT application. page_size number The total number of records per page page_start number The record from which the response should be displayed page_token string Random and unique string for each page. Used for security purpose Responses Status Code Description Samples 200 getAccountStatusResponse default getAccountStatusErrorResponse"
  },
  "apis/psd2/accounts-v1/getAccountOverview.html": {
    "href": "apis/psd2/accounts-v1/getAccountOverview.html",
    "title": "getAccountOverview",
    "keywords": "getAccountOverview Used to get the overview of a particular account. getAccountOverview Used to get the overview of a particular account. Request GET /holdings/PSD2/accounts/{accountId}[?page_size&page_start&page_token] Parameters Name Type Value Notes *accountId string The field holds the reference of the underlying ACCOUNT application. This should just be the same as trying a new input on ACCOUNT application. page_size number The total number of records per page page_start number The record from which the response should be displayed page_token string Random and unique string for each page. Used for security purpose Responses Status Code Description Samples 200 getAccountOverviewResponse default getAccountOverviewErrorResponse"
  },
  "apis/psd2/accounts-v1/getAccountBalanceReport.html": {
    "href": "apis/psd2/accounts-v1/getAccountBalanceReport.html",
    "title": "getAccountBalanceReport",
    "keywords": "getAccountBalanceReport Used to get the balance report of a particular account. getAccountBalanceReport Used to get the balance report of a particular account. Request GET /holdings/PSD2/accounts/{accountId}/balances?amount&currency[&transactionType&debitCreditIndicator&page_size&page_start&page_token] Parameters Name Type Value Notes *accountId string The field holds the reference of the underlying ACCOUNT application. This should just be the same as trying a new input on ACCOUNT application. *amount string Indicates the amount you want to check. *currency string Indicates the Currency of the amount you want to check.3 type SSS (uppercase alpha) character or 1-3 numeric character Currency code. Example: For US Dollars, use USD. transactionType string This is the code by which the Transaction details can be identified.The following ranges have been assigned within EBS: 001 - 099 = Data Capture 100 - 199 = Internal & General use 200 - 249 = Funds Transfer 250 - 299 = Money Market/Fiduciaries 300 - 349 = Foreign Exchange 350 - 399 = Interest & Charges 400 - 499 = Commercial Loans & Deposits 500 - 599 = Trade Finance 600 - 649 = Securities 650 - 699 = Financial Futures 700 - 749 = Retail Banking 750 - 799 = Bonds. Validation Rules:1-10(Max Value) numeric characters Transaction Code. debitCreditIndicator string Indicates if the Transaction code is to be used for Debit or Credit entries. This information is used by the system to verify the sign of the Transaction.Validation Rules:Up to 6 type SSS (uppercase alpha) characters: CREDIT DEBIT. page_size number The total number of records per page page_start number The record from which the response should be displayed page_token string Random and unique string for each page. Used for security purpose Responses Status Code Description Samples 200 getAccountBalanceReportResponse default getAccountBalanceReportErrorResponse"
  },
  "apis/psd2/payments-v1/getPaymentOrder.html": {
    "href": "apis/psd2/payments-v1/getPaymentOrder.html",
    "title": "getPaymentOrder",
    "keywords": "getPaymentOrder Used to get the PaymentOrder record. getPaymentOrder Used to get the PaymentOrder record. Request GET /order/PSD2/paymentOrders/{paymentOrderId} Parameters Name Type Value Notes *paymentOrderId string ID of the payment order record Responses Status Code Description Samples 200 getPaymentOrderExampleResponse default getPaymentOrderErrorResponse"
  },
  "apis/psd2/payments-v1/updatePaymentOrder.html": {
    "href": "apis/psd2/payments-v1/updatePaymentOrder.html",
    "title": "updatePaymentOrder",
    "keywords": "updatePaymentOrder Used to update or submit the PaymentOrder record. updatePaymentOrder Used to update or submit the PaymentOrder record. Request PUT /order/PSD2/paymentOrders/{paymentOrderId} Parameters Name Type Value Notes *paymentOrderId string ID of the payment order record Responses Status Code Description Samples 200 updatePaymentOrderExampleResponse default updatePaymentOrderErrorResponse"
  },
  "apis/psd2/payments-v1/getPaymentOrderList.html": {
    "href": "apis/psd2/payments-v1/getPaymentOrderList.html",
    "title": "getPaymentOrderList",
    "keywords": "getPaymentOrderList Used to get the PaymentOrder records list of a particular account. getPaymentOrderList Used to get the PaymentOrder records list of a particular account. Request GET /order/PSD2/paymentOrders/accounts/{accountId}/orderList[?startDate&endDate&page_size&viewType&page_start&page_token] Parameters Name Type Value Notes *accountId string The field holds the reference of the underlying ACCOUNT application. This should just be the same as trying a new input on ACCOUNT application. startDate string The start date from which records in response should be displayed. endDate string The end date upto which records in response should be displayed. page_size number The total number of records per page viewType string Indicates the summary or detail of account. S-Summary, D-Detail. page_start number The record no from which the response should be displayed page_token string Random and unique string for each page. Used for security purpose Responses Status Code Description Samples 200 getPaymentOrderListResponse default getPaymentOrderListErrorResponse"
  },
  "apis/psd2/payments-v1/createPaymentInitiation.html": {
    "href": "apis/psd2/payments-v1/createPaymentInitiation.html",
    "title": "createPaymentInitiation",
    "keywords": "createPaymentInitiation Used to create PaymentOrder records. createPaymentInitiation Used to create PaymentOrder records. Request POST /order/PSD2/paymentOrders[?validate_only] Parameters Name Type Value Notes *payload Used to create PaymentOrder records. validate_only boolean Used to create PaymentOrder records. Responses Status Code Description Samples 200 createPaymentInitiationExampleResponse default createPaymentInitiationErrorResponse"
  },
  "apis/psd2/payments-v1/getPaymentOrderStatus.html": {
    "href": "apis/psd2/payments-v1/getPaymentOrderStatus.html",
    "title": "getPaymentOrderStatus",
    "keywords": "getPaymentOrderStatus Used to get the status of a PaymentOrder record. getPaymentOrderStatus Used to get the status of a PaymentOrder record. Request GET /order/PSD2/paymentOrders/{paymentOrderId}/status[?page_size&page_start&page_token] Parameters Name Type Value Notes *paymentOrderId string ID of the payment order record page_size number The total number of records per page page_start number The record no from which the response should be displayed page_token string Random and unique string for each page. Used for security purpose Responses Status Code Description Samples 200 getPaymentOrderStatusResponse default getPaymentOrderStatusErrorResponse"
  }
}